var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ComponentCanDeactivate.html",[0,0.217,1,2.658]],["body/interfaces/ComponentCanDeactivate.html",[0,0.4,1,4.888,2,0.643,3,0.184,4,0.158,5,0.158,6,4.102,7,4.102,8,0.265,9,3.44,10,5.558,11,5.558,12,4.976,13,5.356,14,6.373,15,4.193,16,5.558,17,5.558,18,6.663,19,4.976,20,4.193,21,0.695,22,4.976,23,5.558,24,5.558,25,0.184,26,0.461,27,4.193,28,0.133,29,0.018,30,2.156,31,4.102,32,5.356,33,3.743,34,2.002,35,2.175,36,4.582,37,0.68,38,4.582,39,4.102,40,4.582,41,0.836,42,0.223,43,0.461,44,2.404,45,2.404,46,1.012,47,3.743,48,3.014,49,0.917,50,4.102,51,4.582,52,5.558,53,3.743,54,1.511,55,4.582,56,2.073,57,3.014,58,5.983,59,0.87,60,4.582,61,5.558,62,4.582,63,0.836,64,3.904,65,4.976,66,4.582,67,3.743,68,4.582,69,4.102,70,3.743,71,4.582,72,4.582,73,4.582,74,4.582,75,4.582,76,4.102,77,3.218,78,4.582,79,4.582,80,0.012,81,0.014,82,0.012]],["title/modules/CoreModule.html",[83,3.253,84,2.912]],["body/modules/CoreModule.html",[3,0.21,4,0.18,5,0.18,29,0.017,30,2.278,35,2.482,42,0.21,46,1.155,80,0.013,81,0.015,82,0.013,84,5.378,85,4.27,86,6.058,87,6.964,88,6.964,89,5.227,90,6.964,91,4.27,92,6.058]],["title/interfaces/DataPage.html",[0,0.217,93,0.594]],["body/interfaces/DataPage.html",[0,0.453,2,0.41,3,0.117,4,0.101,5,0.101,8,0.347,21,0.714,25,0.117,26,0.487,28,0.181,29,0.018,37,0.774,41,0.754,42,0.272,43,0.474,49,0.682,59,0.457,63,0.533,80,0.01,81,0.01,82,0.007,93,0.754,94,0.56,95,0.816,96,1.107,97,1.049,98,1.181,99,1.181,100,1.049,101,0.86,102,0.696,103,1.004,104,0.587,105,0.587,106,0.487,107,0.587,108,0.831,109,0.587,110,0.398,111,0.186,112,0.647,113,0.533,114,0.831,115,0.587,116,1.186,117,0.717,118,1.149,119,1.142,120,0.964,121,0.964,122,0.964,123,0.964,124,0.964,125,1.076,126,0.964,127,0.533,128,0.587,129,0.587,130,0.964,131,0.964,132,0.533,133,0.587,134,0.56,135,1.107,136,0.952,137,0.56,138,0.56,139,0.831,140,0.969,141,0.717,142,0.86,143,0.792,144,0.831,145,0.792,146,0.587,147,1.055,148,0.533,149,0.587,150,0.587,151,0.63,152,1.007,153,1.055,154,0.791,155,0.587,156,0.647,157,0.792,158,0.73,159,0.587,160,0.587,161,0.533,162,0.587,163,0.56,164,0.587,165,0.587,166,0.533,167,0.56,168,0.507,169,0.754,170,0.56,171,0.613,172,0.507,173,0.56,174,0.507,175,0.507,176,0.507,177,0.587,178,0.457,179,0.58,180,0.533,181,0.587,182,0.587,183,0.587,184,0.831,185,1.004,186,0.754,187,0.792,188,0.831,189,0.831,190,0.587,191,1.004,192,0.587,193,0.587,194,0.242,195,0.871,196,0.533,197,0.587,198,0.587,199,0.587,200,0.587,201,0.533,202,0.533,203,0.587,204,0.999,205,0.964,206,0.717,207,0.399,208,0.587,209,0.964,210,0.587,211,0.533,212,0.964,213,0.587,214,0.533,215,0.533,216,0.919,217,0.587,218,0.587,219,0.587,220,0.587,221,0.587,222,0.587,223,0.587,224,0.587,225,0.281,226,0.56,227,0.831,228,0.717,229,0.792,230,0.587,231,0.587,232,0.457,233,0.56,234,0.56,235,0.507,236,0.587,237,0.587,238,0.56,239,0.587,240,0.587,241,0.587,242,0.533,243,0.533,244,0.831,245,0.964,246,0.964,247,0.831,248,0.587,249,0.533,250,0.964,251,0.533,252,0.587,253,0.533,254,0.587,255,0.533,256,0.919,257,0.587,258,0.587,259,0.587,260,0.587,261,0.587,262,0.262,263,0.533,264,0.56,265,0.533,266,0.587,267,0.587,268,0.587]],["title/classes/Datation.html",[46,0.719,269,2.013]],["body/classes/Datation.html",[0,0.246,3,0.076,4,0.157,5,0.065,8,0.304,9,1.166,21,0.524,25,0.148,26,0.247,27,2.782,28,0.179,29,0.018,30,0.679,42,0.168,43,0.495,46,0.416,48,1.958,54,1.969,56,2.192,57,1.958,69,4.707,80,0.011,81,0.011,82,0.005,95,0.759,102,0.652,106,0.467,110,0.505,111,0.373,141,0.94,151,0.634,156,0.295,158,0.555,171,0.442,172,0.327,178,0.988,179,0.518,194,0.526,196,0.344,207,0.446,225,0.489,262,0.506,269,4.135,270,1.166,271,1.422,272,2.964,273,2.59,274,3.56,275,2.511,276,4.707,277,3.749,278,3.749,279,3.421,280,3.749,281,4.845,282,1.347,283,3.449,284,4.273,285,3.389,286,3.449,287,3.065,288,3.449,289,3.159,290,4.273,291,3.159,292,3.449,293,2.591,294,3.449,295,3.449,296,3.958,297,3.449,298,3.449,299,2.09,300,1.042,301,2.664,302,3.449,303,2.245,304,1.968,305,2.664,306,2.664,307,2.431,308,2.664,309,2.664,310,2.185,311,2.185,312,2.185,313,2.185,314,2.185,315,2.185,316,2.185,317,2.664,318,2.185,319,2.431,320,1.998,321,2.664,322,2.339,323,2.09,324,2.185,325,4.264,326,2.842,327,2.379,328,2.185,329,2.664,330,4.181,331,2.431,332,1.885,333,2.185,334,2.185,335,1.885,336,2.664,337,3.609,338,2.185,339,3.421,340,2.941,341,2.664,342,2.274,343,4.235,344,3.187,345,4.271,346,2.664,347,2.185,348,2.941,349,2.185,350,2.782,351,2.185,352,2.941,353,2.185,354,3.827,355,2.431,356,2.185,357,3.301,358,2.185,359,2.185,360,2.185,361,2.185,362,2.185,363,1.687,364,1.885,365,1.687,366,2.185,367,2.185,368,2.185,369,2.185,370,2.185,371,3.793,372,3.749,373,2.245,374,2.09,375,1.738,376,2.664,377,2.245,378,2.185,379,2.185,380,1.958,381,2.185,382,2.446,383,3.159,384,2.245,385,2.245,386,2.941,387,2.09,388,2.664,389,3.749,390,2.941,391,2.664,392,2.431,393,2.09,394,3.159,395,2.664,396,2.185,397,2.185,398,2.664,399,2.185,400,2.185,401,2.664,402,2.185,403,2.664,404,2.664,405,2.782,406,3.301,407,3.749,408,2.431,409,2.664,410,2.664,411,2.664,412,2.664,413,2.664,414,3.749,415,2.664,416,2.664,417,2.664,418,2.431,419,2.664,420,4.541,421,2.664,422,2.59,423,2.664,424,2.664,425,2.431,426,2.664,427,3.749,428,2.431,429,2.59,430,2.664,431,2.664,432,2.185,433,2.431,434,4.548,435,1.885,436,2.185,437,2.245,438,3.139,439,1.885,440,3.724,441,3.449,442,6.273,443,2.59,444,3.449,445,2.664,446,2.664,447,1.54,448,2.664,449,3.449,450,3.449,451,3.301,452,2.664,453,2.185,454,2.755,455,2.664,456,2.664,457,3.301,458,3.749,459,4.559,460,6.423,461,5.616,462,3.749,463,4.559,464,3.749,465,3.749,466,2.185,467,3.449,468,2.185,469,1.885,470,3.237,471,3.967,472,3.449,473,3.749,474,4.187,475,3.449,476,3.749,477,3.449,478,3.449,479,3.449,480,1.324,481,1.54,482,1.324,483,2.431,484,2.431,485,2.431,486,2.431,487,2.431,488,2.431,489,2.404,490,1.54,491,1.54,492,1.54,493,1.54,494,1.54,495,1.54,496,1.54,497,1.54,498,1.54,499,1.54,500,1.54,501,1.54,502,1.54,503,1.54,504,1.54,505,1.54,506,1.54,507,1.54,508,1.998,509,1.687,510,1.687,511,2.245,512,1.54,513,3.301,514,1.687,515,1.687,516,1.687,517,1.687,518,1.687,519,1.687,520,1.687,521,1.687,522,1.687,523,1.687,524,1.687,525,1.687,526,1.687,527,1.422,528,1.687,529,1.687,530,1.687,531,1.324,532,1.687,533,1.687,534,1.687,535,1.687,536,1.687,537,1.687,538,1.687,539,1.54,540,1.422,541,1.422,542,1.54,543,1.422,544,1.687,545,1.687,546,1.687,547,1.687,548,2.664,549,1.54,550,2.664,551,1.422,552,1.561,553,1.54,554,2.664,555,1.687,556,1.687,557,1.687,558,2.664,559,1.54,560,4.081,561,1.54,562,1.687,563,2.664,564,1.687,565,2.664,566,1.687,567,1.687,568,1.687,569,1.687,570,1.422,571,1.687,572,2.664,573,1.687,574,3.301,575,1.687,576,2.664,577,1.687,578,2.245,579,1.687,580,1.687,581,2.664,582,1.324,583,1.687,584,1.687,585,1.687,586,4.337,587,3.749,588,2.316,589,3.301,590,2.664,591,4.337,592,4.541,593,3.749,594,1.687,595,1.24,596,1.687,597,1.324,598,4.148,599,2.431,600,1.687,601,1.687,602,1.687,603,1.687,604,1.687,605,1.687,606,3.97,607,1.687,608,1.687,609,1.687,610,1.687,611,1.687,612,1.687,613,1.687,614,1.687,615,1.687,616,1.687,617,2.09,618,1.687,619,1.54,620,1.687,621,1.687,622,1.687,623,1.324,624,1.687,625,1.687]],["title/interfaces/DatationFormatOptions.html",[0,0.217,337,2.013]],["body/interfaces/DatationFormatOptions.html",[0,0.3,2,0.365,3,0.104,4,0.155,5,0.09,8,0.15,9,1.608,21,0.561,25,0.104,26,0.315,27,1.96,28,0.152,29,0.018,30,0.936,42,0.198,43,0.492,46,0.574,48,1.709,54,2.075,56,2.379,57,1.709,80,0.011,81,0.011,82,0.007,95,0.703,102,0.613,106,0.467,110,0.41,111,0.166,151,0.58,158,0.504,171,0.386,178,0.985,179,0.533,225,0.529,269,4.09,271,1.96,272,2.886,273,2.668,274,3.25,275,2.402,276,4.423,277,3.401,278,3.401,279,3.103,280,3.401,281,4.423,285,3.037,287,2.101,289,1.96,291,1.96,293,1.608,296,3.103,301,2.326,303,1.96,304,2.133,305,2.326,306,2.326,307,2.122,308,2.326,309,2.326,317,2.326,319,2.122,320,1.851,321,2.326,322,1.431,325,2.866,326,2.903,327,2.236,330,3.388,336,2.326,337,3.398,339,3.668,340,3.154,341,2.326,342,1.895,343,4.084,344,2.954,345,4.234,346,2.326,348,3.154,350,1.96,352,1.825,354,1.96,357,2.326,371,3.824,372,3.401,373,1.96,374,1.825,375,1.518,376,2.326,377,1.96,380,1.709,382,2.219,383,2.866,384,1.96,385,1.96,386,2.668,387,1.825,388,2.326,389,3.401,390,2.668,391,2.326,392,2.122,393,1.825,394,2.866,395,2.326,398,2.326,401,2.326,403,2.326,404,2.326,405,1.96,406,3.401,407,3.401,408,2.122,409,2.326,410,2.326,411,2.326,412,2.326,413,2.326,414,3.401,415,2.326,416,2.326,417,2.326,418,2.122,419,2.326,420,4.423,421,2.326,422,2.668,423,2.326,424,2.326,425,2.122,426,2.326,427,3.401,428,2.122,429,2.668,430,2.326,431,2.326,433,2.122,434,3.966,437,1.96,438,3.057,440,3.668,443,1.825,446,2.326,448,2.326,452,2.326,454,2.954,455,2.326,456,2.326,457,2.326,458,3.401,462,3.401,464,3.401,465,3.401,470,3.397,473,3.401,476,3.401,480,1.825,481,2.122,482,1.825,483,3.668,484,4.294,485,4.294,486,4.294,487,4.294,488,4.294,489,2.572,490,2.122,491,2.122,492,2.122,493,2.122,494,2.122,495,2.122,496,2.122,497,2.122,498,2.122,499,2.122,500,2.122,501,2.122,502,2.122,503,2.122,504,2.122,505,2.122,506,2.122,507,2.122,508,2.234,509,2.326,510,2.326,511,2.866,512,2.122,513,4.02,514,2.326,515,2.326,516,2.326,517,2.326,518,2.326,519,2.326,520,2.326,521,2.326,522,2.326,523,2.326,524,2.326,525,2.326,526,2.326,527,1.96,528,2.326,529,2.326,530,2.326,531,1.825,532,2.326,533,2.326,534,2.326,535,2.326,536,2.326,537,2.326,538,2.326,539,2.122,540,1.96,541,1.96,542,2.122,543,1.96,544,2.326,545,2.326,546,2.326,547,2.326,548,3.401,549,2.122,550,3.401,551,1.96,552,1.993,553,2.122,554,3.401,555,2.326,556,2.326,557,2.326,558,3.401,559,2.122,560,4.706,561,2.122,562,2.326,563,3.401,564,2.326,565,3.401,566,2.326,567,2.326,568,2.326,569,2.326,570,1.96,571,2.326,572,3.401,573,2.326,574,4.02,575,2.326,576,3.401,577,2.326,578,2.866,579,2.326,580,2.326,581,3.401,582,1.825,583,2.326,584,2.326,585,2.326,586,4.915,587,4.423,588,2.732,589,4.02,590,3.401,591,4.915,592,5.077,593,4.423,594,2.326,595,1.709,596,2.326,597,1.825,598,4.419,599,3.103,600,2.326,601,2.326,602,2.326,603,2.326,604,2.326,605,2.326,606,4.291,607,2.326,608,2.326,609,2.326,610,2.326,611,2.326,612,2.326,613,2.326,614,2.326,615,2.326,616,2.326,617,2.668,618,2.326,619,2.122,620,2.326,621,2.326,622,2.326,623,1.825,624,2.326,625,2.326]],["title/interfaces/DatationModel.html",[0,0.217,274,2.14]],["body/interfaces/DatationModel.html",[0,0.328,2,0.36,3,0.103,4,0.154,5,0.088,8,0.148,9,2.327,21,0.614,25,0.103,26,0.312,27,1.932,28,0.168,29,0.018,30,0.923,42,0.197,43,0.531,46,0.566,48,1.685,54,2.07,56,2.365,57,1.685,80,0.011,81,0.011,82,0.006,95,0.697,102,0.653,106,0.455,110,0.468,111,0.164,151,0.577,158,0.499,171,0.38,178,1.002,179,0.625,225,0.526,269,4.084,271,1.932,272,3.053,273,3.129,274,3.438,275,2.397,276,5.054,277,4.679,278,4.679,279,4.27,280,4.679,281,5.054,285,3.021,287,2.079,289,1.932,291,1.932,293,1.585,296,3.071,301,2.293,303,1.932,304,2.119,305,2.293,306,2.293,307,2.093,308,2.293,309,2.293,317,2.293,319,2.093,320,1.836,321,2.293,322,1.416,325,2.836,326,2.897,327,2.221,330,3.36,336,2.293,337,3.234,339,3.639,340,3.129,341,2.293,342,1.875,343,3.966,344,2.93,345,4.22,346,2.293,348,3.129,350,1.932,352,1.799,354,1.932,357,2.293,371,3.813,372,3.366,373,1.932,374,1.799,375,1.496,376,2.293,377,1.932,380,1.685,382,2.196,383,2.836,384,1.932,385,1.932,386,2.641,387,1.799,388,2.293,389,3.366,390,2.641,391,2.293,392,2.093,393,1.799,394,2.836,395,2.293,398,2.293,401,2.293,403,2.293,404,2.293,405,1.932,406,3.366,407,3.366,408,2.093,409,2.293,410,2.293,411,2.293,412,2.293,413,2.293,414,3.366,415,2.293,416,2.293,417,2.293,418,2.093,419,2.293,420,4.393,421,2.293,422,2.641,423,2.293,424,2.293,425,2.093,426,2.293,427,3.366,428,2.093,429,3.129,430,2.293,431,2.293,433,2.093,434,3.943,437,1.932,438,3.037,440,3.639,443,1.799,446,2.293,448,2.293,452,2.293,454,2.93,455,2.293,456,2.293,457,2.293,458,3.366,462,3.366,464,3.366,465,3.366,470,3.383,473,3.366,476,3.366,480,1.799,481,2.093,482,2.641,483,3.071,484,3.071,485,3.071,486,3.071,487,3.071,488,3.071,489,2.565,490,2.093,491,2.093,492,2.093,493,2.093,494,2.093,495,2.093,496,2.093,497,2.093,498,2.093,499,2.093,500,2.093,501,2.093,502,2.093,503,2.093,504,2.093,505,2.093,506,2.093,507,2.093,508,2.224,509,2.293,510,2.293,511,2.836,512,2.093,513,3.987,514,2.293,515,2.293,516,2.293,517,2.293,518,2.293,519,2.293,520,2.293,521,2.293,522,2.293,523,2.293,524,2.293,525,2.293,526,2.293,527,1.932,528,2.293,529,2.293,530,2.293,531,1.799,532,2.293,533,2.293,534,2.293,535,2.293,536,2.293,537,2.293,538,2.293,539,2.093,540,1.932,541,1.932,542,2.093,543,1.932,544,2.293,545,2.293,546,2.293,547,2.293,548,3.366,549,2.093,550,3.366,551,1.932,552,1.973,553,2.093,554,3.366,555,2.293,556,2.293,557,2.293,558,3.366,559,2.093,560,4.679,561,2.093,562,2.293,563,3.366,564,2.293,565,3.366,566,2.293,567,2.293,568,2.293,569,2.293,570,1.932,571,2.293,572,3.366,573,2.293,574,3.987,575,2.293,576,3.366,577,2.293,578,2.836,579,2.293,580,2.293,581,3.366,582,1.799,583,2.293,584,2.293,585,2.293,586,4.891,587,4.393,588,2.714,589,3.987,590,3.366,591,4.891,592,5.054,593,4.393,594,2.293,595,1.685,596,2.293,597,1.799,598,4.408,599,3.071,600,2.293,601,2.293,602,2.293,603,2.293,604,2.293,605,2.293,606,4.278,607,2.293,608,2.293,609,2.293,610,2.293,611,2.293,612,2.293,613,2.293,614,2.293,615,2.293,616,2.293,617,2.641,618,2.293,619,2.093,620,2.293,621,2.293,622,2.293,623,1.799,624,2.293,625,2.293]],["title/injectables/EnvService.html",[34,1.172,626,2.658]],["body/injectables/EnvService.html",[3,0.188,4,0.161,5,0.161,8,0.271,25,0.188,26,0.52,28,0.175,29,0.017,30,1.687,34,2.029,35,2.223,42,0.188,44,2.456,45,2.456,46,1.034,64,3.955,70,4.6,76,5.041,80,0.012,81,0.014,82,0.012,106,0.424,110,0.501,194,0.52,207,0.462,275,2.518,300,3.34,342,3.284,626,4.6,627,2.897,628,4.682,629,6.267,630,4.248,631,7.264,632,6.527,633,5.631,634,6.527,635,5.631,636,6.527,637,6.527,638,5.61,639,6.527,640,6.527,641,4.248,642,5.041,643,6.527,644,6.527,645,6.527,646,7,647,7,648,6.527,649,6.527,650,5.426,651,5.041,652,5.426,653,6.527]],["title/injectables/ErrorService.html",[34,1.172,654,2.912]],["body/injectables/ErrorService.html",[3,0.181,4,0.156,5,0.156,8,0.318,25,0.181,28,0.131,29,0.018,30,2.142,32,4.042,33,3.688,34,1.984,35,2.143,37,0.67,42,0.181,44,2.369,45,2.369,46,0.997,54,1.817,57,3.624,59,0.707,80,0.011,81,0.014,82,0.011,91,3.688,111,0.288,112,1.052,194,0.375,207,0.345,262,0.404,275,2.239,282,2.493,320,2.271,322,1.7,363,5.541,394,4.156,429,3.869,471,4.156,508,1.779,627,2.794,630,4.67,641,4.156,654,4.931,655,4.515,656,6.385,657,6.385,658,7.175,659,6.385,660,6.385,661,6.385,662,7.175,663,6.385,664,4.931,665,6.385,666,7.175,667,5.233,668,5.945,669,5.78,670,6.385,671,5.233,672,6.385,673,4.515,674,5.233,675,6.385,676,6.385,677,6.385,678,6.385,679,5.233,680,5.233,681,5.233,682,6.385,683,5.233,684,6.385,685,5.233,686,5.233,687,5.233,688,5.233,689,5.233,690,5.233,691,5.233,692,5.233,693,5.233,694,5.233,695,5.233,696,4.042,697,5.233,698,5.233]],["title/interfaces/ErrorWrapper.html",[0,0.217,113,0.594]],["body/interfaces/ErrorWrapper.html",[0,0.453,2,0.413,3,0.118,4,0.102,5,0.102,8,0.347,21,0.716,25,0.118,26,0.488,28,0.174,29,0.018,37,0.776,41,0.537,42,0.272,43,0.475,49,0.686,59,0.651,63,0.537,80,0.01,81,0.01,82,0.007,93,0.537,94,0.564,95,0.754,96,0.836,97,0.592,98,1.053,99,1.053,100,0.592,101,0.863,102,0.684,103,1.007,104,0.592,105,0.592,106,0.487,107,0.592,108,0.836,109,0.836,110,0.488,111,0.366,112,0.897,113,0.759,114,0.836,115,0.592,116,1.188,117,0.722,118,1.152,119,1.144,120,0.969,121,0.969,122,0.969,123,0.969,124,0.969,125,1.077,126,0.969,127,0.537,128,0.592,129,0.592,130,0.969,131,0.969,132,0.537,133,0.592,134,0.564,135,1.11,136,0.955,137,0.564,138,0.564,139,0.836,140,0.971,141,0.722,142,0.863,143,0.797,144,0.836,145,0.797,146,0.592,147,1.058,148,0.537,149,0.592,150,0.592,151,0.632,152,1.009,153,1.058,154,0.795,155,0.592,156,0.651,157,0.797,158,0.732,159,0.592,160,0.592,161,0.537,162,0.592,163,0.564,164,0.592,165,0.592,166,0.537,167,0.564,168,0.511,169,0.759,170,0.564,171,0.617,172,0.511,173,0.564,174,0.511,175,0.511,176,0.511,177,0.592,178,0.461,179,0.583,180,0.537,181,0.592,182,0.592,183,0.592,184,0.836,185,1.007,186,0.759,187,0.797,188,0.836,189,0.836,190,0.592,191,1.007,192,0.592,193,0.592,194,0.244,195,0.874,196,0.537,197,0.592,198,0.592,199,0.592,200,0.592,201,0.537,202,0.537,203,0.592,204,1.003,205,0.969,206,0.722,207,0.4,208,0.592,209,0.969,210,0.592,211,0.537,212,0.969,213,0.592,214,0.537,215,0.537,216,0.923,217,0.592,218,0.592,219,0.592,220,0.592,221,0.592,222,0.592,223,0.592,224,0.592,225,0.284,226,0.564,227,0.836,228,0.722,229,0.797,230,0.592,231,0.592,232,0.461,233,0.564,234,0.564,235,0.511,236,0.592,237,0.592,238,0.564,239,0.592,240,0.592,241,0.592,242,0.537,243,0.537,244,0.836,245,0.969,246,0.969,247,0.836,248,0.592,249,0.537,250,0.969,251,0.537,252,0.592,253,0.537,254,0.592,255,0.537,256,0.923,257,0.592,258,0.592,259,0.592,260,0.592,261,0.592,262,0.264,263,0.537,264,0.564,265,0.537,266,0.592,267,0.592,268,0.592]],["title/interfaces/ExistResult.html",[0,0.217,253,0.594]],["body/interfaces/ExistResult.html",[0,0.453,2,0.416,3,0.119,4,0.102,5,0.102,8,0.341,21,0.717,25,0.119,26,0.489,28,0.174,29,0.018,37,0.779,41,0.541,42,0.272,43,0.5,49,0.689,59,0.464,63,0.541,80,0.011,81,0.011,82,0.007,93,0.541,94,0.568,95,0.757,96,0.839,97,0.596,98,1.055,99,1.055,100,0.596,101,0.689,102,0.684,103,1.01,104,0.596,105,0.596,106,0.487,107,0.596,108,0.839,109,0.596,110,0.401,111,0.189,112,0.653,113,0.541,114,0.839,115,0.596,116,1.189,117,0.725,118,1.154,119,1.145,120,0.972,121,0.972,122,0.972,123,0.972,124,0.972,125,1.078,126,0.972,127,0.541,128,0.596,129,0.596,130,0.972,131,0.972,132,0.541,133,0.596,134,0.568,135,1.113,136,0.958,137,0.568,138,0.568,139,0.839,140,0.973,141,0.725,142,0.866,143,0.8,144,0.839,145,0.8,146,0.596,147,1.06,148,0.541,149,0.596,150,0.596,151,0.633,152,1.01,153,1.06,154,0.797,155,0.596,156,0.653,157,0.8,158,0.734,159,0.596,160,0.596,161,0.541,162,0.596,163,0.568,164,0.596,165,0.596,166,0.541,167,0.568,168,0.514,169,0.762,170,0.568,171,0.619,172,0.514,173,0.568,174,0.514,175,0.514,176,0.514,177,0.596,178,0.464,179,0.586,180,0.541,181,0.596,182,0.596,183,0.596,184,1.113,185,1.01,186,0.762,187,0.8,188,0.839,189,0.839,190,0.596,191,1.01,192,0.596,193,0.596,194,0.246,195,0.875,196,0.541,197,0.596,198,0.596,199,0.596,200,0.596,201,0.541,202,0.541,203,0.596,204,1.006,205,0.972,206,0.725,207,0.401,208,0.596,209,0.972,210,0.596,211,0.541,212,0.972,213,0.596,214,0.541,215,0.541,216,0.926,217,0.596,218,0.596,219,0.596,220,0.596,221,0.596,222,0.596,223,0.596,224,0.596,225,0.285,226,0.568,227,0.839,228,0.725,229,0.8,230,0.596,231,0.596,232,0.464,233,0.568,234,0.568,235,0.514,236,0.596,237,0.596,238,0.568,239,0.596,240,0.596,241,0.596,242,0.541,243,0.541,244,0.839,245,0.972,246,0.972,247,0.839,248,0.596,249,0.541,250,0.972,251,0.541,252,0.596,253,0.762,254,1.055,255,0.541,256,0.926,257,0.596,258,0.596,259,0.596,260,0.596,261,0.596,262,0.265,263,0.541,264,0.568,265,0.541,266,0.596,267,0.596,268,0.596]],["title/interfaces/FacetDefinition.html",[0,0.217,211,0.594]],["body/interfaces/FacetDefinition.html",[0,0.453,2,0.41,3,0.117,4,0.101,5,0.101,8,0.361,21,0.714,25,0.117,26,0.487,28,0.181,29,0.018,37,0.773,41,0.533,42,0.272,43,0.474,49,0.681,59,0.457,63,0.533,80,0.01,81,0.01,82,0.007,93,0.533,94,0.559,95,0.751,96,0.831,97,0.587,98,1.048,99,1.048,100,0.587,101,0.681,102,0.683,103,1.004,104,0.587,105,0.587,106,0.488,107,0.587,108,0.831,109,0.587,110,0.398,111,0.186,112,0.647,113,0.533,114,0.831,115,0.587,116,1.186,117,0.717,118,1.149,119,1.171,120,0.964,121,0.964,122,0.964,123,0.964,124,0.964,125,1.076,126,0.964,127,0.533,128,0.587,129,0.587,130,0.964,131,0.964,132,0.533,133,0.587,134,0.559,135,1.106,136,0.951,137,0.559,138,0.559,139,0.831,140,0.969,141,0.717,142,0.86,143,0.792,144,0.831,145,0.792,146,0.587,147,1.054,148,0.533,149,0.587,150,0.587,151,0.63,152,1.021,153,1.054,154,0.791,155,0.587,156,0.647,157,0.792,158,0.729,159,0.587,160,0.587,161,0.533,162,0.587,163,0.559,164,0.587,165,0.587,166,0.533,167,0.559,168,0.507,169,0.754,170,0.559,171,0.613,172,0.507,173,0.559,174,0.507,175,0.507,176,0.507,177,0.587,178,0.457,179,0.58,180,0.533,181,0.587,182,0.587,183,0.587,184,0.831,185,1.004,186,0.754,187,0.792,188,0.831,189,0.831,190,0.587,191,1.004,192,0.587,193,0.587,194,0.242,195,0.871,196,0.533,197,0.587,198,0.587,199,0.587,200,0.587,201,0.533,202,0.533,203,0.587,204,1.054,205,1.048,206,0.905,207,0.399,208,0.587,209,1.149,210,0.587,211,0.754,212,1.149,213,1.048,214,0.533,215,0.533,216,0.919,217,0.587,218,0.587,219,0.587,220,0.587,221,0.587,222,0.587,223,0.587,224,0.587,225,0.281,226,0.559,227,0.831,228,0.717,229,0.792,230,0.587,231,0.587,232,0.457,233,0.559,234,0.559,235,0.507,236,0.587,237,0.587,238,0.559,239,0.587,240,0.587,241,0.587,242,0.533,243,0.533,244,0.831,245,0.964,246,0.964,247,0.831,248,0.587,249,0.533,250,0.964,251,0.533,252,0.587,253,0.533,254,0.587,255,0.533,256,0.919,257,0.587,258,0.587,259,0.587,260,0.587,261,0.587,262,0.261,263,0.533,264,0.559,265,0.533,266,0.587,267,0.587,268,0.587]],["title/interfaces/FlagDefinition.html",[0,0.217,215,0.594]],["body/interfaces/FlagDefinition.html",[0,0.453,2,0.412,3,0.118,4,0.101,5,0.101,8,0.362,21,0.715,25,0.118,26,0.488,28,0.179,29,0.018,37,0.775,41,0.535,42,0.272,43,0.475,49,0.684,59,0.459,63,0.535,80,0.01,81,0.01,82,0.007,93,0.535,94,0.562,95,0.752,96,0.833,97,0.59,98,1.051,99,1.051,100,0.59,101,0.684,102,0.687,103,1.006,104,0.59,105,0.59,106,0.487,107,0.59,108,0.833,109,0.59,110,0.399,111,0.187,112,0.649,113,0.535,114,0.833,115,0.59,116,1.187,117,0.719,118,1.151,119,1.172,120,0.967,121,0.967,122,0.967,123,0.967,124,0.967,125,1.076,126,0.967,127,0.535,128,0.59,129,0.59,130,0.967,131,0.967,132,0.535,133,0.59,134,0.562,135,1.108,136,0.953,137,0.562,138,0.562,139,0.833,140,0.97,141,0.719,142,0.862,143,0.794,144,0.833,145,0.794,146,0.59,147,1.056,148,0.535,149,0.59,150,0.59,151,0.631,152,1.008,153,1.056,154,0.793,155,0.59,156,0.649,157,0.794,158,0.731,159,0.59,160,0.59,161,0.535,162,0.59,163,0.562,164,0.59,165,0.59,166,0.535,167,0.562,168,0.509,169,0.756,170,0.562,171,0.615,172,0.509,173,0.562,174,0.509,175,0.509,176,0.509,177,0.59,178,0.459,179,0.582,180,0.535,181,0.59,182,0.59,183,0.59,184,0.833,185,1.006,186,0.756,187,0.794,188,0.833,189,0.833,190,0.59,191,1.006,192,0.59,193,0.59,194,0.243,195,0.872,196,0.535,197,0.59,198,0.59,199,0.59,200,0.59,201,0.535,202,0.535,203,0.59,204,1.056,205,0.967,206,0.719,207,0.399,208,0.59,209,1.151,210,0.59,211,0.535,212,1.151,213,0.59,214,0.756,215,0.756,216,0.921,217,0.59,218,0.59,219,0.59,220,0.59,221,0.59,222,0.59,223,0.59,224,0.59,225,0.282,226,0.562,227,0.833,228,0.719,229,0.794,230,0.59,231,0.59,232,0.459,233,0.562,234,0.562,235,0.509,236,0.59,237,0.59,238,0.562,239,0.59,240,0.59,241,0.59,242,0.535,243,0.535,244,0.833,245,0.967,246,0.967,247,0.833,248,0.59,249,0.535,250,0.967,251,0.535,252,0.59,253,0.535,254,0.59,255,0.535,256,0.921,257,0.59,258,0.59,259,0.59,260,0.59,261,0.59,262,0.263,263,0.535,264,0.562,265,0.535,266,0.59,267,0.59,268,0.59]],["title/interfaces/Fragment.html",[0,0.217,152,0.537]],["body/interfaces/Fragment.html",[0,0.454,2,0.41,3,0.117,4,0.101,5,0.101,8,0.347,21,0.714,25,0.117,26,0.506,28,0.174,29,0.018,37,0.773,41,0.533,42,0.272,43,0.474,49,0.681,59,0.457,63,0.533,80,0.01,81,0.01,82,0.007,93,0.533,94,0.559,95,0.751,96,0.831,97,0.587,98,1.048,99,1.048,100,0.587,101,0.681,102,0.683,103,1.004,104,0.587,105,0.587,106,0.487,107,0.587,108,0.831,109,0.587,110,0.398,111,0.306,112,0.647,113,0.533,114,0.831,115,0.587,116,1.186,117,0.717,118,1.149,119,1.142,120,0.964,121,0.964,122,0.964,123,0.964,124,0.964,125,1.076,126,0.964,127,0.533,128,0.587,129,0.587,130,0.964,131,0.964,132,0.533,133,0.587,134,0.559,135,1.106,136,0.951,137,0.559,138,0.559,139,0.964,140,0.99,141,0.832,142,0.908,143,0.919,144,0.964,145,0.792,146,0.587,147,1.095,148,0.533,149,0.587,150,0.587,151,0.662,152,1.051,153,1.095,154,0.969,155,0.831,156,0.751,157,0.919,158,0.757,159,0.831,160,1.048,161,0.533,162,0.587,163,0.559,164,0.587,165,0.587,166,0.533,167,0.559,168,0.507,169,0.754,170,0.559,171,0.613,172,0.507,173,0.559,174,0.507,175,0.507,176,0.507,177,0.587,178,0.457,179,0.58,180,0.533,181,0.587,182,0.587,183,0.587,184,0.831,185,1.004,186,0.754,187,0.792,188,0.831,189,0.831,190,0.587,191,1.004,192,0.587,193,0.587,194,0.242,195,0.871,196,0.533,197,0.587,198,0.587,199,0.587,200,0.587,201,0.533,202,0.533,203,0.587,204,0.999,205,0.964,206,0.717,207,0.399,208,0.587,209,0.964,210,0.587,211,0.533,212,0.964,213,0.587,214,0.533,215,0.533,216,0.919,217,0.587,218,0.587,219,0.587,220,0.587,221,0.587,222,0.587,223,0.587,224,0.587,225,0.281,226,0.559,227,0.831,228,0.717,229,0.792,230,0.587,231,0.587,232,0.457,233,0.559,234,0.559,235,0.507,236,0.587,237,0.587,238,0.559,239,0.587,240,0.587,241,0.587,242,0.533,243,0.533,244,0.831,245,0.964,246,0.964,247,0.831,248,0.587,249,0.533,250,0.964,251,0.533,252,0.587,253,0.533,254,0.587,255,0.533,256,0.919,257,0.587,258,0.587,259,0.587,260,0.587,261,0.587,262,0.261,263,0.533,264,0.559,265,0.533,266,0.587,267,0.587,268,0.587]],["title/injectables/GravatarService.html",[34,1.172,699,2.912]],["body/injectables/GravatarService.html",[3,0.19,4,0.163,5,0.163,8,0.273,25,0.19,28,0.137,29,0.018,30,2.039,34,2.039,35,2.242,42,0.19,44,2.478,45,2.478,46,1.043,54,1.999,77,3.976,80,0.012,81,0.014,82,0.012,102,0.585,106,0.451,110,0.392,111,0.302,156,0.886,194,0.392,207,0.361,225,0.545,256,1.265,262,0.423,275,2.283,282,2.561,320,2.334,322,1.778,327,2.137,342,2.355,470,2.759,489,1.947,508,2.23,627,2.922,699,5.067,700,4.722,701,6.561,702,6.561,703,7.646,704,5.473,705,6.561,706,5.067,707,6.426,708,6.561,709,7.284,710,6.561,711,4.27,712,6.561,713,6.561,714,4.27,715,4.722,716,5.473,717,5.473,718,5.473,719,5.473,720,5.473]],["title/interfaces/HasVersion.html",[0,0.217,103,0.594]],["body/interfaces/HasVersion.html",[0,0.454,2,0.411,3,0.117,4,0.101,5,0.101,8,0.347,9,1.811,21,0.774,25,0.117,26,0.488,28,0.179,29,0.018,37,0.774,41,0.534,42,0.272,43,0.474,49,0.683,59,0.458,63,0.534,80,0.01,81,0.01,82,0.007,93,0.534,94,0.561,95,0.752,96,0.832,97,0.589,98,1.05,99,1.05,100,0.589,101,0.683,102,0.684,103,1.044,104,1.05,105,1.05,106,0.487,107,1.05,108,1.108,109,0.589,110,0.398,111,0.187,112,0.648,113,0.534,114,0.832,115,0.589,116,1.186,117,0.719,118,1.15,119,1.143,120,0.966,121,0.966,122,0.966,123,0.966,124,0.966,125,1.076,126,0.966,127,0.534,128,0.589,129,0.589,130,0.966,131,0.966,132,0.534,133,0.589,134,0.561,135,1.108,136,0.953,137,0.561,138,0.561,139,0.832,140,0.97,141,0.719,142,0.861,143,0.793,144,0.832,145,0.793,146,0.589,147,1.056,148,0.534,149,0.589,150,0.589,151,0.631,152,1.007,153,1.056,154,0.792,155,0.589,156,0.648,157,0.793,158,0.73,159,0.589,160,0.589,161,0.534,162,0.589,163,0.561,164,0.589,165,0.589,166,0.534,167,0.561,168,0.508,169,0.755,170,0.561,171,0.614,172,0.508,173,0.561,174,0.508,175,0.508,176,0.508,177,0.589,178,0.458,179,0.581,180,0.534,181,0.589,182,0.589,183,0.589,184,0.832,185,1.005,186,0.755,187,0.793,188,0.832,189,0.832,190,0.589,191,1.005,192,0.589,193,0.589,194,0.243,195,0.872,196,0.534,197,0.589,198,0.589,199,0.589,200,0.589,201,0.534,202,0.534,203,0.589,204,1.001,205,0.966,206,0.719,207,0.399,208,0.589,209,0.966,210,0.589,211,0.534,212,0.966,213,0.589,214,0.534,215,0.534,216,0.92,217,0.589,218,0.832,219,0.589,220,0.589,221,0.589,222,0.589,223,0.589,224,0.589,225,0.282,226,0.561,227,0.832,228,0.719,229,0.793,230,0.589,231,0.589,232,0.458,233,0.561,234,0.561,235,0.508,236,0.589,237,0.589,238,0.561,239,0.589,240,0.589,241,0.589,242,0.534,243,0.534,244,0.832,245,0.966,246,0.966,247,0.832,248,0.589,249,0.534,250,0.966,251,0.534,252,0.589,253,0.534,254,0.589,255,0.534,256,0.92,257,0.589,258,0.589,259,0.589,260,0.589,261,0.589,262,0.262,263,0.534,264,0.561,265,0.534,266,0.589,267,0.589,268,0.589,721,3.391,722,2.926]],["title/classes/HistoricalDate.html",[46,0.719,723,2.658]],["body/classes/HistoricalDate.html",[0,0.244,3,0.099,4,0.085,5,0.085,8,0.297,9,1.526,20,1.86,21,0.808,25,0.099,26,0.303,28,0.177,29,0.018,30,0.888,42,0.175,43,0.4,46,0.545,48,2.405,54,2.131,56,2.439,59,0.572,80,0.006,81,0.009,82,0.006,102,0.615,106,0.424,110,0.525,111,0.366,112,0.572,140,0.407,141,0.428,151,0.632,156,0.386,161,0.45,178,0.386,179,0.612,194,0.534,207,0.438,214,0.667,225,0.496,232,0.572,262,0.513,269,4.123,270,1.526,272,3.478,273,3.785,274,2.865,275,2.557,279,3.558,282,1.654,285,2.409,287,2.409,289,3.635,291,3.635,293,3.184,299,3.06,300,1.364,304,2.526,320,2.121,322,2.398,323,3.06,325,4.414,326,2.439,327,2.694,329,3.899,330,4.065,331,2.014,335,2.465,337,3.452,340,1.732,342,2.403,343,4.538,344,3.384,345,3.614,348,1.732,350,2.758,352,3.384,354,1.86,371,3.545,373,1.86,374,2.567,375,3.259,377,1.86,380,1.622,382,2.135,383,2.758,384,3.635,385,3.635,386,2.567,387,1.732,429,3.384,434,4.065,435,2.465,437,1.86,438,2.262,447,2.986,459,2.465,463,2.465,470,1.44,482,1.732,489,2.57,508,2.027,527,1.86,531,1.732,540,1.86,541,1.86,552,1.918,570,1.86,578,1.86,582,1.732,595,1.622,597,2.567,598,3.384,606,3.06,617,3.06,696,2.207,711,1.86,723,4.203,724,4.875,725,1.86,726,3.655,727,4.402,728,4.203,729,4.237,730,4.818,731,4.818,732,4.818,733,4.818,734,5.049,735,4.237,736,4.237,737,4.237,738,4.237,739,4.402,740,3.655,741,4.237,742,2.858,743,3.655,744,2.858,745,4.356,746,3.655,747,2.858,748,3.899,749,2.858,750,2.858,751,2.858,752,2.858,753,2.858,754,2.858,755,2.858,756,2.858,757,3.655,758,2.858,759,3.655,760,2.858,761,3.655,762,2.858,763,2.858,764,2.986,765,3.272,766,2.858,767,2.858,768,2.858,769,2.858,770,4.237,771,3.655,772,2.858,773,4.313,774,3.655,775,2.858,776,2.858,777,4.237,778,2.858,779,4.313,780,3.558,781,2.858,782,2.858,783,2.858,784,2.858,785,2.014,786,3.655,787,2.858,788,2.986,789,3.558,790,2.465,791,5.728,792,3.655,793,2.465,794,2.465,795,5.953,796,2.465,797,2.465,798,2.207,799,4.818,800,2.465,801,4.356,802,3.655,803,2.465,804,3.655,805,2.465,806,2.465,807,2.465,808,3.899,809,2.465,810,2.465,811,2.465,812,3.655,813,2.465,814,2.465,815,4.356,816,2.465,817,2.465,818,2.465,819,2.465,820,3.655,821,2.465,822,3.655,823,2.465,824,2.465,825,3.655,826,2.465,827,4.356,828,2.465,829,3.655,830,2.465,831,2.465,832,2.465,833,2.465,834,2.465,835,2.465,836,2.465,837,2.465,838,2.465,839,5.389,840,5.389,841,4.356,842,3.272,843,4.818,844,4.818,845,4.818,846,2.465,847,2.465,848,2.465,849,4.356,850,4.818,851,4.356,852,4.356,853,2.207,854,2.207,855,3.655,856,2.465,857,1.622,858,2.465,859,2.465,860,2.465,861,2.465,862,3.655,863,2.014]],["title/interfaces/HistoricalDateModel.html",[0,0.217,727,2.658]],["body/interfaces/HistoricalDateModel.html",[0,0.328,2,0.428,3,0.122,4,0.105,5,0.105,8,0.176,9,2.637,20,2.301,21,0.796,25,0.122,26,0.354,28,0.154,29,0.018,30,1.099,42,0.197,43,0.253,46,0.674,48,2.007,54,2.186,56,1.38,59,0.478,80,0.008,81,0.011,82,0.008,102,0.549,106,0.392,110,0.407,112,0.478,140,0.503,141,0.53,151,0.617,161,0.557,178,0.478,179,0.428,225,0.512,232,0.478,269,4.039,272,3.544,273,3.928,274,3.912,275,2.432,285,1.687,287,1.687,289,2.301,291,2.301,293,2.637,299,2.143,304,2.661,320,2.024,322,1.149,325,4.219,326,2.531,327,2.745,329,2.731,330,2.301,337,3.039,340,2.143,342,1.521,343,4.535,344,3.23,345,3.449,348,2.143,350,2.301,352,3.449,371,3.68,373,2.301,374,2.143,375,2.869,377,2.301,382,1.782,383,2.301,384,3.215,385,3.215,386,2.993,387,2.143,429,2.993,434,4.371,438,1.888,447,3.481,470,1.782,482,2.993,489,2.662,508,2.203,527,2.301,531,2.143,540,2.301,541,2.301,552,1.601,570,2.301,578,2.301,595,2.007,597,2.993,598,3.734,606,3.449,617,3.449,696,2.731,711,2.301,723,4.011,724,2.301,725,2.301,726,3.05,727,4.342,728,4.733,730,3.05,731,3.05,732,3.05,733,3.05,739,3.481,740,3.05,743,3.05,745,3.05,746,3.05,748,3.814,757,3.05,759,3.05,761,3.05,764,2.492,765,2.731,773,3.814,779,4.396,780,3.481,786,3.05,788,2.492,789,4.011,790,3.05,791,6.066,792,4.261,793,3.05,794,3.05,795,6.243,796,3.05,797,3.05,798,2.731,799,5.315,800,3.05,801,4.91,802,4.261,803,3.05,804,4.261,805,3.05,806,3.05,807,3.05,808,4.396,809,3.05,810,3.05,811,3.05,812,4.261,813,3.05,814,3.05,815,4.91,816,3.05,817,3.05,818,3.05,819,3.05,820,4.261,821,3.05,822,4.261,823,3.05,824,3.05,825,4.261,826,3.05,827,4.91,828,3.05,829,4.261,830,3.05,831,3.05,832,3.05,833,3.05,834,3.05,835,3.05,836,3.05,837,3.05,838,3.05,839,5.793,840,5.793,841,4.91,842,3.814,843,5.315,844,5.315,845,5.315,846,3.05,847,3.05,848,3.05,849,4.91,850,5.315,851,4.91,852,4.91,853,2.731,854,2.731,855,4.261,856,3.05,857,2.007,858,3.05,859,3.05,860,3.05,861,3.05,862,4.261,863,2.492]],["title/interfaces/Item.html",[0,0.217,117,0.565]],["body/interfaces/Item.html",[0,0.453,2,0.403,3,0.115,4,0.099,5,0.099,8,0.36,21,0.71,25,0.115,26,0.496,28,0.185,29,0.018,37,0.768,41,0.524,42,0.271,43,0.471,49,0.674,59,0.45,63,0.524,80,0.01,81,0.01,82,0.007,93,0.524,94,0.551,95,0.744,96,0.822,97,0.578,98,1.041,99,1.041,100,0.578,101,0.674,102,0.686,103,1.037,104,0.578,105,0.578,106,0.488,107,0.578,108,0.822,109,0.578,110,0.394,111,0.304,112,0.64,113,0.524,114,0.956,115,0.822,116,1.226,117,0.825,118,1.176,119,1.168,120,1.143,121,1.143,122,1.143,123,1.143,124,1.143,125,1.082,126,0.956,127,0.524,128,0.578,129,0.578,130,0.956,131,0.956,132,0.524,133,0.578,134,0.551,135,1.1,136,0.945,137,0.551,138,0.551,139,0.822,140,0.965,141,0.709,142,0.854,143,0.783,144,0.822,145,0.783,146,0.578,147,1.048,148,0.524,149,0.578,150,0.578,151,0.627,152,1.003,153,1.048,154,0.784,155,0.578,156,0.64,157,0.783,158,0.725,159,0.578,160,0.578,161,0.524,162,0.578,163,0.551,164,0.578,165,0.578,166,0.524,167,0.551,168,0.499,169,0.746,170,0.551,171,0.606,172,0.499,173,0.551,174,0.499,175,0.499,176,0.499,177,0.578,178,0.45,179,0.574,180,0.524,181,0.578,182,0.578,183,0.578,184,0.822,185,0.998,186,0.746,187,0.783,188,0.822,189,0.822,190,0.578,191,0.998,192,0.578,193,0.578,194,0.238,195,0.867,196,0.524,197,0.578,198,0.578,199,0.578,200,0.578,201,0.524,202,0.524,203,0.578,204,0.992,205,0.956,206,0.709,207,0.396,208,0.578,209,0.956,210,0.578,211,0.524,212,0.956,213,0.578,214,0.524,215,0.524,216,0.911,217,0.578,218,0.578,219,0.578,220,0.578,221,0.578,222,0.578,223,0.578,224,0.578,225,0.277,226,0.551,227,0.822,228,0.709,229,0.783,230,0.578,231,0.578,232,0.45,233,0.551,234,0.551,235,0.499,236,0.578,237,0.578,238,0.551,239,0.578,240,0.578,241,0.578,242,0.524,243,0.524,244,0.822,245,0.956,246,0.956,247,0.822,248,0.578,249,0.524,250,0.956,251,0.524,252,0.578,253,0.524,254,0.578,255,0.524,256,0.911,257,0.578,258,0.578,259,0.578,260,0.578,261,0.578,262,0.257,263,0.524,264,0.551,265,0.524,266,0.578,267,0.578,268,0.578]],["title/interfaces/ItemFilter.html",[0,0.217,127,0.594]],["body/interfaces/ItemFilter.html",[0,0.452,2,0.398,3,0.114,4,0.098,5,0.098,8,0.359,21,0.768,25,0.114,26,0.483,28,0.187,29,0.018,37,0.763,41,0.517,42,0.271,43,0.469,49,0.667,59,0.444,63,0.517,80,0.01,81,0.01,82,0.007,93,0.517,94,0.543,95,0.739,96,0.949,97,0.57,98,1.171,99,1.171,100,0.57,101,0.667,102,0.691,103,0.993,104,0.57,105,0.57,106,0.487,107,0.57,108,1.094,109,0.57,110,0.391,111,0.415,112,0.633,113,0.517,114,0.814,115,0.57,116,1.178,117,0.702,118,1.138,119,1.135,120,1.138,121,1.138,122,1.138,123,0.949,124,1.138,125,1.071,126,1.035,127,0.738,128,1.035,129,1.035,130,0.949,131,0.949,132,0.517,133,0.57,134,0.543,135,1.094,136,0.939,137,0.543,138,0.543,139,0.814,140,0.961,141,0.702,142,0.849,143,0.775,144,0.814,145,0.775,146,0.57,147,1.043,148,0.517,149,0.57,150,0.57,151,0.624,152,1,153,1.043,154,0.778,155,0.57,156,0.633,157,0.775,158,0.721,159,0.57,160,0.57,161,0.517,162,0.57,163,0.543,164,0.57,165,0.57,166,0.517,167,0.543,168,0.492,169,0.738,170,0.543,171,0.6,172,0.492,173,0.543,174,0.492,175,0.492,176,0.492,177,0.57,178,0.444,179,0.568,180,0.517,181,0.57,182,0.57,183,0.57,184,0.814,185,0.993,186,0.738,187,0.775,188,0.814,189,0.814,190,0.57,191,0.993,192,0.57,193,0.57,194,0.235,195,0.864,196,0.517,197,0.57,198,0.57,199,0.57,200,0.57,201,0.517,202,0.517,203,0.57,204,0.986,205,0.949,206,0.702,207,0.393,208,0.57,209,0.949,210,0.57,211,0.517,212,0.949,213,0.57,214,0.517,215,0.517,216,0.904,217,0.57,218,0.57,219,0.57,220,0.57,221,0.57,222,0.57,223,0.57,224,0.57,225,0.273,226,0.543,227,0.814,228,0.702,229,0.775,230,0.57,231,0.57,232,0.444,233,0.543,234,0.543,235,0.492,236,0.57,237,0.57,238,0.543,239,0.57,240,0.57,241,0.57,242,0.517,243,0.517,244,0.814,245,0.949,246,0.949,247,0.814,248,0.57,249,0.517,250,0.949,251,0.517,252,0.57,253,0.517,254,0.57,255,0.517,256,0.904,257,0.57,258,0.57,259,0.57,260,0.57,261,0.57,262,0.254,263,0.517,264,0.543,265,0.517,266,0.57,267,0.57,268,0.57]],["title/interfaces/ItemInfo.html",[0,0.217,132,0.594]],["body/interfaces/ItemInfo.html",[0,0.453,2,0.404,3,0.116,4,0.099,5,0.099,8,0.361,21,0.711,25,0.116,26,0.485,28,0.185,29,0.018,37,0.769,41,0.525,42,0.271,43,0.472,49,0.675,59,0.451,63,0.525,80,0.01,81,0.01,82,0.007,93,0.525,94,0.552,95,0.745,96,0.823,97,0.579,98,1.042,99,1.042,100,0.579,101,0.675,102,0.686,103,1.038,104,0.579,105,0.579,106,0.488,107,0.579,108,0.823,109,0.579,110,0.395,111,0.304,112,0.64,113,0.525,114,0.823,115,0.579,116,1.182,117,0.826,118,1.177,119,1.168,120,1.144,121,1.144,122,1.144,123,1.144,124,1.144,125,1.074,126,0.957,127,0.525,128,0.579,129,0.579,130,1.042,131,1.042,132,0.747,133,1.042,134,0.552,135,1.101,136,0.946,137,0.552,138,0.552,139,0.823,140,0.965,141,0.71,142,0.855,143,0.784,144,0.823,145,0.784,146,0.579,147,1.049,148,0.525,149,0.579,150,0.579,151,0.628,152,1.003,153,1.049,154,0.785,155,0.579,156,0.64,157,0.784,158,0.726,159,0.579,160,0.579,161,0.525,162,0.579,163,0.552,164,0.579,165,0.579,166,0.525,167,0.552,168,0.5,169,0.747,170,0.552,171,0.607,172,0.5,173,0.552,174,0.5,175,0.5,176,0.5,177,0.579,178,0.451,179,0.574,180,0.525,181,0.579,182,0.579,183,0.579,184,0.823,185,0.999,186,0.747,187,0.784,188,0.823,189,0.823,190,0.579,191,0.999,192,0.579,193,0.579,194,0.239,195,0.868,196,0.525,197,0.579,198,0.579,199,0.579,200,0.579,201,0.525,202,0.525,203,0.579,204,0.993,205,0.957,206,0.71,207,0.396,208,0.579,209,0.957,210,0.579,211,0.525,212,0.957,213,0.579,214,0.525,215,0.525,216,0.912,217,0.579,218,0.579,219,0.579,220,0.579,221,0.579,222,0.579,223,0.579,224,0.579,225,0.277,226,0.552,227,0.823,228,0.71,229,0.784,230,0.579,231,0.579,232,0.451,233,0.552,234,0.552,235,0.5,236,0.579,237,0.579,238,0.552,239,0.579,240,0.579,241,0.579,242,0.525,243,0.525,244,0.823,245,0.957,246,0.957,247,0.823,248,0.579,249,0.525,250,0.957,251,0.525,252,0.579,253,0.525,254,0.579,255,0.525,256,0.912,257,0.579,258,0.579,259,0.579,260,0.579,261,0.579,262,0.258,263,0.525,264,0.552,265,0.525,266,0.579,267,0.579,268,0.579]],["title/injectables/JsonSchemaService.html",[34,1.172,864,2.658]],["body/injectables/JsonSchemaService.html",[0,0.249,3,0.15,4,0.129,5,0.129,8,0.334,25,0.15,26,0.405,28,0.178,29,0.018,30,1.961,34,1.76,35,1.772,42,0.196,43,0.405,44,1.959,45,1.959,46,0.825,54,1.611,56,2.464,64,2.622,77,2.622,80,0.014,81,0.012,82,0.009,91,3.05,95,1.016,101,0.953,106,0.464,110,0.31,111,0.383,112,0.585,140,0.953,151,0.412,158,0.766,194,0.497,195,0.857,207,0.519,262,0.537,275,2.421,282,2.21,287,3.011,300,2.065,304,1.612,320,2.014,322,2.051,323,4.057,342,1.862,390,3.431,393,4.057,489,2.014,508,2.468,511,4.727,588,2.701,627,2.31,630,3.685,669,3.342,706,4.373,714,2.816,739,5.024,785,4.718,788,4.897,857,3.799,864,3.99,865,5.505,866,3.342,867,6.853,868,5.445,869,5.17,870,5.445,871,5.662,872,5.662,873,5.662,874,4.327,875,5.776,876,5.662,877,4.885,878,4.885,879,3.824,880,4.327,881,5.994,882,4.885,883,4.885,884,4.885,885,4.885,886,4.885,887,4.373,888,4.885,889,5.17,890,4.885,891,5.776,892,4.327,893,4.885,894,4.885,895,4.885,896,4.885,897,4.327,898,4.885,899,4.448,900,4.885,901,3.342,902,3.733,903,5.17,904,3.733,905,3.733,906,4.885,907,3.733,908,3.733,909,3.733,910,3.733,911,4.885,912,3.733,913,3.733,914,3.733,915,3.733,916,3.733,917,3.733,918,3.733,919,3.733,920,3.733]],["title/interfaces/LayerHint.html",[0,0.217,180,0.594]],["body/interfaces/LayerHint.html",[0,0.453,2,0.408,3,0.117,4,0.1,5,0.1,8,0.361,21,0.713,25,0.117,26,0.487,28,0.181,29,0.018,37,0.772,41,0.531,42,0.272,43,0.473,49,0.68,59,0.455,63,0.531,80,0.01,81,0.01,82,0.007,93,0.531,94,0.557,95,0.749,96,0.829,97,0.585,98,1.047,99,1.047,100,0.585,101,0.68,102,0.687,103,1.003,104,0.585,105,0.585,106,0.488,107,0.585,108,0.829,109,0.585,110,0.397,111,0.351,112,0.645,113,0.531,114,0.829,115,0.585,116,1.185,117,0.715,118,1.147,119,1.141,120,0.962,121,0.962,122,0.962,123,0.962,124,0.962,125,1.075,126,0.962,127,0.531,128,0.585,129,0.585,130,0.962,131,0.962,132,0.531,133,0.585,134,0.557,135,1.105,136,0.95,137,0.557,138,0.557,139,0.829,140,0.968,141,0.715,142,0.859,143,0.79,144,0.829,145,0.79,146,0.585,147,1.094,148,0.531,149,0.585,150,0.585,151,0.63,152,1.02,153,1.053,154,0.941,155,0.585,156,0.645,157,0.79,158,0.728,159,0.585,160,0.585,161,0.531,162,0.585,163,0.557,164,0.585,165,0.585,166,0.531,167,0.557,168,0.505,169,0.752,170,0.557,171,0.611,172,0.505,173,0.557,174,0.505,175,0.505,176,0.505,177,0.829,178,0.645,179,0.672,180,0.752,181,1.047,182,1.047,183,1.047,184,0.829,185,1.003,186,0.752,187,0.79,188,0.829,189,0.829,190,0.585,191,1.003,192,0.585,193,0.585,194,0.241,195,0.87,196,0.531,197,0.585,198,0.585,199,0.585,200,0.585,201,0.531,202,0.531,203,0.585,204,0.998,205,0.962,206,0.715,207,0.398,208,0.585,209,0.962,210,0.585,211,0.531,212,0.962,213,0.585,214,0.531,215,0.531,216,0.917,217,0.585,218,0.585,219,0.585,220,0.585,221,0.585,222,0.585,223,0.585,224,0.585,225,0.28,226,0.557,227,0.829,228,0.715,229,0.79,230,0.585,231,0.585,232,0.455,233,0.557,234,0.557,235,0.505,236,0.585,237,0.585,238,0.557,239,0.585,240,0.585,241,0.585,242,0.531,243,0.531,244,0.829,245,0.962,246,0.962,247,0.829,248,0.585,249,0.531,250,0.962,251,0.531,252,0.585,253,0.531,254,0.585,255,0.531,256,0.917,257,0.585,258,0.585,259,0.585,260,0.585,261,0.585,262,0.26,263,0.531,264,0.557,265,0.531,266,0.585,267,0.585,268,0.585]],["title/interfaces/LayerPartInfo.html",[0,0.217,148,0.594]],["body/interfaces/LayerPartInfo.html",[0,0.453,2,0.411,3,0.117,4,0.101,5,0.101,8,0.347,21,0.715,25,0.117,26,0.487,28,0.179,29,0.018,37,0.774,41,0.534,42,0.272,43,0.498,49,0.682,59,0.458,63,0.534,80,0.01,81,0.01,82,0.007,93,0.534,94,0.561,95,0.751,96,0.832,97,0.588,98,1.049,99,1.049,100,0.588,101,0.682,102,0.687,103,1.043,104,0.588,105,0.588,106,0.487,107,0.588,108,0.832,109,0.588,110,0.398,111,0.187,112,0.648,113,0.534,114,0.832,115,0.588,116,1.186,117,0.718,118,1.182,119,1.171,120,0.965,121,0.965,122,0.965,123,0.965,124,0.965,125,1.081,126,0.965,127,0.534,128,0.588,129,0.588,130,1.049,131,1.049,132,0.534,133,0.588,134,0.561,135,1.107,136,0.952,137,0.561,138,0.561,139,0.832,140,0.97,141,0.718,142,0.861,143,0.793,144,0.832,145,1.055,146,0.588,147,1.096,148,0.755,149,1.049,150,1.049,151,0.631,152,1.007,153,1.055,154,0.792,155,0.588,156,0.648,157,0.793,158,0.73,159,0.588,160,0.588,161,0.534,162,0.588,163,0.561,164,0.588,165,0.588,166,0.534,167,0.561,168,0.508,169,0.755,170,0.561,171,0.614,172,0.508,173,0.561,174,0.508,175,0.508,176,0.508,177,0.588,178,0.458,179,0.581,180,0.534,181,0.588,182,0.588,183,0.588,184,0.832,185,1.005,186,0.755,187,0.793,188,0.832,189,0.832,190,0.588,191,1.005,192,0.588,193,0.588,194,0.243,195,0.872,196,0.534,197,0.588,198,0.588,199,0.588,200,0.588,201,0.534,202,0.534,203,0.588,204,1,205,0.965,206,0.718,207,0.399,208,0.588,209,0.965,210,0.588,211,0.534,212,0.965,213,0.588,214,0.534,215,0.534,216,0.92,217,0.588,218,0.588,219,0.588,220,0.588,221,0.588,222,0.588,223,0.588,224,0.588,225,0.282,226,0.561,227,0.832,228,0.718,229,0.793,230,0.588,231,0.588,232,0.458,233,0.561,234,0.561,235,0.508,236,0.588,237,0.588,238,0.561,239,0.588,240,0.588,241,0.588,242,0.534,243,0.534,244,0.832,245,0.965,246,0.965,247,0.832,248,0.588,249,0.534,250,0.965,251,0.534,252,0.588,253,0.534,254,0.588,255,0.534,256,0.92,257,0.588,258,0.588,259,0.588,260,0.588,261,0.588,262,0.262,263,0.534,264,0.561,265,0.534,266,0.588,267,0.588,268,0.588]],["title/injectables/LibraryRouteService.html",[34,1.172,921,2.912]],["body/injectables/LibraryRouteService.html",[3,0.09,4,0.077,5,0.077,8,0.312,19,4.985,20,2.569,25,0.09,28,0.193,29,0.018,30,1.227,34,1.227,35,1.065,42,0.09,44,1.177,45,1.177,46,0.496,49,0.919,53,2.782,54,2.104,80,0.006,81,0.012,82,0.006,85,2.782,106,0.478,110,0.381,111,0.395,116,1.174,117,0.903,119,1.248,125,1.092,134,1.294,137,1.202,138,1.243,142,0.858,145,1.068,152,1.053,154,0.758,156,0.72,158,0.452,191,1.184,194,0.462,195,0.889,204,0.653,206,1.04,207,0.445,216,0.881,225,0.476,228,0.591,232,0.815,233,0.653,234,1.068,235,0.798,262,0.499,275,2.377,282,1.541,287,2.542,300,1.883,320,2.63,322,2.226,327,2.838,342,2.053,365,3.049,382,2.685,405,2.569,422,2.392,433,2.782,489,2.351,508,2.486,582,1.576,623,3.228,627,1.389,630,3.467,635,3.406,638,3.049,651,3.049,711,3.467,780,3.363,857,3.422,879,3.654,901,2.009,921,3.049,922,5.703,923,2.244,924,5.482,925,7.563,926,5.327,927,3.947,928,3.947,929,3.947,930,3.947,931,3.947,932,3.947,933,3.947,934,5.327,935,6.029,936,3.947,937,6.029,938,5.568,939,3.947,940,3.947,941,3.947,942,5.327,943,3.947,944,5.327,945,3.947,946,3.947,947,3.947,948,3.947,949,4.771,950,4.771,951,3.947,952,4.771,953,4.771,954,4.771,955,3.947,956,2.601,957,2.601,958,3.947,959,2.601,960,6.454,961,4.596,962,2.601,963,3.947,964,6.74,965,6.74,966,7.515,967,6.029,968,6.029,969,4.596,970,5.327,971,4.596,972,2.601,973,2.601,974,4.596,975,4.771,976,3.947,977,3.947,978,3.947,979,3.947,980,3.947,981,3.947,982,5.327,983,3.406,984,3.947,985,2.601,986,5.327,987,3.406,988,2.601,989,2.601,990,5.201,991,3.406,992,3.947,993,2.601,994,2.601,995,3.947,996,2.601,997,2.601,998,3.049,999,4.771,1000,3.947,1001,3.947,1002,3.947,1003,3.947,1004,6.454,1005,5.327,1006,3.406,1007,3.947,1008,3.947,1009,3.947,1010,3.947,1011,3.947,1012,2.601,1013,3.947,1014,2.244,1015,2.601,1016,2.601,1017,3.947,1018,5.327,1019,5.727,1020,2.601,1021,2.601,1022,2.601,1023,4.771,1024,3.947,1025,3.947,1026,3.947,1027,2.601,1028,6.265,1029,5.727,1030,2.601,1031,2.601,1032,3.947,1033,2.601,1034,2.601,1035,2.601,1036,2.601,1037,3.947,1038,3.947,1039,2.601,1040,2.601,1041,2.601]],["title/injectables/LocalStorageService.html",[34,1.172,1042,2.912]],["body/injectables/LocalStorageService.html",[3,0.151,4,0.13,5,0.13,8,0.347,25,0.151,28,0.178,29,0.018,30,1.355,34,1.768,35,1.786,42,0.151,43,0.534,44,1.974,45,1.974,46,0.831,54,1.619,56,2.88,80,0.009,81,0.012,82,0.009,101,0.902,106,0.471,110,0.534,111,0.384,163,0.721,187,0.721,194,0.499,195,1.008,207,0.46,229,1.048,262,0.552,275,2.504,282,2.221,320,2.769,322,2.263,323,3.838,326,1.702,327,1.702,342,2.997,393,3.448,489,2.024,508,2.536,582,4.221,588,3.559,627,2.328,641,4.802,722,6.647,879,4.471,889,5.185,998,3.367,1042,4.394,1043,6.162,1044,3.761,1045,5.69,1046,5.69,1047,6.714,1048,4.36,1049,7.955,1050,4.36,1051,6.436,1052,5.69,1053,4.36,1054,4.909,1055,5.69,1056,4.909,1057,5.698,1058,7.378,1059,5.69,1060,4.36,1061,5.69,1062,4.36,1063,5.69,1064,4.36,1065,4.36,1066,4.36,1067,4.36,1068,4.36,1069,5.69,1070,4.36,1071,4.36,1072,4.36,1073,3.761,1074,4.36]],["title/interfaces/LoginCredentials.html",[0,0.217,249,0.594]],["body/interfaces/LoginCredentials.html",[0,0.453,2,0.415,3,0.119,4,0.102,5,0.102,8,0.348,21,0.717,25,0.119,26,0.489,28,0.174,29,0.018,37,0.778,41,0.54,42,0.272,43,0.476,49,0.688,59,0.463,63,0.54,80,0.011,81,0.011,82,0.007,93,0.54,94,0.567,95,0.756,96,0.838,97,0.595,98,1.054,99,1.054,100,0.595,101,0.688,102,0.684,103,1.009,104,0.595,105,0.595,106,0.487,107,0.595,108,0.838,109,0.595,110,0.401,111,0.189,112,0.653,113,0.54,114,0.838,115,0.595,116,1.189,117,0.724,118,1.154,119,1.145,120,0.971,121,0.971,122,0.971,123,0.971,124,0.971,125,1.077,126,0.971,127,0.54,128,0.595,129,0.595,130,0.971,131,0.971,132,0.54,133,0.595,134,0.567,135,1.112,136,0.957,137,0.567,138,0.567,139,0.838,140,0.972,141,0.724,142,0.865,143,0.799,144,0.838,145,0.799,146,0.595,147,1.06,148,0.54,149,0.595,150,0.595,151,0.633,152,1.01,153,1.06,154,0.797,155,0.595,156,0.653,157,0.799,158,0.733,159,0.595,160,0.595,161,0.54,162,0.595,163,0.567,164,0.595,165,0.595,166,0.54,167,0.567,168,0.513,169,0.761,170,0.567,171,0.618,172,0.513,173,0.567,174,0.513,175,0.513,176,0.513,177,0.595,178,0.463,179,0.585,180,0.54,181,0.595,182,0.595,183,0.595,184,0.838,185,1.009,186,0.761,187,0.799,188,0.838,189,0.838,190,0.595,191,1.009,192,0.595,193,0.595,194,0.245,195,0.875,196,0.54,197,0.595,198,0.595,199,0.595,200,0.595,201,0.54,202,0.54,203,0.595,204,1.005,205,0.971,206,0.724,207,0.451,208,0.595,209,0.971,210,0.595,211,0.54,212,0.971,213,0.595,214,0.54,215,0.54,216,0.925,217,0.595,218,0.595,219,0.595,220,0.595,221,0.595,222,0.595,223,0.595,224,0.595,225,0.285,226,0.567,227,0.838,228,0.724,229,0.799,230,0.595,231,0.595,232,0.463,233,0.567,234,0.567,235,0.513,236,0.595,237,0.595,238,0.567,239,0.595,240,0.595,241,0.595,242,0.54,243,0.54,244,0.838,245,0.971,246,0.971,247,0.971,248,0.838,249,0.761,250,1.154,251,0.54,252,0.595,253,0.54,254,0.595,255,0.54,256,0.925,257,0.595,258,0.595,259,0.595,260,0.595,261,0.595,262,0.265,263,0.54,264,0.567,265,0.54,266,0.595,267,0.595,268,0.595]],["title/interfaces/LoginResult.html",[0,0.217,251,0.594]],["body/interfaces/LoginResult.html",[0,0.453,2,0.415,3,0.119,4,0.102,5,0.102,8,0.348,21,0.752,25,0.119,26,0.489,28,0.174,29,0.018,37,0.778,41,0.54,42,0.272,43,0.476,49,0.688,59,0.463,63,0.54,80,0.012,81,0.011,82,0.007,93,0.54,94,0.567,95,0.756,96,0.838,97,0.595,98,1.054,99,1.054,100,0.595,101,0.688,102,0.684,103,1.009,104,0.595,105,0.595,106,0.487,107,0.595,108,0.838,109,0.595,110,0.401,111,0.189,112,0.653,113,0.54,114,0.838,115,0.595,116,1.189,117,0.724,118,1.154,119,1.145,120,0.971,121,0.971,122,0.971,123,0.971,124,0.971,125,1.077,126,0.971,127,0.54,128,0.595,129,0.595,130,0.971,131,0.971,132,0.54,133,0.595,134,0.567,135,1.112,136,0.957,137,0.567,138,0.567,139,0.838,140,0.972,141,0.724,142,0.865,143,0.799,144,0.838,145,0.799,146,0.595,147,1.06,148,0.54,149,0.595,150,0.595,151,0.633,152,1.01,153,1.06,154,0.797,155,0.595,156,0.653,157,0.799,158,0.733,159,0.595,160,0.595,161,0.54,162,0.595,163,0.567,164,0.595,165,0.595,166,0.54,167,0.567,168,0.513,169,0.761,170,0.567,171,0.82,172,0.513,173,0.567,174,0.513,175,0.513,176,0.513,177,0.595,178,0.463,179,0.585,180,0.54,181,0.595,182,0.595,183,0.595,184,0.838,185,1.009,186,0.761,187,0.799,188,0.838,189,0.838,190,0.595,191,1.009,192,0.595,193,0.595,194,0.245,195,0.875,196,0.54,197,0.595,198,0.595,199,0.595,200,0.595,201,0.54,202,0.54,203,0.595,204,1.005,205,0.971,206,0.724,207,0.401,208,0.595,209,0.971,210,0.595,211,0.54,212,0.971,213,0.595,214,0.54,215,0.54,216,0.925,217,0.595,218,0.595,219,0.595,220,0.595,221,0.595,222,0.595,223,0.595,224,0.595,225,0.285,226,0.567,227,0.838,228,0.724,229,0.799,230,0.595,231,0.595,232,0.463,233,0.567,234,0.567,235,0.513,236,0.595,237,0.595,238,0.567,239,0.595,240,0.595,241,0.595,242,0.54,243,0.54,244,0.838,245,0.971,246,0.971,247,0.971,248,0.595,249,0.54,250,0.971,251,0.761,252,1.054,253,0.54,254,0.595,255,0.54,256,0.925,257,0.595,258,0.595,259,0.595,260,0.595,261,0.595,262,0.265,263,0.54,264,0.567,265,0.54,266,0.595,267,0.595,268,0.595]],["title/interfaces/Part.html",[0,0.217,125,0.537]],["body/interfaces/Part.html",[0,0.454,2,0.41,3,0.117,4,0.101,5,0.101,8,0.347,21,0.714,25,0.117,26,0.506,28,0.177,29,0.018,37,0.774,41,0.533,42,0.272,43,0.474,49,0.682,59,0.457,63,0.533,80,0.01,81,0.01,82,0.007,93,0.533,94,0.56,95,0.751,96,0.831,97,0.587,98,1.049,99,1.049,100,0.587,101,0.682,102,0.683,103,1.043,104,0.587,105,0.587,106,0.487,107,0.587,108,0.831,109,0.587,110,0.398,111,0.306,112,0.647,113,0.533,114,0.831,115,0.587,116,1.199,117,0.717,118,1.181,119,1.171,120,0.964,121,0.964,122,0.964,123,0.964,124,0.964,125,1.088,126,0.964,127,0.533,128,0.587,129,0.587,130,0.964,131,0.964,132,0.533,133,0.587,134,0.56,135,1.107,136,0.952,137,0.56,138,0.56,139,0.964,140,0.99,141,0.833,142,0.908,143,0.919,144,0.964,145,1.055,146,1.049,147,1.055,148,0.533,149,0.587,150,0.587,151,0.63,152,1.007,153,1.055,154,0.791,155,0.587,156,0.647,157,0.792,158,0.73,159,0.587,160,0.587,161,0.533,162,0.587,163,0.56,164,0.587,165,0.587,166,0.533,167,0.56,168,0.507,169,0.754,170,0.56,171,0.613,172,0.507,173,0.56,174,0.507,175,0.507,176,0.507,177,0.587,178,0.457,179,0.58,180,0.533,181,0.587,182,0.587,183,0.587,184,0.831,185,1.004,186,0.754,187,0.792,188,0.831,189,0.831,190,0.587,191,1.004,192,0.587,193,0.587,194,0.242,195,0.871,196,0.533,197,0.587,198,0.587,199,0.587,200,0.587,201,0.533,202,0.533,203,0.587,204,0.999,205,0.964,206,0.717,207,0.399,208,0.587,209,0.964,210,0.587,211,0.533,212,0.964,213,0.587,214,0.533,215,0.533,216,0.919,217,0.587,218,0.587,219,0.587,220,0.587,221,0.587,222,0.587,223,0.587,224,0.587,225,0.281,226,0.56,227,0.831,228,0.717,229,0.792,230,0.587,231,0.587,232,0.457,233,0.56,234,0.56,235,0.507,236,0.587,237,0.587,238,0.56,239,0.587,240,0.587,241,0.587,242,0.533,243,0.533,244,0.831,245,0.964,246,0.964,247,0.831,248,0.587,249,0.533,250,0.964,251,0.533,252,0.587,253,0.533,254,0.587,255,0.533,256,0.919,257,0.587,258,0.587,259,0.587,260,0.587,261,0.587,262,0.262,263,0.533,264,0.56,265,0.533,266,0.587,267,0.587,268,0.587]],["title/interfaces/PartDefinition.html",[0,0.217,206,0.565]],["body/interfaces/PartDefinition.html",[0,0.453,2,0.407,3,0.117,4,0.1,5,0.1,8,0.361,21,0.713,25,0.117,26,0.486,28,0.183,29,0.018,37,0.772,41,0.53,42,0.271,43,0.497,49,0.679,59,0.454,63,0.53,80,0.01,81,0.01,82,0.007,93,0.53,94,0.556,95,0.748,96,0.827,97,0.584,98,1.046,99,1.046,100,0.584,101,0.679,102,0.683,103,1.002,104,0.584,105,0.584,106,0.488,107,0.584,108,0.827,109,0.584,110,0.396,111,0.185,112,0.644,113,0.53,114,0.827,115,0.584,116,1.184,117,0.714,118,1.179,119,1.141,120,0.961,121,0.961,122,0.961,123,1.147,124,0.961,125,1.08,126,0.961,127,0.53,128,0.584,129,0.584,130,0.961,131,0.961,132,0.53,133,0.584,134,0.556,135,1.104,136,1.002,137,0.556,138,0.556,139,0.827,140,0.967,141,0.714,142,0.858,143,0.789,144,0.827,145,0.789,146,0.584,147,1.052,148,0.53,149,0.584,150,0.584,151,0.629,152,1.005,153,1.052,154,0.789,155,0.584,156,0.644,157,0.789,158,0.728,159,0.584,160,0.584,161,0.53,162,0.584,163,0.556,164,0.584,165,0.584,166,0.53,167,0.556,168,0.504,169,0.751,170,0.556,171,0.61,172,0.504,173,0.556,174,0.504,175,0.504,176,0.504,177,0.584,178,0.454,179,0.578,180,0.53,181,0.584,182,0.584,183,0.584,184,0.827,185,1.002,186,0.751,187,0.789,188,0.827,189,0.827,190,0.584,191,1.002,192,0.584,193,0.584,194,0.241,195,0.87,196,0.53,197,0.584,198,0.584,199,0.584,200,0.584,201,0.53,202,0.53,203,0.584,204,1.052,205,1.046,206,0.83,207,0.448,208,1.046,209,1.147,210,1.046,211,0.53,212,0.961,213,0.584,214,0.53,215,0.53,216,0.916,217,0.584,218,0.584,219,0.584,220,0.584,221,0.584,222,0.584,223,0.584,224,0.584,225,0.28,226,0.556,227,0.827,228,0.714,229,0.789,230,0.584,231,0.584,232,0.454,233,0.556,234,0.556,235,0.504,236,0.584,237,0.584,238,0.556,239,0.584,240,0.584,241,0.584,242,0.53,243,0.53,244,0.827,245,0.961,246,0.961,247,0.827,248,0.584,249,0.53,250,0.961,251,0.53,252,0.584,253,0.53,254,0.584,255,0.53,256,0.916,257,0.584,258,0.584,259,0.584,260,0.584,261,0.584,262,0.26,263,0.53,264,0.556,265,0.53,266,0.584,267,0.584,268,0.584]],["title/interfaces/PartEditorKeys.html",[0,0.217,235,0.565]],["body/interfaces/PartEditorKeys.html",[0,0.453,2,0.413,3,0.118,4,0.101,5,0.101,8,0.347,21,0.716,26,0.458,28,0.174,29,0.018,37,0.776,41,0.537,42,0.272,43,0.475,49,0.794,59,0.46,63,0.537,80,0.01,81,0.01,82,0.007,93,0.537,94,0.564,95,0.754,96,0.835,97,0.591,98,1.052,99,1.052,100,0.591,101,0.685,102,0.684,103,1.007,104,0.591,105,0.591,106,0.487,107,0.591,108,0.835,109,0.591,110,0.399,111,0.188,112,0.65,113,0.537,114,0.835,115,0.591,116,1.213,117,0.721,118,1.152,119,1.144,120,0.968,121,0.968,122,0.968,123,0.968,124,0.968,125,1.081,126,0.968,127,0.537,128,0.591,129,0.591,130,0.968,131,0.968,132,0.537,133,0.591,134,0.564,135,1.184,136,0.955,137,0.564,138,0.564,139,0.835,140,0.992,141,0.721,142,0.863,143,0.796,144,0.835,145,0.796,146,0.591,147,1.058,148,0.537,149,0.591,150,0.591,151,0.632,152,1.008,153,1.098,154,0.794,155,0.591,156,0.65,157,0.796,158,0.759,159,0.591,160,0.591,161,0.537,162,0.591,163,0.564,164,0.591,165,0.591,166,0.537,167,0.564,168,0.51,169,0.758,170,0.564,171,0.616,172,0.51,173,0.564,174,0.51,175,0.51,176,0.51,177,0.591,178,0.46,179,0.583,180,0.537,181,0.591,182,0.591,183,0.591,184,0.835,185,1.007,186,0.758,187,0.796,188,0.835,189,0.835,190,0.591,191,1.074,192,0.591,193,0.591,194,0.344,195,0.892,196,0.537,197,0.591,198,0.591,199,0.591,200,0.591,201,0.537,202,0.537,203,0.591,204,1.003,205,0.968,206,0.721,207,0.4,208,0.591,209,0.968,210,0.591,211,0.537,212,0.968,213,0.591,214,0.537,215,0.537,216,0.923,217,0.591,218,0.591,219,0.591,220,0.591,221,0.591,222,0.591,223,0.591,224,0.591,225,0.283,226,0.564,227,0.968,228,0.836,229,1.003,230,0.835,231,0.835,232,0.65,233,0.796,234,0.796,235,0.721,236,0.591,237,0.591,238,0.564,239,0.591,240,0.591,241,0.591,242,0.537,243,0.537,244,0.835,245,0.968,246,0.968,247,0.835,248,0.591,249,0.537,250,0.968,251,0.537,252,0.591,253,0.537,254,0.591,255,0.537,256,0.923,257,0.591,258,0.591,259,0.591,260,0.591,261,0.591,262,0.263,263,0.537,264,0.564,265,0.537,266,0.591,267,0.591,268,0.591,1075,2.94,1076,3.407]],["title/interfaces/PartGroup.html",[0,0.217,242,0.594]],["body/interfaces/PartGroup.html",[0,0.453,2,0.411,3,0.118,4,0.101,5,0.101,8,0.347,21,0.715,25,0.118,26,0.488,28,0.177,29,0.018,37,0.775,41,0.535,42,0.272,43,0.474,49,0.683,59,0.459,63,0.535,80,0.01,81,0.01,82,0.007,93,0.535,94,0.562,95,0.752,96,0.833,97,0.589,98,1.05,99,1.05,100,0.589,101,0.683,102,0.684,103,1.006,104,0.589,105,0.589,106,0.487,107,0.589,108,0.833,109,0.589,110,0.399,111,0.187,112,0.648,113,0.535,114,0.966,115,0.589,116,1.238,117,0.719,118,1.15,119,1.143,120,0.966,121,0.966,122,0.966,123,0.966,124,0.966,125,1.085,126,0.966,127,0.535,128,0.589,129,0.589,130,0.966,131,0.966,132,0.535,133,0.589,134,0.562,135,1.108,136,0.953,137,0.562,138,0.562,139,0.833,140,0.97,141,0.719,142,0.862,143,0.794,144,0.833,145,0.794,146,0.589,147,1.056,148,0.535,149,0.589,150,0.589,151,0.631,152,1.008,153,1.056,154,0.793,155,0.589,156,0.648,157,0.794,158,0.731,159,0.589,160,0.589,161,0.535,162,0.589,163,0.562,164,0.589,165,0.589,166,0.535,167,0.562,168,0.509,169,0.756,170,0.562,171,0.615,172,0.509,173,0.562,174,0.509,175,0.509,176,0.509,177,0.589,178,0.459,179,0.581,180,0.535,181,0.589,182,0.589,183,0.589,184,0.833,185,1.006,186,0.756,187,0.794,188,0.833,189,0.833,190,0.589,191,1.006,192,0.589,193,0.589,194,0.243,195,0.919,196,0.535,197,0.589,198,0.589,199,0.589,200,0.589,201,0.535,202,0.535,203,0.589,204,1.001,205,0.966,206,0.719,207,0.399,208,0.589,209,0.966,210,0.589,211,0.535,212,1.15,213,0.589,214,0.535,215,0.535,216,1.001,217,0.589,218,0.589,219,0.589,220,0.589,221,0.589,222,0.589,223,0.589,224,0.589,225,0.282,226,0.562,227,0.833,228,0.719,229,0.794,230,0.589,231,0.589,232,0.459,233,0.562,234,0.562,235,0.509,236,0.833,237,0.833,238,0.794,239,0.833,240,0.833,241,0.833,242,0.756,243,0.535,244,0.833,245,0.966,246,0.966,247,0.833,248,0.589,249,0.535,250,0.966,251,0.535,252,0.589,253,0.535,254,0.589,255,0.535,256,0.921,257,0.589,258,0.589,259,0.589,260,0.589,261,0.589,262,0.262,263,0.535,264,0.562,265,0.535,266,0.589,267,0.589,268,0.589]],["title/interfaces/PartGroupKey.html",[0,0.217,228,0.565]],["body/interfaces/PartGroupKey.html",[0,0.453,2,0.406,3,0.116,4,0.1,5,0.1,8,0.346,21,0.712,25,0.116,26,0.486,28,0.182,29,0.018,37,0.77,41,0.528,42,0.271,43,0.472,49,0.677,59,0.453,63,0.528,80,0.01,81,0.01,82,0.007,93,0.528,94,0.554,95,0.747,96,0.825,97,0.582,98,1.044,99,1.044,100,0.582,101,0.677,102,0.683,103,1.001,104,0.582,105,0.582,106,0.487,107,0.582,108,0.825,109,0.582,110,0.396,111,0.305,112,0.643,113,0.528,114,0.825,115,0.582,116,1.209,117,0.713,118,1.145,119,1.161,120,0.959,121,0.959,122,0.959,123,0.959,124,0.959,125,1.097,126,0.959,127,0.528,128,0.582,129,0.582,130,0.959,131,0.959,132,0.528,133,0.582,134,0.554,135,1.178,136,0.948,137,0.554,138,0.554,139,0.825,140,0.966,141,0.713,142,0.905,143,0.787,144,0.825,145,0.787,146,0.582,147,1.092,148,0.528,149,0.582,150,0.582,151,0.628,152,1.03,153,1.147,154,0.787,155,0.582,156,0.747,157,0.787,158,0.794,159,0.582,160,0.582,161,0.528,162,0.582,163,0.554,164,0.582,165,0.582,166,0.528,167,0.554,168,0.502,169,0.749,170,0.554,171,0.609,172,0.502,173,0.554,174,0.502,175,0.502,176,0.502,177,0.582,178,0.453,179,0.576,180,0.528,181,0.582,182,0.582,183,0.582,184,0.825,185,1.001,186,0.749,187,0.787,188,0.825,189,0.825,190,0.582,191,1.04,192,0.582,193,0.582,194,0.24,195,0.903,196,0.528,197,0.582,198,0.582,199,0.582,200,0.582,201,0.528,202,0.528,203,0.582,204,0.995,205,0.959,206,0.713,207,0.397,208,0.582,209,0.959,210,0.582,211,0.528,212,0.959,213,0.582,214,0.528,215,0.528,216,1.051,217,0.825,218,0.825,219,0.825,220,0.825,221,0.825,222,0.825,223,0.825,224,0.825,225,0.395,226,0.787,227,0.959,228,0.828,229,0.787,230,0.582,231,0.582,232,0.453,233,0.554,234,0.554,235,0.502,236,0.582,237,0.582,238,0.554,239,0.582,240,0.582,241,0.582,242,0.528,243,0.528,244,0.825,245,0.959,246,0.959,247,0.825,248,0.582,249,0.528,250,0.959,251,0.528,252,0.582,253,0.528,254,0.582,255,0.528,256,0.914,257,0.582,258,0.582,259,0.582,260,0.582,261,0.582,262,0.259,263,0.528,264,0.554,265,0.528,266,0.582,267,0.582,268,0.582,623,2.882]],["title/interfaces/PartTypeIds.html",[0,0.217,136,0.594]],["body/interfaces/PartTypeIds.html",[0,0.453,2,0.414,3,0.119,4,0.102,5,0.102,8,0.348,21,0.717,25,0.119,26,0.489,28,0.177,29,0.018,37,0.777,41,0.539,42,0.272,43,0.476,49,0.687,59,0.462,63,0.539,80,0.011,81,0.011,82,0.007,93,0.539,94,0.566,95,0.755,96,0.838,97,0.594,98,1.054,99,1.054,100,0.594,101,0.687,102,0.684,103,1.009,104,0.594,105,0.594,106,0.487,107,0.594,108,0.838,109,0.594,110,0.4,111,0.189,112,0.652,113,0.539,114,0.838,115,0.594,116,1.189,117,0.723,118,1.153,119,1.145,120,0.97,121,0.97,122,0.97,123,0.97,124,0.97,125,1.082,126,0.97,127,0.539,128,0.594,129,0.594,130,0.97,131,0.97,132,0.539,133,0.594,134,0.798,135,1.153,136,1.009,137,1.004,138,1.004,139,0.838,140,0.972,141,0.723,142,0.865,143,0.798,144,0.838,145,0.798,146,0.594,147,1.059,148,0.539,149,0.594,150,0.594,151,0.633,152,1.009,153,1.059,154,0.796,155,0.594,156,0.652,157,0.798,158,0.733,159,0.594,160,0.594,161,0.539,162,0.594,163,0.566,164,0.594,165,0.594,166,0.539,167,0.566,168,0.513,169,0.76,170,0.566,171,0.618,172,0.513,173,0.566,174,0.513,175,0.513,176,0.513,177,0.594,178,0.462,179,0.585,180,0.539,181,0.594,182,0.594,183,0.594,184,0.838,185,1.009,186,0.76,187,0.798,188,0.838,189,0.838,190,0.594,191,1.009,192,0.594,193,0.594,194,0.245,195,0.874,196,0.539,197,0.594,198,0.594,199,0.594,200,0.594,201,0.539,202,0.539,203,0.594,204,1.004,205,0.97,206,0.723,207,0.401,208,0.594,209,0.97,210,0.594,211,0.539,212,0.97,213,0.594,214,0.539,215,0.539,216,0.925,217,0.594,218,0.594,219,0.594,220,0.594,221,0.594,222,0.594,223,0.594,224,0.594,225,0.284,226,0.566,227,0.838,228,0.723,229,0.798,230,0.594,231,0.594,232,0.462,233,0.566,234,0.566,235,0.513,236,0.594,237,0.594,238,0.566,239,0.594,240,0.594,241,0.594,242,0.539,243,0.539,244,0.838,245,0.97,246,0.97,247,0.838,248,0.594,249,0.539,250,0.97,251,0.539,252,0.594,253,0.539,254,0.594,255,0.539,256,0.925,257,0.594,258,0.594,259,0.594,260,0.594,261,0.594,262,0.264,263,0.539,264,0.566,265,0.539,266,0.594,267,0.594,268,0.594]],["title/interfaces/PasswordChange.html",[0,0.217,265,0.594]],["body/interfaces/PasswordChange.html",[0,0.453,2,0.411,3,0.118,4,0.101,5,0.101,8,0.347,21,0.715,25,0.118,26,0.488,28,0.179,29,0.018,37,0.775,41,0.535,42,0.272,43,0.474,49,0.683,59,0.459,63,0.535,80,0.01,81,0.01,82,0.007,93,0.535,94,0.562,95,0.818,96,0.833,97,0.589,98,1.05,99,1.05,100,0.589,101,0.683,102,0.684,103,1.006,104,0.589,105,0.589,106,0.488,107,0.589,108,0.833,109,0.589,110,0.399,111,0.187,112,0.648,113,0.535,114,0.833,115,0.589,116,1.187,117,0.719,118,1.15,119,1.143,120,0.966,121,0.966,122,0.966,123,0.966,124,0.966,125,1.076,126,0.966,127,0.535,128,0.589,129,0.589,130,0.966,131,0.966,132,0.535,133,0.589,134,0.562,135,1.108,136,0.953,137,0.562,138,0.562,139,0.833,140,0.97,141,0.719,142,0.862,143,0.794,144,0.833,145,0.794,146,0.589,147,1.056,148,0.535,149,0.589,150,0.589,151,0.631,152,1.008,153,1.056,154,0.793,155,0.589,156,0.648,157,0.794,158,0.731,159,0.589,160,0.589,161,0.535,162,0.589,163,0.562,164,0.589,165,0.589,166,0.535,167,0.562,168,0.509,169,0.756,170,0.562,171,0.615,172,0.509,173,0.562,174,0.509,175,0.509,176,0.509,177,0.589,178,0.459,179,0.581,180,0.535,181,0.589,182,0.589,183,0.589,184,0.833,185,1.006,186,0.756,187,0.794,188,0.833,189,0.833,190,0.589,191,1.006,192,0.589,193,0.589,194,0.243,195,0.872,196,0.535,197,0.589,198,0.589,199,0.589,200,0.589,201,0.535,202,0.535,203,0.589,204,1.001,205,0.966,206,0.719,207,0.399,208,0.589,209,0.966,210,0.589,211,0.535,212,0.966,213,0.589,214,0.535,215,0.535,216,0.921,217,0.589,218,0.589,219,0.589,220,0.589,221,0.589,222,0.589,223,0.589,224,0.589,225,0.282,226,0.562,227,0.833,228,0.719,229,0.794,230,0.589,231,0.589,232,0.459,233,0.562,234,0.562,235,0.509,236,0.589,237,0.589,238,0.562,239,0.589,240,0.589,241,0.589,242,0.535,243,0.535,244,0.833,245,0.966,246,0.966,247,0.833,248,0.589,249,0.535,250,1.05,251,0.535,252,0.589,253,0.535,254,0.589,255,0.535,256,1.096,257,0.589,258,0.589,259,0.589,260,0.589,261,0.589,262,0.262,263,0.535,264,0.794,265,0.756,266,1.05,267,1.05,268,1.05]],["title/classes/PasswordValidator.html",[46,0.719,1077,2.912]],["body/classes/PasswordValidator.html",[3,0.203,4,0.174,5,0.174,25,0.203,28,0.17,29,0.017,30,1.818,42,0.203,43,0.419,46,1.115,54,2.056,56,2.283,80,0.013,81,0.015,82,0.013,106,0.354,111,0.322,194,0.419,195,0.749,207,0.386,262,0.452,270,3.122,282,2.664,285,3.447,322,1.9,327,2.664,623,3.544,1077,5.269,1078,5.045,1079,6.823,1080,6.823,1081,7.443,1082,5.848,1083,5.848,1084,5.045,1085,5.848,1086,5.848,1087,5.848,1088,5.848]],["title/guards/PendingChangesGuard.html",[15,2.454,47,2.658]],["body/guards/PendingChangesGuard.html",[0,0.373,1,5.092,3,0.185,4,0.159,5,0.159,6,4.993,7,4.124,9,2.851,10,4.607,11,4.607,12,4.124,13,4.993,14,6.233,15,3.476,16,4.607,17,4.607,18,6.564,19,4.124,20,3.476,21,0.576,22,4.124,23,4.607,24,4.607,25,0.185,28,0.133,29,0.018,30,2.161,31,4.124,32,5.58,33,3.764,34,2.009,35,2.187,36,4.607,37,0.684,38,4.607,39,4.124,40,4.607,41,0.841,42,0.224,43,0.498,44,2.418,45,2.418,46,1.018,47,4.556,48,3.031,49,0.99,50,4.124,51,4.607,52,5.577,53,3.764,54,1.52,55,4.607,56,2.085,57,3.031,58,5.998,59,0.873,60,4.607,61,5.577,62,4.607,63,0.841,64,3.917,65,4.993,66,4.607,67,3.764,68,4.607,69,4.124,70,3.764,71,4.607,72,4.607,73,4.607,74,4.607,75,4.607,76,4.124,77,3.236,78,4.607,79,4.607,80,0.012,81,0.014,82,0.012,111,0.294,194,0.382,207,0.352,262,0.413,282,2.524,322,1.735,1089,5.34,1090,5.34,1091,5.34]],["title/interfaces/RegistrationModel.html",[0,0.217,255,0.594]],["body/interfaces/RegistrationModel.html",[0,0.453,2,0.411,3,0.117,4,0.101,5,0.101,8,0.34,21,0.715,25,0.117,26,0.487,28,0.181,29,0.018,37,0.774,41,0.534,42,0.272,43,0.474,49,0.682,59,0.458,63,0.534,80,0.01,81,0.01,82,0.007,93,0.534,94,0.561,95,0.751,96,0.832,97,0.588,98,1.049,99,1.049,100,0.588,101,0.682,102,0.684,103,1.005,104,0.588,105,0.588,106,0.488,107,0.588,108,0.832,109,0.588,110,0.398,111,0.187,112,0.648,113,0.534,114,0.832,115,0.588,116,1.186,117,0.718,118,1.15,119,1.143,120,0.965,121,0.965,122,0.965,123,0.965,124,0.965,125,1.076,126,0.965,127,0.534,128,0.588,129,0.588,130,0.965,131,0.965,132,0.534,133,0.588,134,0.561,135,1.107,136,0.952,137,0.561,138,0.561,139,0.832,140,0.97,141,0.718,142,0.861,143,0.793,144,0.832,145,0.793,146,0.588,147,1.055,148,0.534,149,0.588,150,0.588,151,0.631,152,1.007,153,1.055,154,0.792,155,0.588,156,0.648,157,0.793,158,0.73,159,0.588,160,0.588,161,0.534,162,0.588,163,0.561,164,0.588,165,0.588,166,0.534,167,0.561,168,0.508,169,0.755,170,0.561,171,0.614,172,0.508,173,0.561,174,0.508,175,0.508,176,0.508,177,0.588,178,0.458,179,0.581,180,0.534,181,0.588,182,0.588,183,0.588,184,0.832,185,1.005,186,0.755,187,0.793,188,0.832,189,0.832,190,0.588,191,1.005,192,0.588,193,0.588,194,0.243,195,0.872,196,0.534,197,0.588,198,0.588,199,0.588,200,0.588,201,0.534,202,0.534,203,0.588,204,1,205,0.965,206,0.718,207,0.449,208,0.588,209,0.965,210,0.588,211,0.534,212,0.965,213,0.588,214,0.534,215,0.534,216,0.92,217,0.588,218,0.588,219,0.588,220,0.588,221,0.588,222,0.588,223,0.588,224,0.588,225,0.282,226,0.561,227,0.832,228,0.718,229,0.793,230,0.588,231,0.588,232,0.458,233,0.561,234,0.561,235,0.508,236,0.588,237,0.588,238,0.561,239,0.588,240,0.588,241,0.588,242,0.534,243,0.534,244,0.832,245,1.15,246,1.15,247,0.832,248,0.588,249,0.534,250,1.15,251,0.534,252,0.588,253,0.534,254,0.588,255,0.755,256,1.096,257,0.588,258,0.588,259,0.588,260,0.588,261,0.588,262,0.262,263,0.534,264,0.561,265,0.534,266,0.588,267,0.588,268,0.588]],["title/classes/RomanNumber.html",[46,0.719,480,2.285]],["body/classes/RomanNumber.html",[3,0.12,4,0.103,5,0.103,8,0.281,25,0.195,26,0.349,28,0.185,29,0.018,42,0.12,43,0.478,46,0.662,50,5.156,54,1.992,56,2.914,80,0.012,81,0.011,82,0.008,102,0.665,106,0.467,110,0.556,111,0.368,175,0.916,194,0.531,207,0.441,225,0.582,262,0.516,270,1.853,275,1.584,282,1.903,285,3.775,287,3.752,320,2.174,322,2.169,326,2.606,332,5.273,342,3.061,364,4.206,437,3.978,440,4.308,443,4.241,447,4.308,454,3.469,470,2.457,480,2.955,481,5.136,489,1.734,508,2.269,543,3.173,552,2.767,588,2.326,595,3.469,641,3.173,771,5.76,863,3.436,1051,4.206,1057,4.72,1092,6.439,1093,2.995,1094,3.471,1095,5.635,1096,5.635,1097,5.635,1098,5.635,1099,5.635,1100,5.635,1101,5.635,1102,4.876,1103,4.876,1104,4.876,1105,4.876,1106,4.876,1107,5.635,1108,6.112,1109,3.471,1110,4.876,1111,4.876,1112,4.876,1113,4.876,1114,4.876,1115,4.876,1116,6.857,1117,6.112,1118,5.273,1119,3.471,1120,6.112,1121,6.112,1122,6.112,1123,6.112,1124,6.676,1125,3.471,1126,4.876,1127,4.876,1128,4.876,1129,4.876,1130,4.876,1131,4.876,1132,4.876,1133,4.876,1134,4.876,1135,4.876,1136,4.876,1137,3.471,1138,4.876,1139,3.471,1140,4.876,1141,3.471,1142,3.471,1143,4.876,1144,7.114,1145,3.471,1146,6.112,1147,6.676,1148,6.112,1149,6.999,1150,4.876,1151,3.471,1152,3.471,1153,4.876,1154,5.635,1155,3.471,1156,3.471,1157,4.876,1158,3.471,1159,4.876,1160,3.471,1161,3.471,1162,6.438,1163,6.857,1164,3.471,1165,4.876,1166,4.876,1167,6.112,1168,4.876,1169,5.635,1170,4.876,1171,4.876,1172,3.471,1173,4.876,1174,3.471,1175,3.471,1176,3.471,1177,3.471,1178,3.471,1179,3.471,1180,3.471,1181,3.471,1182,3.471,1183,3.471,1184,3.471,1185,3.471,1186,3.471,1187,4.876,1188,3.471,1189,3.471,1190,4.876,1191,3.471,1192,3.471,1193,3.471,1194,3.471,1195,3.471,1196,3.471,1197,3.471,1198,3.471]],["title/interfaces/SelectedRange.html",[0,0.217,1199,2.912]],["body/interfaces/SelectedRange.html",[0,0.13,2,0.274,3,0.078,4,0.106,5,0.067,8,0.113,12,1.748,13,1.748,22,2.739,25,0.22,26,0.354,28,0.154,29,0.018,30,1.67,34,1.102,35,0.927,37,0.56,39,3.377,42,0.123,43,0.442,44,1.025,45,1.025,46,0.676,53,3.488,54,2.154,56,2.533,77,2.149,80,0.005,81,0.008,82,0.01,102,0.615,106,0.435,110,0.162,111,0.125,119,0.689,125,0.705,142,0.705,143,0.587,147,0.943,151,0.693,152,1.002,153,0.723,154,1.01,156,0.591,157,0.819,158,0.406,167,1.112,168,0.741,169,1.086,170,0.723,171,0.988,173,0.374,174,0.531,175,0.972,176,0.893,179,0.722,196,0.559,225,0.611,232,0.479,238,0.374,272,2.204,275,1.746,287,3.291,300,1.08,304,2.002,320,2.194,322,1.608,323,1.372,326,2.857,327,2.81,348,1.372,354,4.739,355,3.082,363,2.739,375,3.736,390,1.372,392,3.082,408,1.595,418,1.595,425,1.595,428,2.499,438,1.893,443,2.149,445,4.765,451,2.739,454,2.013,469,3.772,471,1.473,489,2.615,508,2.537,552,1.605,588,2.843,597,2.149,598,3.257,599,3.082,606,2.65,617,3.738,619,3.488,664,2.739,714,2.308,728,2.499,773,1.748,774,1.953,779,1.748,808,2.739,853,1.748,854,5.558,857,2.482,863,1.595,869,1.748,887,2.739,924,1.748,961,6.014,969,3.06,971,3.06,974,1.953,990,1.953,998,3.822,1014,1.953,1056,1.953,1199,4.151,1200,1.953,1201,1.953,1202,6.815,1203,3.546,1204,4.949,1205,3.546,1206,3.546,1207,3.546,1208,3.546,1209,3.546,1210,4.949,1211,4.949,1212,4.949,1213,4.949,1214,4.949,1215,5.706,1216,2.308,1217,4.737,1218,4.637,1219,2.263,1220,3.06,1221,1.953,1222,1.953,1223,2.263,1224,2.263,1225,2.263,1226,2.263,1227,2.263,1228,2.263,1229,2.263,1230,2.263,1231,5.959,1232,2.263,1233,2.263,1234,2.263,1235,5.701,1236,2.263,1237,4.373,1238,3.546,1239,3.546,1240,3.06,1241,4.373,1242,3.546,1243,5.374,1244,4.373,1245,4.151,1246,6.614,1247,2.263,1248,4.373,1249,1.953,1250,2.263,1251,3.546,1252,2.263,1253,3.06,1254,4.373,1255,4.373,1256,2.263,1257,3.546,1258,5.374,1259,3.546,1260,3.546,1261,4.373,1262,3.546,1263,3.06,1264,2.263,1265,2.263,1266,3.822,1267,3.546,1268,2.263,1269,2.263,1270,2.263,1271,3.546,1272,2.263,1273,2.263,1274,4.949,1275,5.374,1276,2.263,1277,4.373,1278,1.953,1279,3.546,1280,4.949,1281,2.263,1282,2.263,1283,2.263,1284,2.263,1285,2.263,1286,2.263,1287,5.701,1288,4.949,1289,2.263,1290,2.263,1291,2.263,1292,2.263,1293,2.263,1294,2.263,1295,2.263,1296,2.263,1297,2.263,1298,6.971,1299,2.263,1300,2.263,1301,3.772,1302,3.546,1303,1.953,1304,2.263,1305,5.374,1306,4.373,1307,2.263,1308,2.263,1309,2.263,1310,3.546,1311,3.546,1312,3.546,1313,2.263,1314,3.546,1315,3.546,1316,2.263,1317,2.263,1318,2.263,1319,5.374,1320,3.546,1321,2.263,1322,2.263,1323,4.373,1324,4.949,1325,2.263,1326,2.263,1327,4.373,1328,2.263,1329,2.263,1330,2.263,1331,2.263,1332,2.263,1333,2.263,1334,2.263,1335,2.263,1336,4.949,1337,3.546,1338,2.263,1339,2.263,1340,2.263,1341,2.263,1342,2.263,1343,2.263,1344,2.263,1345,4.373,1346,4.949,1347,2.263,1348,4.949,1349,5.374,1350,3.546,1351,4.373,1352,2.263,1353,3.546,1354,4.373,1355,4.373,1356,2.263,1357,1.953,1358,2.263,1359,2.263,1360,2.263,1361,2.263,1362,2.263,1363,2.263,1364,4.918,1365,2.263,1366,2.263,1367,2.263,1368,2.263,1369,2.263,1370,2.263,1371,4.373,1372,2.263,1373,2.263,1374,2.263,1375,3.546,1376,2.263,1377,2.263,1378,2.263,1379,2.263,1380,2.263,1381,2.263,1382,1.953,1383,2.263,1384,2.263,1385,2.263,1386,3.546,1387,2.263,1388,1.953,1389,3.546,1390,2.263,1391,3.546,1392,2.263,1393,3.546,1394,3.546,1395,3.546,1396,2.263,1397,3.546,1398,2.263,1399,3.546,1400,3.546,1401,2.263,1402,3.546,1403,3.546,1404,3.546,1405,2.263,1406,2.263,1407,1.748,1408,2.263,1409,3.546,1410,2.263,1411,2.263,1412,2.263,1413,2.263,1414,2.263,1415,2.263,1416,2.263,1417,2.263,1418,2.263,1419,2.263,1420,2.263,1421,2.263,1422,2.263,1423,2.263,1424,2.263,1425,2.263]],["title/interfaces/TextCoords.html",[0,0.217,174,0.565]],["body/interfaces/TextCoords.html",[0,0.453,2,0.411,3,0.117,4,0.101,5,0.101,8,0.347,21,0.715,25,0.117,26,0.488,28,0.179,29,0.018,37,0.774,41,0.534,42,0.272,43,0.474,49,0.683,59,0.458,63,0.534,80,0.01,81,0.01,82,0.007,93,0.534,94,0.561,95,0.752,96,0.832,97,0.589,98,1.05,99,1.05,100,0.589,101,0.683,102,0.696,103,1.005,104,0.589,105,0.589,106,0.487,107,0.589,108,0.832,109,0.589,110,0.398,111,0.352,112,0.648,113,0.534,114,0.832,115,0.589,116,1.186,117,0.719,118,1.15,119,1.143,120,0.966,121,0.966,122,0.966,123,0.966,124,0.966,125,1.076,126,0.966,127,0.534,128,0.589,129,0.589,130,0.966,131,0.966,132,0.534,133,0.589,134,0.561,135,1.108,136,0.953,137,0.561,138,0.561,139,0.832,140,0.97,141,0.719,142,0.861,143,0.793,144,0.832,145,0.793,146,0.589,147,1.056,148,0.534,149,0.589,150,0.589,151,0.649,152,1.007,153,1.056,154,0.792,155,0.589,156,0.648,157,0.793,158,0.73,159,0.589,160,0.589,161,0.534,162,0.589,163,0.561,164,0.589,165,0.589,166,0.534,167,0.561,168,0.508,169,1.005,170,0.561,171,0.712,172,0.719,173,0.793,174,0.719,175,0.906,176,0.906,177,0.589,178,0.458,179,0.581,180,0.534,181,0.589,182,0.589,183,0.589,184,0.832,185,1.005,186,0.755,187,0.793,188,0.832,189,0.832,190,0.589,191,1.005,192,0.589,193,0.589,194,0.243,195,0.872,196,0.534,197,0.589,198,0.589,199,0.589,200,0.589,201,0.534,202,0.534,203,0.589,204,1.001,205,0.966,206,0.719,207,0.399,208,0.589,209,0.966,210,0.589,211,0.534,212,0.966,213,0.589,214,0.534,215,0.534,216,0.92,217,0.589,218,0.589,219,0.589,220,0.589,221,0.589,222,0.589,223,0.589,224,0.589,225,0.282,226,0.561,227,0.832,228,0.719,229,0.793,230,0.589,231,0.589,232,0.458,233,0.561,234,0.561,235,0.508,236,0.589,237,0.589,238,0.561,239,0.589,240,0.589,241,0.589,242,0.534,243,0.534,244,0.832,245,0.966,246,0.966,247,0.832,248,0.589,249,0.534,250,0.966,251,0.534,252,0.589,253,0.534,254,0.589,255,0.534,256,0.92,257,0.589,258,0.589,259,0.589,260,0.589,261,0.589,262,0.262,263,0.534,264,0.561,265,0.534,266,0.589,267,0.589,268,0.589]],["title/interfaces/TextLayerPart.html",[0,0.217,166,0.594]],["body/interfaces/TextLayerPart.html",[0,0.453,2,0.414,3,0.118,4,0.102,5,0.102,8,0.348,21,0.716,25,0.118,26,0.489,28,0.174,29,0.018,37,0.777,41,0.538,42,0.272,43,0.475,49,0.686,59,0.462,63,0.538,80,0.01,81,0.01,82,0.007,93,0.538,94,0.565,95,0.755,96,0.837,97,0.593,98,1.053,99,1.053,100,0.593,101,0.686,102,0.684,103,1.008,104,0.593,105,0.593,106,0.487,107,0.593,108,0.837,109,0.593,110,0.4,111,0.188,112,0.651,113,0.538,114,0.837,115,0.593,116,1.188,117,0.722,118,1.185,119,1.144,120,0.97,121,0.97,122,0.97,123,0.97,124,0.97,125,1.09,126,0.97,127,0.538,128,0.593,129,0.593,130,0.97,131,0.97,132,0.538,133,0.593,134,0.565,135,1.111,136,0.956,137,0.565,138,0.565,139,0.837,140,0.972,141,0.722,142,0.864,143,0.798,144,0.837,145,0.798,146,0.593,147,1.099,148,0.538,149,0.593,150,0.593,151,0.65,152,1.034,153,1.172,154,0.795,155,0.593,156,0.651,157,0.798,158,0.732,159,0.593,160,0.593,161,0.76,162,0.837,163,0.798,164,0.837,165,0.837,166,0.76,167,0.565,168,0.512,169,0.76,170,0.565,171,0.617,172,0.512,173,0.565,174,0.512,175,0.512,176,0.512,177,0.593,178,0.462,179,0.584,180,0.538,181,0.593,182,0.593,183,0.593,184,0.837,185,1.008,186,0.76,187,0.798,188,0.837,189,0.837,190,0.593,191,1.008,192,0.593,193,0.593,194,0.245,195,0.874,196,0.538,197,0.593,198,0.593,199,0.593,200,0.593,201,0.538,202,0.538,203,0.593,204,1.004,205,0.97,206,0.722,207,0.4,208,0.593,209,0.97,210,0.593,211,0.538,212,0.97,213,0.593,214,0.538,215,0.538,216,0.924,217,0.593,218,0.593,219,0.593,220,0.593,221,0.593,222,0.593,223,0.593,224,0.593,225,0.284,226,0.565,227,0.837,228,0.722,229,0.798,230,0.593,231,0.593,232,0.462,233,0.565,234,0.565,235,0.512,236,0.593,237,0.593,238,0.565,239,0.593,240,0.593,241,0.593,242,0.538,243,0.538,244,0.837,245,0.97,246,0.97,247,0.837,248,0.593,249,0.538,250,0.97,251,0.538,252,0.593,253,0.538,254,0.593,255,0.538,256,0.924,257,0.593,258,0.593,259,0.593,260,0.593,261,0.593,262,0.264,263,0.538,264,0.565,265,0.538,266,0.593,267,0.593,268,0.593]],["title/classes/TextRange.html",[46,0.719,1426,2.912]],["body/classes/TextRange.html",[3,0.164,4,0.141,5,0.141,8,0.328,25,0.24,26,0.429,28,0.178,29,0.018,42,0.164,43,0.429,46,0.901,54,2.077,56,2.34,80,0.01,81,0.013,82,0.01,102,0.684,106,0.432,110,0.495,111,0.363,151,0.726,158,0.541,194,0.531,207,0.434,225,0.594,262,0.509,270,2.524,275,2.537,282,2.34,285,3.14,293,3.695,299,4.194,300,2.256,304,2.233,320,2.132,322,2.321,326,2.34,327,2.34,355,4.878,375,3.89,380,3.402,382,3.021,422,2.865,454,3.402,471,3.901,474,4.078,489,1.681,508,2.037,512,4.639,549,3.332,551,3.077,552,2.713,588,2.256,764,4.224,765,4.629,1240,4.078,1266,5.892,1426,5.793,1427,6.472,1428,4.078,1429,6.582,1430,7.677,1431,4.727,1432,4.727,1433,5.994,1434,5.994,1435,4.727,1436,4.727,1437,4.727,1438,4.727,1439,4.727,1440,5.994,1441,4.727,1442,4.727,1443,5.171,1444,5.994,1445,4.727,1446,5.994,1447,4.727,1448,4.727,1449,4.727,1450,4.727,1451,4.078,1452,4.727,1453,4.727,1454,5.994,1455,4.727,1456,4.727,1457,4.727]],["title/interfaces/ThesauriSet.html",[0,0.217,201,0.594]],["body/interfaces/ThesauriSet.html",[0,0.453,2,0.413,3,0.118,4,0.102,5,0.102,8,0.347,21,0.716,26,0.458,28,0.166,29,0.018,37,0.776,41,0.537,42,0.272,43,0.475,49,0.795,59,0.461,63,0.759,80,0.01,81,0.01,82,0.007,93,0.537,94,0.564,95,0.754,96,0.836,97,0.592,98,1.053,99,1.053,100,0.592,101,0.686,102,0.684,103,1.007,104,0.592,105,0.592,106,0.487,107,0.592,108,0.836,109,0.592,110,0.4,111,0.188,112,0.651,113,0.537,114,0.836,115,0.592,116,1.188,117,0.722,118,1.152,119,1.144,120,0.969,121,0.969,122,0.969,123,0.969,124,0.969,125,1.077,126,0.969,127,0.537,128,0.592,129,0.592,130,0.969,131,0.969,132,0.537,133,0.592,134,0.564,135,1.11,136,0.955,137,0.564,138,0.564,139,0.836,140,1.022,141,0.722,142,0.911,143,0.797,144,0.836,145,0.797,146,0.592,147,1.058,148,0.537,149,0.592,150,0.592,151,0.632,152,1.009,153,1.058,154,0.795,155,0.592,156,0.651,157,0.797,158,0.732,159,0.592,160,0.592,161,0.537,162,0.592,163,0.564,164,0.592,165,0.592,166,0.537,167,0.564,168,0.511,169,0.759,170,0.564,171,0.617,172,0.511,173,0.564,174,0.511,175,0.511,176,0.511,177,0.592,178,0.461,179,0.583,180,0.537,181,0.592,182,0.592,183,0.592,184,0.836,185,1.075,186,0.759,187,0.797,188,0.836,189,0.969,190,0.836,191,1.075,192,0.836,193,0.836,194,0.4,195,0.907,196,0.759,197,0.836,198,0.836,199,0.836,200,0.836,201,0.759,202,0.537,203,0.592,204,1.003,205,0.969,206,0.722,207,0.4,208,0.592,209,0.969,210,0.592,211,0.537,212,0.969,213,0.592,214,0.537,215,0.537,216,0.923,217,0.592,218,0.592,219,0.592,220,0.592,221,0.592,222,0.592,223,0.592,224,0.592,225,0.284,226,0.564,227,0.836,228,0.722,229,0.797,230,0.592,231,0.592,232,0.461,233,0.564,234,0.564,235,0.511,236,0.592,237,0.592,238,0.564,239,0.592,240,0.592,241,0.592,242,0.537,243,0.537,244,0.836,245,0.969,246,0.969,247,0.836,248,0.592,249,0.537,250,0.969,251,0.537,252,0.592,253,0.537,254,0.592,255,0.537,256,0.923,257,0.592,258,0.592,259,0.592,260,0.592,261,0.592,262,0.264,263,0.537,264,0.564,265,0.537,266,0.592,267,0.592,268,0.592,1075,2.943,1458,3.411]],["title/interfaces/Thesaurus.html",[0,0.217,185,0.594]],["body/interfaces/Thesaurus.html",[0,0.453,2,0.413,3,0.118,4,0.101,5,0.101,8,0.347,21,0.716,25,0.118,26,0.488,28,0.177,29,0.018,37,0.776,41,0.537,42,0.272,43,0.475,49,0.685,59,0.461,63,0.537,80,0.01,81,0.01,82,0.007,93,0.537,94,0.564,95,0.754,96,0.835,97,0.592,98,1.052,99,1.052,100,0.592,101,0.685,102,0.684,103,1.007,104,0.592,105,0.592,106,0.487,107,0.592,108,0.835,109,0.592,110,0.399,111,0.188,112,0.65,113,0.537,114,0.835,115,0.592,116,1.188,117,0.721,118,1.152,119,1.172,120,0.968,121,0.968,122,0.968,123,0.968,124,0.968,125,1.077,126,0.968,127,0.537,128,0.592,129,0.592,130,0.968,131,0.968,132,0.537,133,0.592,134,0.564,135,1.11,136,0.955,137,0.564,138,0.564,139,0.835,140,0.992,141,0.721,142,0.863,143,0.796,144,0.835,145,0.796,146,0.592,147,1.058,148,0.537,149,0.592,150,0.592,151,0.632,152,1.009,153,1.058,154,0.794,155,0.592,156,0.65,157,0.796,158,0.732,159,0.592,160,0.592,161,0.537,162,0.592,163,0.564,164,0.592,165,0.592,166,0.537,167,0.564,168,0.511,169,0.758,170,0.564,171,0.616,172,0.511,173,0.564,174,0.511,175,0.511,176,0.511,177,0.592,178,0.461,179,0.583,180,0.537,181,0.592,182,0.592,183,0.592,184,0.835,185,1.074,186,0.955,187,1.098,188,1.11,189,0.835,190,0.592,191,1.007,192,0.592,193,0.592,194,0.244,195,0.873,196,0.537,197,0.592,198,0.592,199,0.592,200,0.592,201,0.537,202,0.537,203,0.592,204,1.003,205,0.968,206,0.721,207,0.4,208,0.592,209,0.968,210,0.592,211,0.537,212,0.968,213,0.592,214,0.537,215,0.537,216,0.923,217,0.592,218,0.592,219,0.592,220,0.592,221,0.592,222,0.592,223,0.592,224,0.592,225,0.283,226,0.564,227,0.835,228,0.721,229,0.796,230,0.592,231,0.592,232,0.461,233,0.564,234,0.564,235,0.511,236,0.592,237,0.592,238,0.564,239,0.592,240,0.592,241,0.592,242,0.537,243,0.537,244,0.835,245,0.968,246,0.968,247,0.835,248,0.592,249,0.537,250,0.968,251,0.537,252,0.592,253,0.537,254,0.592,255,0.537,256,0.923,257,0.592,258,0.592,259,0.592,260,0.592,261,0.592,262,0.264,263,0.537,264,0.564,265,0.537,266,0.592,267,0.592,268,0.592]],["title/interfaces/ThesaurusEntry.html",[0,0.217,186,0.594]],["body/interfaces/ThesaurusEntry.html",[0,0.453,2,0.415,3,0.119,4,0.102,5,0.102,8,0.348,21,0.717,25,0.119,26,0.489,28,0.174,29,0.018,37,0.778,41,0.539,42,0.272,43,0.476,49,0.687,59,0.463,63,0.539,80,0.011,81,0.011,82,0.007,93,0.539,94,0.566,95,0.756,96,0.838,97,0.594,98,1.054,99,1.054,100,0.594,101,0.687,102,0.684,103,1.009,104,0.594,105,0.594,106,0.487,107,0.594,108,0.838,109,0.594,110,0.476,111,0.189,112,0.652,113,0.539,114,0.838,115,0.594,116,1.189,117,0.723,118,1.153,119,1.173,120,0.971,121,0.971,122,0.971,123,0.971,124,0.971,125,1.077,126,0.971,127,0.539,128,0.594,129,0.594,130,0.971,131,0.971,132,0.539,133,0.594,134,0.566,135,1.112,136,0.957,137,0.566,138,0.566,139,0.838,140,0.972,141,0.723,142,0.865,143,0.799,144,0.838,145,0.799,146,0.594,147,1.059,148,0.539,149,0.594,150,0.594,151,0.633,152,1.01,153,1.059,154,0.796,155,0.594,156,0.652,157,0.799,158,0.733,159,0.594,160,0.594,161,0.539,162,0.594,163,0.566,164,0.594,165,0.594,166,0.539,167,0.566,168,0.513,169,0.76,170,0.566,171,0.618,172,0.513,173,0.566,174,0.513,175,0.513,176,0.513,177,0.594,178,0.463,179,0.678,180,0.539,181,0.594,182,0.594,183,0.594,184,0.971,185,1.047,186,0.881,187,0.799,188,0.838,189,0.838,190,0.594,191,1.009,192,0.594,193,0.594,194,0.245,195,0.874,196,0.539,197,0.594,198,0.594,199,0.594,200,0.594,201,0.539,202,0.539,203,0.594,204,1.005,205,0.971,206,0.723,207,0.401,208,0.594,209,0.971,210,0.594,211,0.539,212,0.971,213,0.594,214,0.539,215,0.539,216,0.925,217,0.594,218,0.594,219,0.594,220,0.594,221,0.594,222,0.594,223,0.594,224,0.594,225,0.285,226,0.566,227,0.838,228,0.723,229,0.799,230,0.594,231,0.594,232,0.463,233,0.566,234,0.566,235,0.513,236,0.594,237,0.594,238,0.566,239,0.594,240,0.594,241,0.594,242,0.539,243,0.539,244,0.838,245,0.971,246,0.971,247,0.838,248,0.594,249,0.539,250,0.971,251,0.539,252,0.594,253,0.539,254,0.594,255,0.539,256,0.925,257,0.594,258,0.594,259,0.594,260,0.594,261,0.594,262,0.265,263,0.539,264,0.566,265,0.539,266,0.594,267,0.594,268,0.594]],["title/interfaces/ThesaurusFilter.html",[0,0.217,202,0.594]],["body/interfaces/ThesaurusFilter.html",[0,0.453,2,0.408,3,0.117,4,0.1,5,0.1,8,0.346,21,0.713,25,0.117,26,0.487,28,0.181,29,0.018,37,0.772,41,0.531,42,0.272,43,0.497,49,0.68,59,0.455,63,0.531,80,0.01,81,0.01,82,0.007,93,0.531,94,0.558,95,0.749,96,0.829,97,0.585,98,1.18,99,1.18,100,0.585,101,0.68,102,0.69,103,1.003,104,0.585,105,0.585,106,0.487,107,0.585,108,0.829,109,0.585,110,0.397,111,0.375,112,0.645,113,0.531,114,0.829,115,0.585,116,1.185,117,0.716,118,1.148,119,1.17,120,0.963,121,0.963,122,0.963,123,0.963,124,0.963,125,1.075,126,1.047,127,0.531,128,0.585,129,0.585,130,0.963,131,0.963,132,0.531,133,0.585,134,0.558,135,1.105,136,0.95,137,0.558,138,0.558,139,0.829,140,0.968,141,0.716,142,0.859,143,0.79,144,0.829,145,0.79,146,0.585,147,1.053,148,0.531,149,0.585,150,0.585,151,0.63,152,1.006,153,1.053,154,0.79,155,0.585,156,0.645,157,0.79,158,0.729,159,0.585,160,0.585,161,0.531,162,0.585,163,0.558,164,0.585,165,0.585,166,0.531,167,0.558,168,0.505,169,0.752,170,0.558,171,0.611,172,0.505,173,0.558,174,0.505,175,0.505,176,0.505,177,0.585,178,0.455,179,0.579,180,0.531,181,0.585,182,0.585,183,0.585,184,0.829,185,1.003,186,0.752,187,0.79,188,1.105,189,0.963,190,0.585,191,1.003,192,0.585,193,0.585,194,0.241,195,0.871,196,0.531,197,0.585,198,0.585,199,0.585,200,0.585,201,0.531,202,0.752,203,1.047,204,0.998,205,0.963,206,0.716,207,0.398,208,0.585,209,0.963,210,0.585,211,0.531,212,0.963,213,0.585,214,0.531,215,0.531,216,0.917,217,0.585,218,0.585,219,0.585,220,0.585,221,0.585,222,0.585,223,0.585,224,0.585,225,0.28,226,0.558,227,0.829,228,0.716,229,0.79,230,0.585,231,0.585,232,0.455,233,0.558,234,0.558,235,0.505,236,0.585,237,0.585,238,0.558,239,0.585,240,0.585,241,0.585,242,0.531,243,0.531,244,0.829,245,0.963,246,0.963,247,0.829,248,0.585,249,0.531,250,0.963,251,0.531,252,0.585,253,0.531,254,0.585,255,0.531,256,0.917,257,0.585,258,0.585,259,0.585,260,0.585,261,0.585,262,0.261,263,0.531,264,0.558,265,0.531,266,0.585,267,0.585,268,0.585]],["title/classes/TokenLocation.html",[46,0.719,1217,2.658]],["body/classes/TokenLocation.html",[3,0.149,4,0.128,5,0.128,8,0.215,25,0.149,26,0.404,28,0.178,29,0.018,30,1.339,42,0.149,43,0.478,46,0.821,54,2.154,57,2.445,80,0.009,81,0.012,82,0.009,102,0.503,106,0.42,111,0.392,142,0.804,151,0.691,154,0.804,171,0.806,172,0.846,194,0.527,207,0.441,225,0.556,262,0.517,270,2.3,272,3.588,275,2.54,282,2.204,285,3.004,293,3.801,299,4.05,300,2.055,304,1.604,322,2.254,326,2.832,327,2.832,331,3.979,345,3.421,352,3.421,371,2.3,374,3.816,375,3.656,380,3.204,382,2.845,386,2.61,439,3.716,451,5.161,471,2.804,489,2.008,508,1.464,588,2.055,711,3.674,728,5.294,780,3.979,798,3.327,1216,4.926,1217,5.334,1263,4.87,1303,3.716,1388,3.716,1407,4.36,1443,4.87,1459,5.748,1460,3.716,1461,7.443,1462,7.443,1463,4.87,1464,6.683,1465,7.254,1466,5.645,1467,4.307,1468,4.307,1469,4.307,1470,4.87,1471,4.307,1472,4.307,1473,5.645,1474,4.307,1475,4.307,1476,5.645,1477,4.87,1478,4.87,1479,4.87,1480,4.307,1481,4.307,1482,5.645,1483,4.307,1484,4.307,1485,4.307,1486,7.254,1487,4.307,1488,4.307,1489,5.645,1490,4.307,1491,6.297,1492,5.645,1493,6.297,1494,4.307,1495,4.307,1496,4.307,1497,4.307,1498,4.307,1499,5.645,1500,4.307,1501,4.307,1502,4.307,1503,4.307,1504,4.307,1505,4.307,1506,4.307,1507,4.307]],["title/classes/TokenPoint.html",[46,0.719,1216,2.454]],["body/classes/TokenPoint.html",[3,0.156,4,0.134,5,0.134,8,0.289,25,0.156,26,0.416,28,0.185,29,0.018,42,0.156,46,0.857,54,2.153,80,0.01,81,0.013,82,0.01,102,0.703,106,0.426,111,0.409,151,0.686,154,0.915,169,1.108,171,0.823,172,0.963,175,1.098,176,1.098,179,0.545,194,0.537,207,0.448,225,0.534,262,0.525,270,2.401,272,3.24,275,2.459,282,2.266,285,3.067,293,3.846,299,4.117,300,2.146,304,2.162,320,2.065,322,2.208,326,2.812,327,1.756,380,3.295,382,2.926,438,2.401,454,3.295,470,3.424,489,2.287,508,1.528,551,2.927,552,3.075,553,4.092,559,4.092,561,3.169,764,3.169,1216,4.959,1249,5.009,1253,5.009,1357,3.88,1407,4.965,1451,3.88,1459,5.844,1463,5.009,1470,5.009,1477,3.88,1478,3.88,1479,3.88,1508,3.88,1509,5.805,1510,5.805,1511,4.497,1512,4.497,1513,4.497,1514,4.497,1515,4.497,1516,4.497,1517,5.805,1518,4.497,1519,4.497,1520,5.805,1521,4.497,1522,4.497,1523,4.497,1524,4.497,1525,7.033,1526,7.033,1527,7.033,1528,6.794,1529,4.497,1530,4.497,1531,6.794,1532,6.794,1533,5.805,1534,4.497]],["title/interfaces/TokenTextLayerLine.html",[0,0.217,168,0.565]],["body/interfaces/TokenTextLayerLine.html",[0,0.453,2,0.414,3,0.118,4,0.102,5,0.102,8,0.348,21,0.717,25,0.118,26,0.489,28,0.174,29,0.018,37,0.777,41,0.539,42,0.272,43,0.476,49,0.687,59,0.462,63,0.539,80,0.01,81,0.01,82,0.007,93,0.539,94,0.566,95,0.755,96,0.837,97,0.593,98,1.054,99,1.054,100,0.593,101,0.687,102,0.688,103,1.008,104,0.593,105,0.593,106,0.487,107,0.593,108,0.837,109,0.593,110,0.4,111,0.189,112,0.652,113,0.539,114,0.837,115,0.593,116,1.189,117,0.723,118,1.153,119,1.145,120,0.97,121,0.97,122,0.97,123,0.97,124,0.97,125,1.082,126,0.97,127,0.539,128,0.593,129,0.593,130,0.97,131,0.97,132,0.539,133,0.593,134,0.566,135,1.111,136,0.956,137,0.566,138,0.566,139,0.837,140,0.972,141,0.723,142,0.864,143,0.798,144,0.837,145,0.798,146,0.593,147,1.059,148,0.539,149,0.593,150,0.593,151,0.664,152,1.009,153,1.059,154,0.796,155,0.593,156,0.652,157,0.925,158,0.733,159,0.593,160,0.593,161,0.539,162,0.593,163,0.566,164,0.593,165,0.593,166,0.539,167,0.798,168,0.723,169,1.008,170,1.004,171,0.618,172,0.512,173,0.566,174,0.512,175,0.512,176,0.512,177,0.593,178,0.462,179,0.584,180,0.539,181,0.593,182,0.593,183,0.593,184,0.837,185,1.008,186,0.76,187,0.798,188,0.837,189,0.837,190,0.593,191,1.008,192,0.593,193,0.593,194,0.245,195,0.874,196,0.539,197,0.593,198,0.593,199,0.593,200,0.593,201,0.539,202,0.539,203,0.593,204,1.004,205,0.97,206,0.723,207,0.401,208,0.593,209,0.97,210,0.593,211,0.539,212,0.97,213,0.593,214,0.539,215,0.539,216,0.925,217,0.593,218,0.593,219,0.593,220,0.593,221,0.593,222,0.593,223,0.593,224,0.593,225,0.284,226,0.566,227,0.837,228,0.723,229,0.798,230,0.593,231,0.593,232,0.462,233,0.566,234,0.566,235,0.512,236,0.593,237,0.593,238,0.566,239,0.593,240,0.593,241,0.593,242,0.539,243,0.539,244,0.837,245,0.97,246,0.97,247,0.837,248,0.593,249,0.539,250,0.97,251,0.539,252,0.593,253,0.539,254,0.593,255,0.539,256,0.925,257,0.593,258,0.593,259,0.593,260,0.593,261,0.593,262,0.264,263,0.539,264,0.566,265,0.539,266,0.593,267,0.593,268,0.593]],["title/interfaces/User.html",[0,0.217,37,0.483]],["body/interfaces/User.html",[0,0.453,2,0.403,3,0.115,4,0.099,5,0.099,8,0.345,21,0.747,25,0.115,26,0.485,28,0.185,29,0.018,37,0.843,41,0.524,42,0.271,43,0.511,49,0.674,59,0.45,63,0.524,80,0.01,81,0.01,82,0.007,93,0.524,94,0.55,95,0.81,96,0.821,97,0.578,98,1.041,99,1.041,100,0.578,101,0.674,102,0.682,103,0.998,104,0.578,105,0.578,106,0.488,107,0.578,108,0.821,109,0.578,110,0.394,111,0.373,112,0.639,113,0.524,114,0.821,115,0.578,116,1.182,117,0.709,118,1.143,119,1.138,120,0.956,121,0.956,122,0.956,123,0.956,124,0.956,125,1.073,126,0.956,127,0.524,128,0.578,129,0.578,130,0.956,131,0.956,132,0.524,133,0.578,134,0.55,135,1.1,136,0.945,137,0.55,138,0.55,139,0.821,140,0.964,141,0.709,142,0.854,143,0.783,144,0.821,145,0.783,146,0.578,147,1.048,148,0.524,149,0.578,150,0.578,151,0.627,152,1.003,153,1.048,154,0.784,155,0.578,156,0.639,157,0.783,158,0.725,159,0.578,160,0.578,161,0.524,162,0.578,163,0.55,164,0.578,165,0.578,166,0.524,167,0.55,168,0.499,169,0.745,170,0.55,171,0.606,172,0.499,173,0.55,174,0.499,175,0.499,176,0.499,177,0.578,178,0.45,179,0.573,180,0.524,181,0.578,182,0.578,183,0.578,184,0.821,185,0.998,186,0.745,187,0.783,188,0.821,189,0.821,190,0.578,191,0.998,192,0.578,193,0.578,194,0.238,195,0.867,196,0.524,197,0.578,198,0.578,199,0.578,200,0.578,201,0.524,202,0.524,203,0.578,204,0.992,205,0.956,206,0.709,207,0.396,208,0.578,209,0.956,210,0.578,211,0.524,212,0.956,213,0.578,214,0.524,215,0.524,216,0.911,217,0.578,218,0.578,219,0.578,220,0.578,221,0.578,222,0.578,223,0.578,224,0.578,225,0.277,226,0.55,227,0.821,228,0.709,229,0.783,230,0.578,231,0.578,232,0.45,233,0.55,234,0.55,235,0.499,236,0.578,237,0.578,238,0.55,239,0.578,240,0.578,241,0.578,242,0.524,243,0.524,244,1.1,245,1.143,246,1.143,247,0.821,248,0.578,249,0.524,250,0.956,251,0.524,252,0.578,253,0.524,254,0.578,255,0.524,256,1.089,257,0.821,258,1.041,259,1.041,260,1.041,261,1.041,262,0.257,263,0.524,264,0.55,265,0.524,266,0.578,267,0.578,268,0.578]],["title/interfaces/UserFilter.html",[0,0.217,263,0.594]],["body/interfaces/UserFilter.html",[0,0.453,2,0.413,3,0.118,4,0.101,5,0.101,8,0.347,21,0.716,25,0.118,26,0.488,28,0.177,29,0.018,37,0.818,41,0.536,42,0.272,43,0.475,49,0.685,59,0.46,63,0.536,80,0.01,81,0.01,82,0.007,93,0.536,94,0.563,95,0.753,96,0.835,97,0.591,98,1.184,99,1.184,100,0.591,101,0.685,102,0.691,103,1.007,104,0.591,105,0.591,106,0.487,107,0.591,108,0.835,109,0.591,110,0.399,111,0.307,112,0.65,113,0.536,114,0.835,115,0.591,116,1.188,117,0.721,118,1.151,119,1.144,120,0.968,121,0.968,122,0.968,123,0.968,124,0.968,125,1.077,126,1.052,127,0.536,128,0.591,129,0.591,130,0.968,131,0.968,132,0.536,133,0.591,134,0.563,135,1.109,136,0.954,137,0.563,138,0.563,139,0.835,140,0.971,141,0.721,142,0.863,143,0.796,144,0.835,145,0.796,146,0.591,147,1.057,148,0.536,149,0.591,150,0.591,151,0.632,152,1.008,153,1.057,154,0.794,155,0.591,156,0.65,157,0.796,158,0.731,159,0.591,160,0.591,161,0.536,162,0.591,163,0.563,164,0.591,165,0.591,166,0.536,167,0.563,168,0.51,169,0.758,170,0.563,171,0.616,172,0.51,173,0.563,174,0.51,175,0.51,176,0.51,177,0.591,178,0.46,179,0.583,180,0.536,181,0.591,182,0.591,183,0.591,184,0.835,185,1.007,186,0.758,187,0.796,188,0.835,189,0.835,190,0.591,191,1.007,192,0.591,193,0.591,194,0.244,195,0.873,196,0.536,197,0.591,198,0.591,199,0.591,200,0.591,201,0.536,202,0.536,203,0.591,204,1.002,205,0.968,206,0.721,207,0.45,208,0.591,209,0.968,210,0.591,211,0.536,212,0.968,213,0.591,214,0.536,215,0.536,216,0.922,217,0.591,218,0.591,219,0.591,220,0.591,221,0.591,222,0.591,223,0.591,224,0.591,225,0.283,226,0.563,227,0.835,228,0.721,229,0.796,230,0.591,231,0.591,232,0.46,233,0.563,234,0.563,235,0.51,236,0.591,237,0.591,238,0.563,239,0.591,240,0.591,241,0.591,242,0.536,243,0.536,244,0.835,245,0.968,246,0.968,247,0.835,248,0.591,249,0.536,250,0.968,251,0.536,252,0.591,253,0.536,254,0.591,255,0.536,256,0.922,257,0.591,258,0.591,259,0.591,260,0.591,261,0.591,262,0.372,263,0.758,264,0.563,265,0.536,266,0.591,267,0.591,268,0.591]],["title/interfaces/UserInfo.html",[0,0.217,243,0.594]],["body/interfaces/UserInfo.html",[0,0.453,2,0.413,3,0.118,4,0.101,5,0.101,8,0.347,21,0.716,25,0.118,26,0.488,28,0.177,29,0.018,37,0.819,41,0.537,42,0.272,43,0.475,49,0.685,59,0.461,63,0.537,80,0.01,81,0.01,82,0.007,93,0.537,94,0.564,95,0.754,96,0.835,97,0.592,98,1.052,99,1.052,100,0.592,101,0.685,102,0.684,103,1.007,104,0.592,105,0.592,106,0.488,107,0.592,108,0.835,109,0.592,110,0.399,111,0.188,112,0.65,113,0.537,114,0.835,115,0.592,116,1.188,117,0.721,118,1.152,119,1.144,120,0.968,121,0.968,122,0.968,123,0.968,124,0.968,125,1.077,126,0.968,127,0.537,128,0.592,129,0.592,130,1.052,131,1.052,132,0.537,133,0.592,134,0.564,135,1.11,136,0.955,137,0.564,138,0.564,139,0.835,140,0.971,141,0.721,142,0.863,143,0.796,144,0.835,145,0.796,146,0.592,147,1.058,148,0.537,149,0.592,150,0.592,151,0.632,152,1.009,153,1.058,154,0.794,155,0.592,156,0.65,157,0.796,158,0.732,159,0.592,160,0.592,161,0.537,162,0.592,163,0.564,164,0.592,165,0.592,166,0.537,167,0.564,168,0.511,169,0.758,170,0.564,171,0.616,172,0.511,173,0.564,174,0.511,175,0.511,176,0.511,177,0.592,178,0.461,179,0.583,180,0.537,181,0.592,182,0.592,183,0.592,184,0.835,185,1.007,186,0.758,187,0.796,188,0.835,189,0.835,190,0.592,191,1.007,192,0.592,193,0.592,194,0.244,195,0.873,196,0.537,197,0.592,198,0.592,199,0.592,200,0.592,201,0.537,202,0.537,203,0.592,204,1.003,205,0.968,206,0.721,207,0.4,208,0.592,209,0.968,210,0.592,211,0.537,212,0.968,213,0.592,214,0.537,215,0.537,216,0.923,217,0.592,218,0.592,219,0.592,220,0.592,221,0.592,222,0.592,223,0.592,224,0.592,225,0.283,226,0.564,227,0.835,228,0.721,229,0.796,230,0.592,231,0.592,232,0.461,233,0.564,234,0.564,235,0.511,236,0.592,237,0.592,238,0.564,239,0.592,240,0.592,241,0.592,242,0.537,243,0.758,244,1.11,245,1.152,246,1.152,247,0.835,248,0.592,249,0.537,250,0.968,251,0.537,252,0.592,253,0.537,254,0.592,255,0.537,256,0.923,257,0.592,258,0.592,259,0.592,260,0.592,261,0.592,262,0.264,263,0.537,264,0.564,265,0.537,266,0.592,267,0.592,268,0.592]],["title/injectables/UtilService.html",[34,1.172,1535,2.912]],["body/injectables/UtilService.html",[3,0.193,4,0.165,5,0.165,8,0.277,21,0.763,25,0.193,28,0.139,29,0.018,30,1.727,34,2.058,35,2.277,42,0.193,44,2.516,45,2.516,46,1.059,54,1.884,80,0.012,81,0.014,82,0.012,111,0.306,194,0.474,207,0.367,262,0.43,275,2.298,282,2.585,300,3.375,304,2.07,307,4.667,319,5.349,320,2.355,322,1.806,326,2.17,327,2.585,371,2.968,422,3.368,508,1.889,531,3.368,627,2.968,668,6.102,673,5.713,879,4.533,1073,4.795,1245,5.114,1535,5.114,1536,4.795,1537,6.621,1538,5.558,1539,6.621,1540,5.558,1541,6.621,1542,5.713,1543,7.669,1544,4.795,1545,5.558,1546,5.558,1547,5.558]],["title/interfaces/ValidationResult.html",[0,0.217,899,2.658]],["body/interfaces/ValidationResult.html",[0,0.279,2,0.587,3,0.168,4,0.144,5,0.144,8,0.241,25,0.168,26,0.436,28,0.152,29,0.018,30,2.069,34,1.892,35,1.984,42,0.211,43,0.5,44,2.192,45,2.192,46,0.923,54,1.732,56,2.376,64,2.935,77,2.935,80,0.016,81,0.013,82,0.011,91,3.414,95,0.992,101,0.689,106,0.451,111,0.267,112,0.822,140,0.866,151,0.58,158,0.696,195,0.779,207,0.505,275,2.163,287,2.311,304,1.804,320,1.723,323,3.688,390,2.935,393,4.033,489,2.165,508,2.533,511,4.545,588,2.311,630,3.152,669,4.701,706,3.741,714,3.152,739,4.691,785,4.29,788,5.359,857,3.454,864,3.414,865,3.741,866,3.741,867,6.753,868,5.742,869,4.701,870,4.178,875,5.251,877,4.178,878,4.178,879,2.935,881,6.024,882,4.178,883,4.178,884,4.178,885,4.178,886,4.178,887,3.741,888,4.178,889,4.701,890,4.178,891,5.251,893,4.178,894,4.178,895,4.178,896,4.178,898,4.178,899,4.691,900,4.178,901,3.741,902,4.178,903,5.393,904,4.178,905,4.178,906,6.207,907,4.178,908,4.178,909,4.178,910,4.178,911,5.251,912,4.178,913,4.178,914,4.178,915,4.178,916,4.178,917,4.178,918,4.178,919,4.178,920,4.178]],["title/coverage.html",[1548,4.455]],["body/coverage.html",[0,0.462,1,3.135,5,0.132,6,4.452,7,4.452,15,2.895,28,0.111,29,0.018,34,2.303,37,0.569,46,1.393,47,3.135,80,0.01,81,0.013,82,0.01,93,0.701,94,1.32,103,0.701,113,0.701,117,0.666,125,0.633,127,0.701,132,0.701,136,0.701,148,0.701,152,0.633,166,0.701,168,0.666,174,0.666,180,0.701,185,0.701,186,0.701,201,0.701,202,0.701,206,0.666,211,0.701,215,0.701,228,0.666,235,0.666,242,0.701,243,0.701,249,0.701,251,0.701,253,0.701,255,0.701,263,0.701,265,0.701,269,2.375,271,4.404,274,2.524,304,1.657,326,2.736,337,2.375,344,2.524,480,2.695,543,2.895,595,4.149,626,3.135,628,3.837,654,3.435,655,3.837,699,3.435,700,3.837,723,3.135,724,4.163,725,4.163,727,3.135,789,3.135,864,3.135,865,4.452,866,4.452,899,3.135,921,3.435,922,3.837,923,3.837,1042,3.435,1043,3.837,1044,3.837,1077,3.435,1078,3.837,1092,3.837,1093,3.837,1118,5.518,1199,3.435,1200,4.973,1201,4.973,1216,2.895,1217,3.135,1222,3.837,1426,3.435,1427,3.837,1428,3.837,1459,4.452,1460,3.837,1508,3.837,1535,3.435,1536,3.837,1548,3.837,1549,3.837,1550,4.448,1551,4.448,1552,4.448,1553,4.448,1554,7.181,1555,7.181,1556,7.009,1557,7.009,1558,6.766,1559,7.009,1560,6.395,1561,5.764,1562,4.448,1563,4.448,1564,7.553,1565,7.553,1566,4.448,1567,4.448,1568,7.31,1569,7.181,1570,4.448,1571,7.009,1572,7.009,1573,4.448,1574,4.448,1575,4.448,1576,4.448,1577,4.448,1578,4.973,1579,3.837,1580,3.837,1581,4.448,1582,4.448,1583,4.448,1584,4.448,1585,4.448,1586,4.448,1587,4.448,1588,4.448,1589,4.448,1590,4.448,1591,4.448,1592,4.448,1593,4.448,1594,4.448,1595,4.448]],["title/dependencies.html",[1596,3.14,1597,3.2]],["body/dependencies.html",[29,0.018,31,4.326,33,3.948,35,2.294,67,4.688,80,0.012,81,0.014,82,0.012,89,4.833,191,0.882,707,4.833,715,4.833,903,4.326,1084,4.833,1218,4.833,1221,4.833,1597,3.948,1598,5.602,1599,7.741,1600,5.602,1601,6.652,1602,5.602,1603,5.602,1604,5.602,1605,5.602,1606,5.602,1607,5.602,1608,6.652,1609,5.602,1610,5.602,1611,5.602,1612,5.602,1613,6.652,1614,5.602,1615,5.602,1616,5.602,1617,4.833,1618,5.602,1619,5.602,1620,6.652,1621,6.652,1622,5.602,1623,6.652,1624,5.602,1625,5.602,1626,5.602,1627,5.602,1628,5.602,1629,5.602,1630,5.602,1631,6.652,1632,5.602,1633,7.096,1634,5.602,1635,5.602,1636,5.602,1637,5.602,1638,5.602,1639,5.602,1640,5.602,1641,5.602,1642,5.602,1643,5.602,1644,5.602]],["title/miscellaneous/enumerations.html",[1645,2.213,1646,3.917]],["body/miscellaneous/enumerations.html",[21,0.662,25,0.213,28,0.153,29,0.016,80,0.013,81,0.015,82,0.013,110,0.439,272,3.093,273,3.719,326,2.396,371,3.276,375,3.093,724,3.994,725,4.566,748,5.418,1645,4.325,1646,5.294,1647,5.294]],["title/index.html",[25,0.109,1301,2.709,1648,3.14]],["body/index.html",[4,0.143,29,0.015,49,0.943,64,2.905,65,5.743,70,3.379,80,0.01,81,0.013,82,0.01,101,0.683,142,0.683,176,1.146,214,0.755,226,0.793,232,1.016,264,1.096,303,3.936,304,1.786,331,3.379,355,5.162,365,4.671,394,3.121,405,3.121,438,3.714,445,3.703,470,2.417,482,3.665,552,2.17,638,4.671,641,4.312,651,4.671,664,4.671,714,3.121,785,5.302,842,3.703,857,2.721,924,4.671,991,4.136,1006,4.136,1054,4.136,1215,4.136,1220,4.136,1266,3.703,1278,4.136,1382,4.136,1544,4.136,1549,6.188,1597,4.262,1617,4.136,1649,6.625,1650,4.794,1651,7.732,1652,4.794,1653,4.794,1654,4.794,1655,4.794,1656,4.794,1657,4.794,1658,7.794,1659,4.794,1660,4.794,1661,4.794,1662,4.794,1663,4.794,1664,6.048,1665,5.218,1666,4.794,1667,4.794,1668,4.794,1669,4.794,1670,4.794,1671,4.794,1672,4.794,1673,4.794,1674,6.048,1675,4.794,1676,4.794,1677,6.625,1678,4.794,1679,4.794,1680,4.794,1681,4.794,1682,4.794,1683,4.794,1684,4.794,1685,7.522,1686,4.794,1687,6.625,1688,6.957,1689,4.794,1690,4.794,1691,6.957,1692,4.794,1693,6.048,1694,6.188,1695,4.794,1696,4.794,1697,7.172,1698,4.794,1699,6.957,1700,4.794,1701,6.048,1702,6.048,1703,4.794,1704,4.794,1705,4.794,1706,4.794,1707,4.794,1708,4.794,1709,4.794,1710,4.794,1711,4.794,1712,4.794,1713,4.794,1714,4.794,1715,4.794,1716,4.794,1717,4.794,1718,4.794,1719,4.794,1720,4.794,1721,4.794,1722,4.794,1723,4.794,1724,4.794,1725,4.794,1726,4.794,1727,4.794,1728,4.794,1729,4.794,1730,4.794,1731,4.794,1732,4.794,1733,4.794,1734,4.794,1735,4.794,1736,6.048,1737,6.625,1738,7.324,1739,6.957,1740,6.048,1741,4.794,1742,4.794,1743,6.048,1744,4.794,1745,4.794,1746,4.794,1747,4.794,1748,4.794,1749,4.794,1750,4.794,1751,4.794,1752,4.794]],["title/modules.html",[85,3.639]],["body/modules.html",[29,0.015,80,0.014,81,0.015,82,0.014,84,4.806,85,4.386,1665,5.369,1753,6.223,1754,6.223]],["title/overview.html",[1755,4.455]],["body/overview.html",[2,0.74,15,3.977,29,0.015,80,0.013,81,0.015,82,0.013,83,6.037,225,0.582,270,3.262,296,4.306,539,4.306,542,4.306,627,3.262,983,5.271,1597,4.306,1755,5.271,1756,6.11,1757,6.11,1758,6.11,1759,5.271,1760,6.11,1761,6.998,1762,6.11]],["title/miscellaneous/variables.html",[642,3.506,1645,2.213]],["body/miscellaneous/variables.html",[25,0.183,26,0.495,27,3.431,28,0.173,29,0.018,54,1.5,67,4.52,80,0.011,81,0.014,82,0.011,102,0.47,110,0.515,195,0.675,269,2.815,271,3.431,303,3.431,304,1.964,337,2.815,339,3.715,340,3.194,342,3.172,343,3.194,344,3.64,387,3.194,443,3.194,483,3.715,484,3.715,485,3.715,486,3.715,487,3.715,488,3.715,489,2.558,490,3.715,491,3.715,492,3.715,493,3.715,494,3.715,495,3.715,496,3.715,497,3.715,498,3.715,499,3.715,500,3.715,501,3.715,502,3.715,503,3.715,504,3.715,505,3.715,506,3.715,507,3.715,552,2.386,626,5.196,629,5.533,633,4.548,642,5.339,724,3.431,725,4.175,789,4.52,879,3.887,938,4.548,987,4.548,1057,4.071,1245,4.071,1364,4.548,1542,4.548,1578,4.548,1579,5.964,1580,5.533,1645,3.715,1647,4.548,1694,4.548,1759,4.548,1763,5.271,1764,6.414,1765,7.193,1766,5.271,1767,6.913,1768,5.271,1769,6.414,1770,5.271,1771,5.271,1772,5.271,1773,5.271,1774,5.271,1775,5.271,1776,6.414,1777,5.271,1778,5.271,1779,5.271,1780,5.271,1781,5.271,1782,5.271,1783,5.271,1784,5.271,1785,5.271,1786,5.271,1787,5.271,1788,5.271,1789,5.271]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":326,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.33",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["0123]\\\\d?)\\\\s",{"_index":530,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["0]=min",{"_index":1307,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["1",{"_index":225,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"overview.html":{}}}],["1.0.32",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":1500,"title":{},"body":{"classes/TokenLocation.html":{}}}],["1.10.0",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1502,"title":{},"body":{"classes/TokenLocation.html":{}}}],["1.3.0",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["1.token's",{"_index":1257,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["1/1",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":552,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenPoint.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":595,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/RomanNumber.html":{},"coverage.html":{}}}],["1000",{"_index":1116,"title":{},"body":{"classes/RomanNumber.html":{}}}],["10000",{"_index":1114,"title":{},"body":{"classes/RomanNumber.html":{}}}],["100000",{"_index":1112,"title":{},"body":{"classes/RomanNumber.html":{}}}],["1000000",{"_index":1110,"title":{},"body":{"classes/RomanNumber.html":{}}}],["11",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["11/20",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["12/25",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["13/25",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["1].touppercase",{"_index":1191,"title":{},"body":{"classes/RomanNumber.html":{}}}],["1]=max",{"_index":1308,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["1]=start",{"_index":1447,"title":{},"body":{"classes/TextRange.html":{}}}],["1st",{"_index":808,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["2",{"_index":352,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TokenLocation.html":{}}}],["2.1",{"_index":1504,"title":{},"body":{"classes/TokenLocation.html":{}}}],["2.2",{"_index":1505,"title":{},"body":{"classes/TokenLocation.html":{}}}],["2.24.0",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["2.span",{"_index":1260,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["2/10",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["21",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["2]=length",{"_index":1448,"title":{},"body":{"classes/TextRange.html":{}}}],["2nd",{"_index":815,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["3",{"_index":531,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/UtilService.html":{}}}],["3.0.1",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["3.token's",{"_index":1262,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["3/14",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":334,"title":{},"body":{"classes/Datation.html":{}}}],["33",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":770,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["38",{"_index":1762,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1136,"title":{},"body":{"classes/RomanNumber.html":{}}}],["4,5",{"_index":535,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["4.16.0",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1135,"title":{},"body":{"classes/RomanNumber.html":{}}}],["400",{"_index":1133,"title":{},"body":{"classes/RomanNumber.html":{}}}],["4000",{"_index":1131,"title":{},"body":{"classes/RomanNumber.html":{}}}],["40000",{"_index":1129,"title":{},"body":{"classes/RomanNumber.html":{}}}],["400000",{"_index":1127,"title":{},"body":{"classes/RomanNumber.html":{}}}],["48",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["480",{"_index":333,"title":{},"body":{"classes/Datation.html":{}}}],["5",{"_index":332,"title":{},"body":{"classes/Datation.html":{},"classes/RomanNumber.html":{}}}],["5/6",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1118,"title":{},"body":{"classes/RomanNumber.html":{},"coverage.html":{}}}],["500",{"_index":1117,"title":{},"body":{"classes/RomanNumber.html":{}}}],["5000",{"_index":1115,"title":{},"body":{"classes/RomanNumber.html":{}}}],["50000",{"_index":1113,"title":{},"body":{"classes/RomanNumber.html":{}}}],["500000",{"_index":1111,"title":{},"body":{"classes/RomanNumber.html":{}}}],["512",{"_index":713,"title":{},"body":{"injectables/GravatarService.html":{}}}],["52",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":362,"title":{},"body":{"classes/Datation.html":{}}}],["56/7",{"_index":361,"title":{},"body":{"classes/Datation.html":{}}}],["57",{"_index":368,"title":{},"body":{"classes/Datation.html":{}}}],["6",{"_index":537,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["6.10.2",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":539,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"overview.html":{}}}],["7/8",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["775",{"_index":367,"title":{},"body":{"classes/Datation.html":{}}}],["776",{"_index":360,"title":{},"body":{"classes/Datation.html":{}}}],["776/5",{"_index":359,"title":{},"body":{"classes/Datation.html":{}}}],["8",{"_index":542,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"overview.html":{}}}],["8.1.1",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":710,"title":{},"body":{"injectables/GravatarService.html":{}}}],["83",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":543,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/RomanNumber.html":{},"coverage.html":{}}}],["9.0.0",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["9.1.9",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1134,"title":{},"body":{"classes/RomanNumber.html":{}}}],["900",{"_index":1132,"title":{},"body":{"classes/RomanNumber.html":{}}}],["9000",{"_index":1130,"title":{},"body":{"classes/RomanNumber.html":{}}}],["90000",{"_index":1128,"title":{},"body":{"classes/RomanNumber.html":{}}}],["900000",{"_index":1126,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_ajv",{"_index":870,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["_parteditorkeys",{"_index":958,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["_postalpha",{"_index":1095,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_postval",{"_index":1096,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_prealpha",{"_index":1097,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_preval",{"_index":1098,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_romandigits",{"_index":1099,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_romansubdigits",{"_index":1100,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_romanvalues",{"_index":1101,"title":{},"body":{"classes/RomanNumber.html":{}}}],["_wsregex",{"_index":1223,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["a.d",{"_index":335,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{}}}],["a=this",{"_index":1497,"title":{},"body":{"classes/TokenLocation.html":{}}}],["abouttext",{"_index":484,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":365,"title":{},"body":{"classes/Datation.html":{},"injectables/LibraryRouteService.html":{},"index.html":{}}}],["abstractcontrol",{"_index":1081,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["according",{"_index":238,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["accordingly",{"_index":679,"title":{},"body":{"injectables/ErrorService.html":{}}}],["ad",{"_index":340,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":785,"title":{},"body":{"classes/HistoricalDate.html":{},"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["added",{"_index":910,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["adding",{"_index":1382,"title":{},"body":{"interfaces/SelectedRange.html":{},"index.html":{}}}],["additional",{"_index":1278,"title":{},"body":{"interfaces/SelectedRange.html":{},"index.html":{}}}],["additionally",{"_index":1031,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["address",{"_index":709,"title":{},"body":{"injectables/GravatarService.html":{}}}],["adds",{"_index":143,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["addschema",{"_index":871,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["addschema(name",{"_index":878,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["adjusted",{"_index":1340,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["adtext",{"_index":486,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["affected",{"_index":1743,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1746,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1742,"title":{},"body":{"index.html":{}}}],["again",{"_index":697,"title":{},"body":{"injectables/ErrorService.html":{}}}],["against",{"_index":898,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["ajv",{"_index":903,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{},"dependencies.html":{}}}],["ajv.ajv",{"_index":900,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["al[pha",{"_index":1352,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["al]pha",{"_index":1353,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["allerrors",{"_index":909,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["allow",{"_index":50,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"classes/RomanNumber.html":{}}}],["allowbar",{"_index":1144,"title":{},"body":{"classes/RomanNumber.html":{}}}],["allowed",{"_index":1321,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["allowprefix",{"_index":1162,"title":{},"body":{"classes/RomanNumber.html":{}}}],["allows",{"_index":931,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["alone",{"_index":222,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["already",{"_index":882,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["always",{"_index":356,"title":{},"body":{"classes/Datation.html":{}}}],["ancient",{"_index":1163,"title":{},"body":{"classes/RomanNumber.html":{}}}],["angular",{"_index":64,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/EnvService.html":{},"injectables/JsonSchemaService.html":{},"guards/PendingChangesGuard.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["angular/animations",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":89,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":91,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorService.html":{},"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["angular/compiler",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1084,"title":{},"body":{"classes/PasswordValidator.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":31,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"dependencies.html":{}}}],["ante",{"_index":459,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{}}}],["ante/post",{"_index":377,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["apiurl",{"_index":646,"title":{},"body":{"injectables/EnvService.html":{}}}],["app",{"_index":65,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"index.html":{}}}],["appended",{"_index":468,"title":{},"body":{"classes/Datation.html":{}}}],["application",{"_index":638,"title":{},"body":{"injectables/EnvService.html":{},"injectables/LibraryRouteService.html":{},"index.html":{}}}],["applications",{"_index":1694,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["approx_delta",{"_index":789,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approximate",{"_index":745,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["apps/demo/src/tsconfig.app.json",{"_index":1686,"title":{},"body":{"index.html":{}}}],["apr",{"_index":500,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["arbitrarily",{"_index":193,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["architecture",{"_index":930,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["argument",{"_index":661,"title":{},"body":{"injectables/ErrorService.html":{}}}],["array",{"_index":1245,"title":{},"body":{"interfaces/SelectedRange.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1731,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assumed",{"_index":819,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["assuming",{"_index":634,"title":{},"body":{"injectables/EnvService.html":{}}}],["at,run",{"_index":1351,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["aug",{"_index":503,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["auth0/angular",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["authenticated",{"_index":257,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["automatically",{"_index":1726,"title":{},"body":{"index.html":{}}}],["av",{"_index":849,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["available",{"_index":1753,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":708,"title":{},"body":{"injectables/GravatarService.html":{}}}],["away",{"_index":66,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["awdwmmmwvweawpwh",{"_index":477,"title":{},"body":{"classes/Datation.html":{}}}],["awdwmmmwvwepwpwh",{"_index":475,"title":{},"body":{"classes/Datation.html":{}}}],["awdwmmmwvwewpwh",{"_index":472,"title":{},"body":{"classes/Datation.html":{}}}],["awdwmmmwvwpwh",{"_index":479,"title":{},"body":{"classes/Datation.html":{}}}],["b",{"_index":728,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{}}}],["b.c",{"_index":329,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["b=null",{"_index":835,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["b=other",{"_index":1498,"title":{},"body":{"classes/TokenLocation.html":{}}}],["b=undefined",{"_index":792,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["back",{"_index":76,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/EnvService.html":{},"guards/PendingChangesGuard.html":{}}}],["backend",{"_index":682,"title":{},"body":{"injectables/ErrorService.html":{}}}],["bad",{"_index":693,"title":{},"body":{"injectables/ErrorService.html":{}}}],["bar",{"_index":1147,"title":{},"body":{"classes/RomanNumber.html":{}}}],["base",{"_index":157,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["based",{"_index":172,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["basetext",{"_index":160,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["bc",{"_index":339,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["bc/ad",{"_index":806,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["bcad",{"_index":527,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["bcad[0",{"_index":540,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["bcad[1",{"_index":541,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["bctext",{"_index":485,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["becomes",{"_index":1013,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["before",{"_index":39,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{}}}],["beginning",{"_index":358,"title":{},"body":{"classes/Datation.html":{}}}],["belong",{"_index":856,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["belonging",{"_index":940,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["belongs",{"_index":937,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["below",{"_index":1703,"title":{},"body":{"index.html":{}}}],["beta.29",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":783,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["bitwise",{"_index":1197,"title":{},"body":{"classes/RomanNumber.html":{}}}],["body",{"_index":684,"title":{},"body":{"injectables/ErrorService.html":{}}}],["boolean",{"_index":43,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}}}],["bootstrap",{"_index":1758,"title":{},"body":{"overview.html":{}}}],["both",{"_index":780,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/LibraryRouteService.html":{},"classes/TokenLocation.html":{}}}],["boundaries",{"_index":781,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["boundary",{"_index":772,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["bounds",{"_index":1305,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["braces",{"_index":414,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["break",{"_index":606,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["browse",{"_index":1754,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":67,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browser's",{"_index":1419,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["browserwindow",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindow['__env",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindowenv",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserwindowenv.hasownproperty(key",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":232,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["buildfragmenteditorroute",{"_index":949,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["buildfragmenteditorroute(partdefs",{"_index":959,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["buildgravatarurl",{"_index":701,"title":{},"body":{"injectables/GravatarService.html":{}}}],["buildgravatarurl(email",{"_index":702,"title":{},"body":{"injectables/GravatarService.html":{}}}],["buildparteditorroute",{"_index":950,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["buildparteditorroute(partdefs",{"_index":972,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["builds",{"_index":705,"title":{},"body":{"injectables/GravatarService.html":{}}}],["bv",{"_index":851,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["c",{"_index":443,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"miscellaneous/variables.html":{}}}],["c.charat(0",{"_index":1228,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["c.length",{"_index":1227,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["c.tolowercase",{"_index":1179,"title":{},"body":{"classes/RomanNumber.html":{}}}],["c.touppercase",{"_index":1180,"title":{},"body":{"classes/RomanNumber.html":{}}}],["c1",{"_index":1156,"title":{},"body":{"classes/RomanNumber.html":{}}}],["c2",{"_index":1154,"title":{},"body":{"classes/RomanNumber.html":{}}}],["c\\\\.)?\\\\s",{"_index":529,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["cadmus",{"_index":651,"title":{},"body":{"injectables/EnvService.html":{},"injectables/LibraryRouteService.html":{},"index.html":{}}}],["cadmus/mylib",{"_index":1721,"title":{},"body":{"index.html":{}}}],["calculate",{"_index":1346,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["calculated",{"_index":1354,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["cancel",{"_index":74,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["candeactivate",{"_index":18,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["candeactivate(component",{"_index":1090,"title":{},"body":{"guards/PendingChangesGuard.html":{}}}],["capabilities",{"_index":1687,"title":{},"body":{"index.html":{}}}],["case",{"_index":598,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["cases",{"_index":1499,"title":{},"body":{"classes/TokenLocation.html":{}}}],["catcherror",{"_index":659,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cd",{"_index":1121,"title":{},"body":{"classes/RomanNumber.html":{}}}],["central",{"_index":769,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["centuries",{"_index":768,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["century",{"_index":325,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["centurytoyear",{"_index":729,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["centurytoyear(century",{"_index":743,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["change",{"_index":264,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["changes",{"_index":14,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["changes.guard.ts",{"_index":7,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"coverage.html":{}}}],["changes.guard.ts:21",{"_index":1091,"title":{},"body":{"guards/PendingChangesGuard.html":{}}}],["char",{"_index":469,"title":{},"body":{"classes/Datation.html":{},"interfaces/SelectedRange.html":{}}}],["character",{"_index":1429,"title":{},"body":{"classes/TextRange.html":{}}}],["characters",{"_index":512,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/TextRange.html":{}}}],["check",{"_index":1288,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["checks",{"_index":1487,"title":{},"body":{"classes/TokenLocation.html":{}}}],["child).firstelementchild",{"_index":1325,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["child).getattribute('id').substr(1",{"_index":1329,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["child.contains(range.endcontainer",{"_index":1331,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["christum",{"_index":460,"title":{},"body":{"classes/Datation.html":{}}}],["class",{"_index":46,"title":{"classes/Datation.html":{},"classes/HistoricalDate.html":{},"classes/PasswordValidator.html":{},"classes/RomanNumber.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["classes",{"_index":270,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{},"classes/PasswordValidator.html":{},"classes/RomanNumber.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"overview.html":{}}}],["clear",{"_index":1045,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clear(prefix",{"_index":1048,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["client",{"_index":675,"title":{},"body":{"injectables/ErrorService.html":{}}}],["close",{"_index":1297,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["clues",{"_index":686,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cm",{"_index":1120,"title":{},"body":{"classes/RomanNumber.html":{}}}],["code",{"_index":394,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"index.html":{}}}],["collect",{"_index":1326,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["collection",{"_index":165,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["colon",{"_index":978,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["colorkey",{"_index":209,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["comments",{"_index":1496,"title":{},"body":{"classes/TokenLocation.html":{}}}],["commonancestorcontainer",{"_index":1210,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["commonmodule",{"_index":88,"title":{},"body":{"modules/CoreModule.html":{}}}],["compareto",{"_index":1463,"title":{},"body":{"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["compareto(other",{"_index":1470,"title":{},"body":{"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["compodoc",{"_index":1677,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1684,"title":{},"body":{"index.html":{}}}],["component",{"_index":49,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["component.candeactivate",{"_index":55,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["componentcandeactivate",{"_index":1,"title":{"interfaces/ComponentCanDeactivate.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"coverage.html":{}}}],["components",{"_index":11,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["configure",{"_index":643,"title":{},"body":{"injectables/EnvService.html":{}}}],["confirm",{"_index":52,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["confirmpassword",{"_index":268,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["conjunction",{"_index":224,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["console.error",{"_index":689,"title":{},"body":{"injectables/ErrorService.html":{}}}],["console.error('a",{"_index":680,"title":{},"body":{"injectables/ErrorService.html":{}}}],["const",{"_index":489,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":300,"title":{},"body":{"classes/Datation.html":{},"injectables/EnvService.html":{},"classes/HistoricalDate.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{}}}],["constructor(_parteditorkeys",{"_index":956,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["constructor(datation",{"_index":301,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["constructor(date",{"_index":740,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["constructor(http",{"_index":874,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["constructor(primary",{"_index":1466,"title":{},"body":{"classes/TokenLocation.html":{}}}],["constructor(private",{"_index":907,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["constructor(start",{"_index":1434,"title":{},"body":{"classes/TextRange.html":{}}}],["constructor(y",{"_index":1510,"title":{},"body":{"classes/TokenPoint.html":{}}}],["consuming",{"_index":198,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["contain",{"_index":685,"title":{},"body":{"injectables/ErrorService.html":{}}}],["contains",{"_index":231,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["content",{"_index":164,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["context",{"_index":197,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["continue",{"_index":79,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["continuing",{"_index":1282,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["control",{"_index":1083,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["control.value",{"_index":1085,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["control.value.length",{"_index":1086,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["convert",{"_index":437,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"classes/RomanNumber.html":{}}}],["converter",{"_index":1094,"title":{},"body":{"classes/RomanNumber.html":{}}}],["coordinates",{"_index":173,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["coords",{"_index":1388,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{}}}],["copied",{"_index":307,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/UtilService.html":{}}}],["copies",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copy",{"_index":319,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/UtilService.html":{}}}],["copy.settime(obj.gettime",{"_index":1546,"title":{},"body":{"injectables/UtilService.html":{}}}],["copyfrom",{"_index":283,"title":{},"body":{"classes/Datation.html":{}}}],["copyfrom(datation",{"_index":317,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["core",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["coremodule",{"_index":84,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{}}}],["correct",{"_index":1007,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["corresponding",{"_index":156,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["counting",{"_index":1347,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["coverage",{"_index":1548,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":303,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":309,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["creates",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creatorid",{"_index":105,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["credentials",{"_index":248,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["current",{"_index":1364,"title":{},"body":{"interfaces/SelectedRange.html":{},"miscellaneous/variables.html":{}}}],["current.nodename",{"_index":1369,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["current.nodetype",{"_index":1368,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["currently",{"_index":1418,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["cypress",{"_index":1745,"title":{},"body":{"index.html":{}}}],["d",{"_index":447,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/RomanNumber.html":{}}}],["d+)(?:\\\\s*/\\\\s*(\\\\d",{"_index":536,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["d+.@x",{"_index":1359,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["d.isundefined",{"_index":837,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["d.typeid",{"_index":1026,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["dashes",{"_index":416,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["data",{"_index":95,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}}}],["databaseid",{"_index":647,"title":{},"body":{"injectables/EnvService.html":{}}}],["datapage",{"_index":93,"title":{"interfaces/DataPage.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["datatation",{"_index":321,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation",{"_index":269,"title":{"classes/Datation.html":{}},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datation's",{"_index":404,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation(date.a",{"_index":793,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["datation(date.b",{"_index":796,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["datation(value",{"_index":841,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["datation.day",{"_index":550,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.geterasoptionsforregex(options",{"_index":809,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["datation.hint",{"_index":574,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.isapproximate",{"_index":548,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.iscentury",{"_index":565,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.isdubious",{"_index":572,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.isspan",{"_index":563,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.month",{"_index":558,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.parse(s1",{"_index":836,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["datation.sanitizehint(m[9",{"_index":575,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation.value",{"_index":560,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datation_format_options",{"_index":344,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datationformatoptions",{"_index":337,"title":{"interfaces/DatationFormatOptions.html":{}},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datationmodel",{"_index":274,"title":{"interfaces/DatationModel.html":{}},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{}}}],["datationregex",{"_index":544,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datationregex.exec(text",{"_index":546,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["datations",{"_index":372,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["date",{"_index":21,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"miscellaneous/enumerations.html":{}}}],["date(this.value",{"_index":608,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["date.b",{"_index":794,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["date.getday",{"_index":610,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["date.setendpoint(datation.parse(s2",{"_index":832,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["date.setsinglepoint(d",{"_index":838,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["date.setstartpoint(datation.parse(s1",{"_index":831,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["date.ts",{"_index":725,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date.ts:122",{"_index":752,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:126",{"_index":762,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:134",{"_index":749,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:138",{"_index":758,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:142",{"_index":750,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:146",{"_index":760,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:155",{"_index":755,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:164",{"_index":747,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:175",{"_index":787,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:194",{"_index":751,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:218",{"_index":763,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:262",{"_index":744,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:276",{"_index":767,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:31",{"_index":742,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:32",{"_index":741,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:325",{"_index":753,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:349",{"_index":754,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["date.ts:52",{"_index":756,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["dates",{"_index":797,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["dates.length",{"_index":802,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["dates[0].trim",{"_index":800,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["dates[1].trim",{"_index":803,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["datorama/akita",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["day",{"_index":276,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["daynames",{"_index":487,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":448,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["ddd",{"_index":452,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["deactivation",{"_index":51,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["dec",{"_index":507,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1757,"title":{},"body":{"overview.html":{}}}],["decompose",{"_index":986,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["decomposeeditorkey",{"_index":951,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["decomposeeditorkey(key",{"_index":984,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["decorated",{"_index":1274,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["deep",{"_index":1542,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["deepcopy",{"_index":1537,"title":{},"body":{"injectables/UtilService.html":{}}}],["deepcopy(obj",{"_index":1539,"title":{},"body":{"injectables/UtilService.html":{}}}],["default",{"_index":342,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":194,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{}}}],["definition",{"_index":204,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["definitions",{"_index":965,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["delta",{"_index":778,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["demo",{"_index":653,"title":{},"body":{"injectables/EnvService.html":{}}}],["dep",{"_index":1664,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":1597,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deps",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derived",{"_index":980,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["descendant",{"_index":1373,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["dev",{"_index":1724,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1692,"title":{},"body":{"index.html":{}}}],["development",{"_index":1722,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1700,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1748,"title":{},"body":{"index.html":{}}}],["diff",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["different",{"_index":1693,"title":{},"body":{"index.html":{}}}],["differs",{"_index":1299,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["digit",{"_index":1152,"title":{},"body":{"classes/RomanNumber.html":{}}}],["digits",{"_index":449,"title":{},"body":{"classes/Datation.html":{}}}],["directory",{"_index":1733,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":23,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["dist",{"_index":1732,"title":{},"body":{"index.html":{}}}],["div",{"_index":1320,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["docker",{"_index":1674,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1680,"title":{},"body":{"index.html":{}}}],["document",{"_index":1420,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["documentation",{"_index":1549,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dot",{"_index":1003,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["double",{"_index":415,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["dow",{"_index":609,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["dubious",{"_index":570,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["dumb",{"_index":934,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["dynamic",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":457,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["e.g",{"_index":331,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{},"classes/TokenLocation.html":{},"index.html":{}}}],["e2e",{"_index":1744,"title":{},"body":{"index.html":{}}}],["ea",{"_index":458,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["each",{"_index":142,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["editing",{"_index":974,"title":{},"body":{"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{}}}],["editoperation",{"_index":181,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["editor",{"_index":191,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{}}}],["editorkey",{"_index":1037,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["editorkeys",{"_index":217,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["editors",{"_index":926,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["element",{"_index":1310,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["elsewhere",{"_index":62,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["em",{"_index":411,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["email",{"_index":256,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["emailconfirmed",{"_index":259,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["empty",{"_index":386,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TokenLocation.html":{}}}],["end",{"_index":355,"title":{},"body":{"classes/Datation.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"index.html":{}}}],["end.at",{"_index":1415,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["end.x",{"_index":1406,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["end.y",{"_index":1402,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["end.y}.${end.x",{"_index":1414,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["endcontainer",{"_index":1211,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["endline",{"_index":1391,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["endline.length",{"_index":1396,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["endoffset",{"_index":1212,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["ends",{"_index":1255,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["enriched",{"_index":155,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["ensure",{"_index":842,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"index.html":{}}}],["entities",{"_index":1055,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["entries",{"_index":187,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["entry",{"_index":184,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["enum",{"_index":790,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["enumerations",{"_index":1646,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.js",{"_index":633,"title":{},"body":{"injectables/EnvService.html":{},"miscellaneous/variables.html":{}}}],["env[key",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":629,"title":{},"body":{"injectables/EnvService.html":{},"miscellaneous/variables.html":{}}}],["envservice",{"_index":626,"title":{"injectables/EnvService.html":{}},"body":{"injectables/EnvService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envservicefactory",{"_index":1579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envserviceprovider",{"_index":1580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ep",{"_index":462,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["epigraphical",{"_index":1168,"title":{},"body":{"classes/RomanNumber.html":{}}}],["equal",{"_index":471,"title":{},"body":{"classes/Datation.html":{},"injectables/ErrorService.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{}}}],["era",{"_index":434,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["error",{"_index":112,"title":{},"body":{"interfaces/DataPage.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}}}],["error.error",{"_index":672,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.error.message",{"_index":681,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.status",{"_index":690,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorevent",{"_index":674,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorservice",{"_index":654,"title":{"injectables/ErrorService.html":{}},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["errorstext",{"_index":906,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["errorwrapper",{"_index":113,"title":{"interfaces/ErrorWrapper.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["escape",{"_index":520,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["essential",{"_index":130,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["etc",{"_index":1698,"title":{},"body":{"index.html":{}}}],["even",{"_index":833,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["eventual",{"_index":982,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["eventually",{"_index":991,"title":{},"body":{"injectables/LibraryRouteService.html":{},"index.html":{}}}],["exact",{"_index":1302,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["excluding",{"_index":115,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["execute",{"_index":1739,"title":{},"body":{"index.html":{}}}],["existing",{"_index":390,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/JsonSchemaService.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{}}}],["existresult",{"_index":253,"title":{"interfaces/ExistResult.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["exists",{"_index":883,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["exited",{"_index":1330,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["expiration",{"_index":252,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["export",{"_index":42,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["exports",{"_index":1760,"title":{},"body":{"overview.html":{}}}],["express",{"_index":1712,"title":{},"body":{"index.html":{}}}],["expressed",{"_index":474,"title":{},"body":{"classes/Datation.html":{},"classes/TextRange.html":{}}}],["extending",{"_index":144,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["extends",{"_index":118,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["extension",{"_index":1383,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["extract",{"_index":1230,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["facet",{"_index":205,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["facetdefinition",{"_index":211,"title":{"interfaces/FacetDefinition.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["facetid",{"_index":121,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["facing",{"_index":691,"title":{},"body":{"injectables/ErrorService.html":{}}}],["fact",{"_index":1205,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["fall",{"_index":639,"title":{},"body":{"injectables/EnvService.html":{}}}],["false",{"_index":588,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"interfaces/ValidationResult.html":{}}}],["feature",{"_index":944,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["features",{"_index":1670,"title":{},"body":{"index.html":{}}}],["feb",{"_index":498,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":893,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["files",{"_index":1728,"title":{},"body":{"index.html":{}}}],["filter",{"_index":126,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["find",{"_index":990,"title":{},"body":{"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{}}}],["findpartdefinition",{"_index":952,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["findpartdefinition(partdefs",{"_index":988,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["first",{"_index":53,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/LibraryRouteService.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{}}}],["firstname",{"_index":245,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["flag",{"_index":214,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["flagdefinition",{"_index":215,"title":{"interfaces/FlagDefinition.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["flags",{"_index":124,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["flatten",{"_index":515,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["flattened",{"_index":421,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["followed",{"_index":1000,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["following",{"_index":439,"title":{},"body":{"classes/Datation.html":{},"classes/TokenLocation.html":{}}}],["form",{"_index":1443,"title":{},"body":{"classes/TextRange.html":{},"classes/TokenLocation.html":{}}}],["format",{"_index":345,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TokenLocation.html":{}}}],["format.replace('g",{"_index":581,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["format.replace(new",{"_index":576,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["formatter",{"_index":384,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["formatting",{"_index":483,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["forms",{"_index":1520,"title":{},"body":{"classes/TokenPoint.html":{}}}],["fornew",{"_index":1306,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["found",{"_index":992,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["fr",{"_index":999,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["fr.net.fusisoft.comment",{"_index":1004,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["fr.net.fusisoft.comment:scholarly",{"_index":1005,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["fragment",{"_index":152,"title":{"interfaces/Fragment.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["fragment's",{"_index":967,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["fragmentcount",{"_index":149,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["fragments",{"_index":153,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["framework",{"_index":1707,"title":{},"body":{"index.html":{}}}],["fri",{"_index":495,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["frkey",{"_index":1029,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["fromroman",{"_index":1102,"title":{},"body":{"classes/RomanNumber.html":{}}}],["fromroman(roman",{"_index":1143,"title":{},"body":{"classes/RomanNumber.html":{}}}],["frontend",{"_index":200,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["frontends",{"_index":1708,"title":{},"body":{"index.html":{}}}],["frroleid",{"_index":1019,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["frroleid=fragment",{"_index":1010,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["frtypeid",{"_index":1018,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["frtypeid=fragment",{"_index":1009,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["full",{"_index":1384,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["function",{"_index":27,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":1749,"title":{},"body":{"index.html":{}}}],["g",{"_index":438,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{},"classes/TokenPoint.html":{},"index.html":{}}}],["g/g",{"_index":579,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["ga",{"_index":473,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["general",{"_index":941,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["generate",{"_index":1685,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1650,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1696,"title":{},"body":{"index.html":{}}}],["generic",{"_index":69,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/Datation.html":{},"guards/PendingChangesGuard.html":{}}}],["get(urlpath",{"_index":916,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["getcentury",{"_index":284,"title":{},"body":{"classes/Datation.html":{}}}],["getdatetype",{"_index":730,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["geteditorkeyfromparttype",{"_index":953,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["geteditorkeyfromparttype(typeid",{"_index":993,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["getendpoint",{"_index":731,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["geterasoptionsforregex",{"_index":286,"title":{},"body":{"classes/Datation.html":{}}}],["geterasoptionsforregex(options",{"_index":336,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["getfragmenttypeandrole",{"_index":954,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["getfragmenttypeandrole(roleid",{"_index":996,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["getkeys",{"_index":1046,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getkeys(prefix",{"_index":1052,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlines(text",{"_index":1232,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["getparserregex",{"_index":288,"title":{},"body":{"classes/Datation.html":{}}}],["getparserregex(options",{"_index":346,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["getromandigitvalue",{"_index":1103,"title":{},"body":{"classes/RomanNumber.html":{}}}],["getromandigitvalue(digit",{"_index":1150,"title":{},"body":{"classes/RomanNumber.html":{}}}],["gets",{"_index":408,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/SelectedRange.html":{}}}],["getselectedlocationforedit(range",{"_index":1372,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["getselectedlocationfornew",{"_index":1385,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["getselectedrange",{"_index":1371,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["getsinglepoint",{"_index":732,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["getsortvalue",{"_index":289,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["getspanend",{"_index":290,"title":{},"body":{"classes/Datation.html":{}}}],["getspanlocfromid(id",{"_index":1356,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["getstartcoordsfromrange",{"_index":1339,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["getstartpoint",{"_index":733,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["getting",{"_index":1301,"title":{"index.html":{}},"body":{"interfaces/SelectedRange.html":{}}}],["getyboundsfromrange(range",{"_index":1309,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["gi",{"_index":578,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["give",{"_index":818,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["globally",{"_index":1683,"title":{},"body":{"index.html":{}}}],["gm').exec(text",{"_index":1450,"title":{},"body":{"classes/TextRange.html":{}}}],["go",{"_index":75,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["gp",{"_index":476,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["graph",{"_index":1665,"title":{},"body":{"index.html":{},"modules.html":{}}}],["gravatar",{"_index":707,"title":{},"body":{"injectables/GravatarService.html":{},"dependencies.html":{}}}],["gravatar.url(email",{"_index":716,"title":{},"body":{"injectables/GravatarService.html":{}}}],["gravatarservice",{"_index":699,"title":{"injectables/GravatarService.html":{}},"body":{"injectables/GravatarService.html":{},"coverage.html":{}}}],["group",{"_index":216,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["grouped",{"_index":237,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["groupid",{"_index":122,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["groupkey",{"_index":210,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["guard",{"_index":15,"title":{"guards/PendingChangesGuard.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1089,"title":{},"body":{"guards/PendingChangesGuard.html":{}}}],["h",{"_index":464,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["handle",{"_index":668,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/UtilService.html":{}}}],["handleerror",{"_index":662,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handleerror(error",{"_index":665,"title":{},"body":{"injectables/ErrorService.html":{}}}],["handler",{"_index":656,"title":{},"body":{"injectables/ErrorService.html":{}}}],["happened",{"_index":694,"title":{},"body":{"injectables/ErrorService.html":{}}}],["happens",{"_index":885,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["hash",{"_index":718,"title":{},"body":{"injectables/GravatarService.html":{}}}],["hasn't",{"_index":817,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["hasversion",{"_index":103,"title":{"interfaces/HasVersion.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["help",{"_index":1750,"title":{},"body":{"index.html":{}}}],["here",{"_index":387,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"miscellaneous/variables.html":{}}}],["here's",{"_index":1234,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["hint",{"_index":178,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["hint.replace",{"_index":513,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["hint.replace(/\\s+/g",{"_index":517,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["hint.trim",{"_index":510,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["historical",{"_index":273,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"miscellaneous/enumerations.html":{}}}],["historicaldate",{"_index":723,"title":{"classes/HistoricalDate.html":{}},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{}}}],["historicaldatemodel",{"_index":727,"title":{"interfaces/HistoricalDateModel.html":{}},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{}}}],["historicaldatetype",{"_index":748,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"miscellaneous/enumerations.html":{}}}],["historicaldatetype.point",{"_index":843,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["historicaldatetype.range",{"_index":840,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["historicaldatetype.undefined",{"_index":847,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["hosted",{"_index":927,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["html",{"_index":1241,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["http",{"_index":877,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["http://localhost:4200",{"_index":1725,"title":{},"body":{"index.html":{}}}],["http://localhost:60304/api",{"_index":649,"title":{},"body":{"injectables/EnvService.html":{}}}],["http://stackoverflow.com/a/42207299/7307355",{"_index":71,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["httpclient",{"_index":875,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["httpclientmodule",{"_index":90,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorresponse",{"_index":666,"title":{},"body":{"injectables/ErrorService.html":{}}}],["https://angular.io/guide/http",{"_index":671,"title":{},"body":{"injectables/ErrorService.html":{}}}],["https://stackoverflow.com/questions/3561493/is",{"_index":519,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["https://stackoverflow.com/questions/35922071/warn",{"_index":36,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["https://tane.dev/2019/09/validating",{"_index":904,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["https://www.jvandemo.com/how",{"_index":640,"title":{},"body":{"injectables/EnvService.html":{}}}],["i.e",{"_index":364,"title":{},"body":{"classes/Datation.html":{},"classes/RomanNumber.html":{}}}],["i/i",{"_index":580,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["id",{"_index":119,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["identified",{"_index":192,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["identifier",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":135,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["iid",{"_index":947,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["iiii",{"_index":1169,"title":{},"body":{"classes/RomanNumber.html":{}}}],["iixxcc",{"_index":1140,"title":{},"body":{"classes/RomanNumber.html":{}}}],["image",{"_index":1675,"title":{},"body":{"index.html":{}}}],["impactlevel",{"_index":183,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["implementation",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implemented",{"_index":9,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"guards/PendingChangesGuard.html":{}}}],["implementor",{"_index":16,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["implements",{"_index":48,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"guards/PendingChangesGuard.html":{}}}],["implicit",{"_index":478,"title":{},"body":{"classes/Datation.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["imported",{"_index":1720,"title":{},"body":{"index.html":{}}}],["imports",{"_index":92,"title":{},"body":{"modules/CoreModule.html":{}}}],["include",{"_index":405,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/LibraryRouteService.html":{},"index.html":{}}}],["included",{"_index":392,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/SelectedRange.html":{}}}],["including",{"_index":726,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["inclusive",{"_index":1439,"title":{},"body":{"classes/TextRange.html":{}}}],["independently",{"_index":1008,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1075,"title":{},"body":{"interfaces/PartEditorKeys.html":{},"interfaces/ThesauriSet.html":{}}}],["indication",{"_index":807,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["indirection",{"_index":1208,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["information",{"_index":131,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["inject",{"_index":901,"title":{},"body":{"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"interfaces/ValidationResult.html":{}}}],["inject('parteditorkeys",{"_index":1015,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["injectable",{"_index":34,"title":{"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"injectables/UtilService.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["injectables",{"_index":627,"title":{},"body":{"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":902,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["inside",{"_index":1287,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["install",{"_index":1220,"title":{},"body":{"interfaces/SelectedRange.html":{},"index.html":{}}}],["installed",{"_index":1682,"title":{},"body":{"index.html":{}}}],["instance",{"_index":938,"title":{},"body":{"injectables/LibraryRouteService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":673,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/UtilService.html":{}}}],["instead",{"_index":1057,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"miscellaneous/variables.html":{}}}],["integralcompareto",{"_index":1509,"title":{},"body":{"classes/TokenPoint.html":{}}}],["integralcompareto(other",{"_index":1517,"title":{},"body":{"classes/TokenPoint.html":{}}}],["integrate",{"_index":805,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["integration",{"_index":814,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["interactive",{"_index":1671,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{},"overview.html":{}}}],["intersecting",{"_index":1248,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["introduced",{"_index":1002,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["invalid",{"_index":385,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["isabout",{"_index":734,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["isabsent",{"_index":150,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["isalias",{"_index":203,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["isapproximate",{"_index":277,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["iscaseequal",{"_index":1104,"title":{},"body":{"classes/RomanNumber.html":{}}}],["iscaseequal(c1",{"_index":1153,"title":{},"body":{"classes/RomanNumber.html":{}}}],["iscentury",{"_index":278,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["isdubious",{"_index":279,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{}}}],["isequal",{"_index":1433,"title":{},"body":{"classes/TextRange.html":{}}}],["isequal(other",{"_index":1440,"title":{},"body":{"classes/TextRange.html":{}}}],["isexisting",{"_index":254,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["islower",{"_index":1105,"title":{},"body":{"classes/RomanNumber.html":{}}}],["islower(c",{"_index":1157,"title":{},"body":{"classes/RomanNumber.html":{}}}],["isrange",{"_index":1464,"title":{},"body":{"classes/TokenLocation.html":{}}}],["isrequired",{"_index":208,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["isselected",{"_index":1246,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["isspan",{"_index":280,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["isundefined",{"_index":291,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["isupper",{"_index":1106,"title":{},"body":{"classes/RomanNumber.html":{}}}],["isupper(c",{"_index":1159,"title":{},"body":{"classes/RomanNumber.html":{}}}],["isvalidpassword",{"_index":1079,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["isvalidpassword(control",{"_index":1080,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["iswhitespace(c",{"_index":1226,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["it's",{"_index":779,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["item",{"_index":117,"title":{"interfaces/Item.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["item's",{"_index":114,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["itemfilter",{"_index":127,"title":{"interfaces/ItemFilter.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["itemid",{"_index":145,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["iteminfo",{"_index":132,"title":{"interfaces/ItemInfo.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["items",{"_index":96,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["items/${itemid}/${editorkey.frkey}/fragment/${partid}/${frtypeid}/${loc",{"_index":1041,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["items/${itemid}/${editorkey.partkey}/${typeid}/${partid",{"_index":1039,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["items////?rid",{"_index":975,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["items///fragment///?rid",{"_index":979,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["items/:iid/general/net.fusisoft.note/:pid",{"_index":946,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["iv",{"_index":771,"title":{},"body":{"classes/HistoricalDate.html":{},"classes/RomanNumber.html":{}}}],["ivxivx",{"_index":538,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["ivxlcdm",{"_index":1138,"title":{},"body":{"classes/RomanNumber.html":{}}}],["ix",{"_index":1124,"title":{},"body":{"classes/RomanNumber.html":{}}}],["iy",{"_index":1327,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["j",{"_index":1348,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["jan",{"_index":497,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["javascript",{"_index":521,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["jest",{"_index":1741,"title":{},"body":{"index.html":{}}}],["js",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":393,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LocalStorageService.html":{},"interfaces/ValidationResult.html":{}}}],["json.parse(json",{"_index":1067,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":1069,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jsonschemaservice",{"_index":864,"title":{"injectables/JsonSchemaService.html":{}},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["jul",{"_index":502,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["jun",{"_index":501,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":17,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["ken",{"_index":1254,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["ken]/...ke]n",{"_index":1264,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["key",{"_index":195,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["key(s",{"_index":221,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["key.indexof",{"_index":1034,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["key.substr(0",{"_index":1035,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["key.substr(i",{"_index":1036,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["keys",{"_index":229,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["l",{"_index":1108,"title":{},"body":{"classes/RomanNumber.html":{}}}],["l.primary.x",{"_index":1294,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["l.primary.y",{"_index":1293,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["label",{"_index":212,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["language",{"_index":188,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["last",{"_index":619,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/SelectedRange.html":{}}}],["last.endswith",{"_index":621,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["lastname",{"_index":246,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["later",{"_index":698,"title":{},"body":{"injectables/ErrorService.html":{}}}],["layer",{"_index":147,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["layer.service.ts",{"_index":1201,"title":{},"body":{"interfaces/SelectedRange.html":{},"coverage.html":{}}}],["layerhint",{"_index":180,"title":{"interfaces/LayerHint.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["layerpartinfo",{"_index":148,"title":{"interfaces/LayerPartInfo.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["layers",{"_index":963,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["layout",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":932,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["learn",{"_index":1752,"title":{},"body":{"index.html":{}}}],["leaving",{"_index":40,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["left",{"_index":451,"title":{},"body":{"classes/Datation.html":{},"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{}}}],["legend",{"_index":1756,"title":{},"body":{"overview.html":{}}}],["len",{"_index":1073,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/UtilService.html":{}}}],["length",{"_index":1430,"title":{},"body":{"classes/TextRange.html":{}}}],["less",{"_index":328,"title":{},"body":{"classes/Datation.html":{}}}],["letter",{"_index":1148,"title":{},"body":{"classes/RomanNumber.html":{}}}],["letters",{"_index":1165,"title":{},"body":{"classes/RomanNumber.html":{}}}],["level",{"_index":1207,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["lib",{"_index":1718,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1697,"title":{},"body":{"index.html":{}}}],["library",{"_index":924,"title":{},"body":{"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{},"index.html":{}}}],["libraryrouteservice",{"_index":921,"title":{"injectables/LibraryRouteService.html":{}},"body":{"injectables/LibraryRouteService.html":{},"coverage.html":{}}}],["libs/.../datation.ts",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../env.service.provider.ts",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../historical",{"_index":1647,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/lib/core.module.ts",{"_index":86,"title":{},"body":{"modules/CoreModule.html":{}}}],["libs/core/src/lib/datation.ts",{"_index":271,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/lib/datation.ts:103",{"_index":338,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:111",{"_index":347,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:144",{"_index":381,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:212",{"_index":432,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:233",{"_index":400,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:247",{"_index":318,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:263",{"_index":370,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:270",{"_index":349,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:297",{"_index":351,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:311",{"_index":324,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:320",{"_index":379,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:333",{"_index":397,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:435",{"_index":436,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:48",{"_index":316,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:49",{"_index":312,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:50",{"_index":314,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:51",{"_index":311,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:52",{"_index":313,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:53",{"_index":310,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:54",{"_index":315,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:55",{"_index":302,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:79",{"_index":402,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/datation.ts:94",{"_index":399,"title":{},"body":{"classes/Datation.html":{}}}],["libs/core/src/lib/guards/pending",{"_index":6,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"coverage.html":{}}}],["libs/core/src/lib/historical",{"_index":724,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/lib/models.ts",{"_index":94,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["libs/core/src/lib/models.ts:174",{"_index":1458,"title":{},"body":{"interfaces/ThesauriSet.html":{}}}],["libs/core/src/lib/models.ts:242",{"_index":1076,"title":{},"body":{"interfaces/PartEditorKeys.html":{}}}],["libs/core/src/lib/roman",{"_index":1092,"title":{},"body":{"classes/RomanNumber.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/env.service.provider.ts",{"_index":1578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/lib/services/env.service.ts",{"_index":628,"title":{},"body":{"injectables/EnvService.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/env.service.ts:14",{"_index":650,"title":{},"body":{"injectables/EnvService.html":{}}}],["libs/core/src/lib/services/env.service.ts:15",{"_index":652,"title":{},"body":{"injectables/EnvService.html":{}}}],["libs/core/src/lib/services/env.service.ts:16",{"_index":648,"title":{},"body":{"injectables/EnvService.html":{}}}],["libs/core/src/lib/services/error.service.ts",{"_index":655,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/error.service.ts:21",{"_index":667,"title":{},"body":{"injectables/ErrorService.html":{}}}],["libs/core/src/lib/services/gravatar.service.ts",{"_index":700,"title":{},"body":{"injectables/GravatarService.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/gravatar.service.ts:17",{"_index":704,"title":{},"body":{"injectables/GravatarService.html":{}}}],["libs/core/src/lib/services/json",{"_index":865,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/library",{"_index":922,"title":{},"body":{"injectables/LibraryRouteService.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/local",{"_index":1043,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/text",{"_index":1200,"title":{},"body":{"interfaces/SelectedRange.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/util.service.ts",{"_index":1536,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["libs/core/src/lib/services/util.service.ts:13",{"_index":1540,"title":{},"body":{"injectables/UtilService.html":{}}}],["libs/core/src/lib/services/util.service.ts:6",{"_index":1538,"title":{},"body":{"injectables/UtilService.html":{}}}],["libs/core/src/lib/text",{"_index":1427,"title":{},"body":{"classes/TextRange.html":{},"coverage.html":{}}}],["libs/core/src/lib/token",{"_index":1459,"title":{},"body":{"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"coverage.html":{}}}],["libs/core/src/lib/validators/password.validator.ts",{"_index":1078,"title":{},"body":{"classes/PasswordValidator.html":{},"coverage.html":{}}}],["libs/core/src/lib/validators/password.validator.ts:4",{"_index":1082,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["line",{"_index":167,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["line.charat(index",{"_index":1333,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["line.charat(j",{"_index":1350,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["line.charat(selend",{"_index":1335,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["line.tokens",{"_index":1380,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["line.tokens.join",{"_index":1381,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["line.tokens[x",{"_index":1286,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["line:no",{"_index":1196,"title":{},"body":{"classes/RomanNumber.html":{}}}],["lines",{"_index":1231,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["lines[y",{"_index":1285,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["list",{"_index":929,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["literal",{"_index":623,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/LibraryRouteService.html":{},"interfaces/PartGroupKey.html":{},"classes/PasswordValidator.html":{}}}],["load",{"_index":895,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["loaded",{"_index":636,"title":{},"body":{"injectables/EnvService.html":{}}}],["loading",{"_index":933,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["loadschema",{"_index":872,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["loadschema(name",{"_index":890,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["loc",{"_index":961,"title":{},"body":{"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{}}}],["loc.overlaps(selectedloc",{"_index":1295,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["loc.primary.at",{"_index":1258,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["loc.primary.y",{"_index":1284,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["loc.secondary",{"_index":1271,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["loc.secondary.x",{"_index":1290,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["loc.secondary.y",{"_index":1289,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["local",{"_index":1058,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.getitem(key",{"_index":1066,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1072,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1070,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":1042,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["located",{"_index":935,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["locatenextspace(line",{"_index":1334,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["locateprevspace(line",{"_index":1332,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["location",{"_index":154,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["location.ts",{"_index":1460,"title":{},"body":{"classes/TokenLocation.html":{},"coverage.html":{}}}],["location.ts:14",{"_index":1475,"title":{},"body":{"classes/TokenLocation.html":{}}}],["location.ts:27",{"_index":1467,"title":{},"body":{"classes/TokenLocation.html":{}}}],["location.ts:34",{"_index":1472,"title":{},"body":{"classes/TokenLocation.html":{}}}],["location.ts:39",{"_index":1480,"title":{},"body":{"classes/TokenLocation.html":{}}}],["location.ts:4",{"_index":1468,"title":{},"body":{"classes/TokenLocation.html":{}}}],["location.ts:45",{"_index":1471,"title":{},"body":{"classes/TokenLocation.html":{}}}],["location.ts:5",{"_index":1469,"title":{},"body":{"classes/TokenLocation.html":{}}}],["location.ts:59",{"_index":1474,"title":{},"body":{"classes/TokenLocation.html":{}}}],["locations",{"_index":1275,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["locations.find(l",{"_index":1292,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["lockoutenabled",{"_index":260,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["lockoutend",{"_index":261,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["locportion",{"_index":1237,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["login",{"_index":247,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["logincredentials",{"_index":249,"title":{"interfaces/LoginCredentials.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["loginresult",{"_index":251,"title":{"interfaces/LoginResult.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["looking",{"_index":995,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["lowercase",{"_index":441,"title":{},"body":{"classes/Datation.html":{}}}],["lowermonth",{"_index":554,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["m",{"_index":454,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenPoint.html":{}}}],["m1",{"_index":812,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["m1.index",{"_index":825,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["m1[1",{"_index":816,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["m1[2",{"_index":828,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["m1[3",{"_index":829,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["m2",{"_index":820,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["m2[1",{"_index":822,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["m[1",{"_index":547,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["m[2",{"_index":549,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/TextRange.html":{}}}],["m[3",{"_index":553,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/TokenPoint.html":{}}}],["m[3].tolowercase",{"_index":555,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["m[4",{"_index":559,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/TokenPoint.html":{}}}],["m[5",{"_index":562,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["m[7",{"_index":566,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["m[7].replace",{"_index":567,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["m[8",{"_index":571,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["m[9",{"_index":573,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["main",{"_index":1678,"title":{},"body":{"index.html":{}}}],["make",{"_index":1541,"title":{},"body":{"injectables/UtilService.html":{}}}],["manually",{"_index":1673,"title":{},"body":{"index.html":{}}}],["many",{"_index":1690,"title":{},"body":{"index.html":{}}}],["map",{"_index":219,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["mapped",{"_index":227,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["mappings",{"_index":230,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["mar",{"_index":499,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["mark",{"_index":419,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["markdown",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["marker",{"_index":444,"title":{},"body":{"classes/Datation.html":{}}}],["match",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":81,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matchtokenat",{"_index":292,"title":{},"body":{"classes/Datation.html":{}}}],["matchtokenat(token",{"_index":378,"title":{},"body":{"classes/Datation.html":{}}}],["math.abs(this.value",{"_index":602,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["max",{"_index":773,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["maxmodified",{"_index":129,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["mean",{"_index":388,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["merge",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["metadata",{"_index":239,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["method",{"_index":363,"title":{},"body":{"classes/Datation.html":{},"injectables/ErrorService.html":{},"interfaces/SelectedRange.html":{}}}],["methods",{"_index":282,"title":{},"body":{"classes/Datation.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"classes/RomanNumber.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{}}}],["middle",{"_index":782,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["migrate",{"_index":1654,"title":{},"body":{"index.html":{}}}],["min",{"_index":774,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/SelectedRange.html":{}}}],["minimal",{"_index":139,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["minmodified",{"_index":128,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["minus",{"_index":775,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["minute",{"_index":1667,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1645,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":848,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["misspellings",{"_index":1431,"title":{},"body":{"classes/TextRange.html":{}}}],["mm",{"_index":455,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["mmm",{"_index":456,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["model",{"_index":939,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["models",{"_index":1014,"title":{},"body":{"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{}}}],["module",{"_index":83,"title":{"modules/CoreModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/CoreModule.html":{},"injectables/LibraryRouteService.html":{},"modules.html":{}}}],["moment",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["mon",{"_index":491,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["monaco",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["monorepos",{"_index":1681,"title":{},"body":{"index.html":{}}}],["month",{"_index":281,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["monthnames",{"_index":488,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":226,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["multi",{"_index":1267,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["multiple",{"_index":1716,"title":{},"body":{"index.html":{}}}],["multiplies",{"_index":1166,"title":{},"body":{"classes/RomanNumber.html":{}}}],["n",{"_index":1240,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TextRange.html":{}}}],["n1",{"_index":1491,"title":{},"body":{"classes/TokenLocation.html":{}}}],["naftis/fusi:cadmusweb",{"_index":1676,"title":{},"body":{"index.html":{}}}],["name",{"_index":207,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["name.tolowercase",{"_index":557,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["named",{"_index":936,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["natum",{"_index":461,"title":{},"body":{"classes/Datation.html":{}}}],["navigate",{"_index":1006,"title":{},"body":{"injectables/LibraryRouteService.html":{},"index.html":{}}}],["navigating",{"_index":61,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["needed",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["negative",{"_index":746,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["nest",{"_index":1710,"title":{},"body":{"index.html":{}}}],["network",{"_index":677,"title":{},"body":{"injectables/ErrorService.html":{}}}],["never",{"_index":1303,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{}}}],["new",{"_index":304,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":308,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["newpassword",{"_index":267,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["next",{"_index":1195,"title":{},"body":{"classes/RomanNumber.html":{}}}],["ng",{"_index":1658,"title":{},"body":{"index.html":{}}}],["ngdevtools",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["ngmodule",{"_index":87,"title":{},"body":{"modules/CoreModule.html":{}}}],["ngx",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":1215,"title":{},"body":{"interfaces/SelectedRange.html":{},"index.html":{}}}],["node.element_node",{"_index":1319,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["node.nodetype",{"_index":1366,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["node.text_node",{"_index":1312,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["non",{"_index":389,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["normal",{"_index":223,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["normalize",{"_index":516,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["normalized",{"_index":424,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["nosymbolinpassword",{"_index":1088,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["notation",{"_index":1149,"title":{},"body":{"classes/RomanNumber.html":{}}}],["note",{"_index":57,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"guards/PendingChangesGuard.html":{},"classes/TokenLocation.html":{}}}],["notepart",{"_index":945,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["nothing",{"_index":884,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["nov",{"_index":506,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":714,"title":{},"body":{"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["npx",{"_index":1652,"title":{},"body":{"index.html":{}}}],["nrwl",{"_index":1657,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":1617,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1715,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1717,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":1713,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1711,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1714,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":1705,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1709,"title":{},"body":{"index.html":{}}}],["nrwl/workspace",{"_index":1655,"title":{},"body":{"index.html":{}}}],["null",{"_index":327,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidator.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{}}}],["null/undefined",{"_index":430,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["number",{"_index":102,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["number.ts",{"_index":1093,"title":{},"body":{"classes/RomanNumber.html":{},"coverage.html":{}}}],["number.ts:115",{"_index":1158,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:119",{"_index":1160,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:123",{"_index":1155,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:130",{"_index":1151,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:146",{"_index":1145,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:20",{"_index":1109,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:35",{"_index":1137,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:5",{"_index":1119,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:50",{"_index":1125,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:65",{"_index":1139,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:66",{"_index":1141,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:67",{"_index":1142,"title":{},"body":{"classes/RomanNumber.html":{}}}],["number.ts:79",{"_index":1164,"title":{},"body":{"classes/RomanNumber.html":{}}}],["numeric",{"_index":1146,"title":{},"body":{"classes/RomanNumber.html":{}}}],["nx",{"_index":1651,"title":{},"body":{"index.html":{}}}],["obj",{"_index":1543,"title":{},"body":{"injectables/UtilService.html":{}}}],["obj.length",{"_index":1547,"title":{},"body":{"injectables/UtilService.html":{}}}],["object",{"_index":879,"title":{},"body":{"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":218,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["observable",{"_index":32,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/ErrorService.html":{},"guards/PendingChangesGuard.html":{}}}],["occurred",{"_index":678,"title":{},"body":{"injectables/ErrorService.html":{}}}],["oct",{"_index":505,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":78,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["old",{"_index":911,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["oldpassword",{"_index":266,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["omit",{"_index":858,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["one",{"_index":635,"title":{},"body":{"injectables/EnvService.html":{},"injectables/LibraryRouteService.html":{}}}],["open",{"_index":928,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["opening",{"_index":1236,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["operations",{"_index":1432,"title":{},"body":{"classes/TextRange.html":{}}}],["operator",{"_index":660,"title":{},"body":{"injectables/ErrorService.html":{}}}],["optional",{"_index":111,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["optionally",{"_index":305,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["options",{"_index":343,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"miscellaneous/variables.html":{}}}],["options.adtext",{"_index":525,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["options.bctext",{"_index":523,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["options.bctext.tolowercase",{"_index":569,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["options.monthnames.findindex(name",{"_index":556,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["other.at",{"_index":1533,"title":{},"body":{"classes/TokenPoint.html":{}}}],["other.length",{"_index":1455,"title":{},"body":{"classes/TextRange.html":{}}}],["other.primary",{"_index":1495,"title":{},"body":{"classes/TokenLocation.html":{}}}],["other.primary.compareto(this.secondary",{"_index":1507,"title":{},"body":{"classes/TokenLocation.html":{}}}],["other.run",{"_index":1534,"title":{},"body":{"classes/TokenPoint.html":{}}}],["other.secondary",{"_index":1493,"title":{},"body":{"classes/TokenLocation.html":{}}}],["other.secondary.compareto(this.primary",{"_index":1506,"title":{},"body":{"classes/TokenLocation.html":{}}}],["other.start",{"_index":1453,"title":{},"body":{"classes/TextRange.html":{}}}],["other.x",{"_index":1532,"title":{},"body":{"classes/TokenPoint.html":{}}}],["other.y",{"_index":1531,"title":{},"body":{"classes/TokenPoint.html":{}}}],["otherwise",{"_index":637,"title":{},"body":{"injectables/EnvService.html":{}}}],["out",{"_index":983,"title":{},"body":{"injectables/LibraryRouteService.html":{},"overview.html":{}}}],["outdated",{"_index":1662,"title":{},"body":{"index.html":{}}}],["overlap",{"_index":1304,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["overlaps",{"_index":1465,"title":{},"body":{"classes/TokenLocation.html":{}}}],["overlaps(other",{"_index":1473,"title":{},"body":{"classes/TokenLocation.html":{}}}],["overridden",{"_index":632,"title":{},"body":{"injectables/EnvService.html":{}}}],["overview",{"_index":1755,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overwriting",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p",{"_index":445,"title":{},"body":{"classes/Datation.html":{},"interfaces/SelectedRange.html":{},"index.html":{}}}],["p.c",{"_index":823,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["p.hasattribute('id",{"_index":1316,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["p.nodename",{"_index":1315,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["p.parentelement",{"_index":1317,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["package",{"_index":1596,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1660,"title":{},"body":{"index.html":{}}}],["padded",{"_index":450,"title":{},"body":{"classes/Datation.html":{}}}],["page",{"_index":41,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["pagecount",{"_index":97,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["pagenumber",{"_index":98,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["pagesize",{"_index":99,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["pair",{"_index":1481,"title":{},"body":{"classes/TokenLocation.html":{}}}],["pair.length",{"_index":1482,"title":{},"body":{"classes/TokenLocation.html":{}}}],["param",{"_index":508,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["parameter",{"_index":971,"title":{},"body":{"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{}}}],["parameters",{"_index":262,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{}}}],["parent=p",{"_index":1313,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["parsable",{"_index":1446,"title":{},"body":{"classes/TextRange.html":{}}}],["parse",{"_index":293,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["parse(text",{"_index":380,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["parsed",{"_index":383,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["parseformatstring",{"_index":294,"title":{},"body":{"classes/Datation.html":{}}}],["parseformatstring(format",{"_index":396,"title":{},"body":{"classes/Datation.html":{}}}],["parseint",{"_index":1328,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["parseint(m[1",{"_index":1451,"title":{},"body":{"classes/TextRange.html":{},"classes/TokenPoint.html":{}}}],["parseint(m[2",{"_index":551,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/TextRange.html":{},"classes/TokenPoint.html":{}}}],["parseint(m[3",{"_index":1524,"title":{},"body":{"classes/TokenPoint.html":{}}}],["parseint(m[4",{"_index":561,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/TokenPoint.html":{}}}],["parseint(p.getattribute('id').substr(1",{"_index":1318,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["part",{"_index":125,"title":{"interfaces/Part.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["part's",{"_index":966,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["partdefinition",{"_index":206,"title":{"interfaces/PartDefinition.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["partdefinitions",{"_index":213,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["partdefs",{"_index":964,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["partdefs.find(d",{"_index":1025,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["parteditorkeys",{"_index":235,"title":{"interfaces/PartEditorKeys.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["partgroup",{"_index":242,"title":{"interfaces/PartGroup.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["partgroupkey",{"_index":228,"title":{"interfaces/PartGroupKey.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["partgroupkey.fragments[reqroleid",{"_index":1033,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["partgroupkey.part",{"_index":1032,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["partid",{"_index":960,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["partkey",{"_index":1028,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["parts",{"_index":116,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["parts/general/general",{"_index":942,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["parttypeids",{"_index":136,"title":{"interfaces/PartTypeIds.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["pass",{"_index":887,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{}}}],["passed",{"_index":190,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["password",{"_index":250,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["passwordchange",{"_index":265,"title":{"interfaces/PasswordChange.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["passwordvalidator",{"_index":1077,"title":{"classes/PasswordValidator.html":{}},"body":{"classes/PasswordValidator.html":{},"coverage.html":{}}}],["past",{"_index":853,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["patch",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["patchoperation",{"_index":182,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["path",{"_index":894,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["patterns",{"_index":341,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["payload",{"_index":133,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["pending",{"_index":13,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{}}}],["pendingchangesguard",{"_index":47,"title":{"guards/PendingChangesGuard.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"coverage.html":{}}}],["performed",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["perhaps",{"_index":446,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["pid",{"_index":948,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["pipe",{"_index":658,"title":{},"body":{"injectables/ErrorService.html":{}}}],["pixels",{"_index":712,"title":{},"body":{"injectables/GravatarService.html":{}}}],["place",{"_index":1175,"title":{},"body":{"classes/RomanNumber.html":{}}}],["please",{"_index":695,"title":{},"body":{"injectables/ErrorService.html":{}}}],["plugins",{"_index":1691,"title":{},"body":{"index.html":{}}}],["plus",{"_index":776,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["point",{"_index":272,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"miscellaneous/enumerations.html":{}}}],["point.ts",{"_index":1508,"title":{},"body":{"classes/TokenPoint.html":{},"coverage.html":{}}}],["point.ts:15",{"_index":1519,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:35",{"_index":1511,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:44",{"_index":1521,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:5",{"_index":1515,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:56",{"_index":1516,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:6",{"_index":1514,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:7",{"_index":1512,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:70",{"_index":1518,"title":{},"body":{"classes/TokenPoint.html":{}}}],["point.ts:8",{"_index":1513,"title":{},"body":{"classes/TokenPoint.html":{}}}],["points",{"_index":374,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TokenLocation.html":{}}}],["portion",{"_index":1239,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["post",{"_index":463,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{}}}],["preceded",{"_index":977,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["preceding",{"_index":583,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["predefined",{"_index":777,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["preferred",{"_index":1167,"title":{},"body":{"classes/RomanNumber.html":{}}}],["prefix",{"_index":1051,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{}}}],["present",{"_index":141,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["presented",{"_index":240,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["press",{"_index":73,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["prev",{"_index":1283,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["primary",{"_index":1461,"title":{},"body":{"classes/TokenLocation.html":{}}}],["private",{"_index":287,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{}}}],["prod",{"_index":1734,"title":{},"body":{"index.html":{}}}],["production",{"_index":1735,"title":{},"body":{"index.html":{}}}],["project",{"_index":1649,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1730,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1702,"title":{},"body":{"index.html":{}}}],["proper",{"_index":1001,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["properties",{"_index":26,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":19,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/LibraryRouteService.html":{},"guards/PendingChangesGuard.html":{}}}],["provide",{"_index":987,"title":{},"body":{"injectables/LibraryRouteService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["provider",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1759,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["pt",{"_index":1249,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TokenPoint.html":{}}}],["pt.at",{"_index":1251,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["pt.run",{"_index":1253,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TokenPoint.html":{}}}],["public",{"_index":275,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["purpose",{"_index":1300,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["query",{"_index":970,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["quick",{"_index":1666,"title":{},"body":{"index.html":{}}}],["r",{"_index":1357,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TokenPoint.html":{}}}],["r.exec(id",{"_index":1360,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["r.exec(text",{"_index":1523,"title":{},"body":{"classes/TokenPoint.html":{}}}],["r=1",{"_index":1479,"title":{},"body":{"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["range",{"_index":375,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"miscellaneous/enumerations.html":{}}}],["range.commonancestorcontainer",{"_index":1374,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.commonancestorcontainer.nodename",{"_index":1322,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.commonancestorcontainer.nodetype",{"_index":1311,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.commonancestorcontainer.parentelement",{"_index":1314,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.endcontainer",{"_index":1370,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.endoffset",{"_index":1397,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.startcontainer",{"_index":1367,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.startoffset",{"_index":1399,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["range.ts",{"_index":1428,"title":{},"body":{"classes/TextRange.html":{},"coverage.html":{}}}],["range.ts:14",{"_index":1436,"title":{},"body":{"classes/TextRange.html":{}}}],["range.ts:22",{"_index":1442,"title":{},"body":{"classes/TextRange.html":{}}}],["range.ts:34",{"_index":1435,"title":{},"body":{"classes/TextRange.html":{}}}],["range.ts:47",{"_index":1438,"title":{},"body":{"classes/TextRange.html":{}}}],["range.ts:56",{"_index":1441,"title":{},"body":{"classes/TextRange.html":{}}}],["range.ts:67",{"_index":1445,"title":{},"body":{"classes/TextRange.html":{}}}],["range.ts:9",{"_index":1437,"title":{},"body":{"classes/TextRange.html":{}}}],["rangy",{"_index":1218,"title":{},"body":{"interfaces/SelectedRange.html":{},"dependencies.html":{}}}],["rangy's",{"_index":1203,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["rangy.getselection",{"_index":1423,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["react",{"_index":1704,"title":{},"body":{"index.html":{}}}],["read",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":869,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{}}}],["rebuild",{"_index":645,"title":{},"body":{"injectables/EnvService.html":{}}}],["received",{"_index":428,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/SelectedRange.html":{}}}],["recipe",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reconciliation",{"_index":177,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["reference",{"_index":1338,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["refers",{"_index":199,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["reflects",{"_index":22,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{}}}],["regexescape",{"_index":295,"title":{},"body":{"classes/Datation.html":{}}}],["regexescape(text",{"_index":398,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["regexp",{"_index":348,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["regexp('([gg])[ap",{"_index":577,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["regexp('(\\\\d+)(?:[×x](\\\\d",{"_index":1449,"title":{},"body":{"classes/TextRange.html":{}}}],["regexp('[ww]?[ee][ap",{"_index":585,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["regexp('\\\\s",{"_index":625,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["regexp('^(\\\\d+)\\\\.(\\\\d+)(?:@(\\\\d+)(?:x(\\\\d",{"_index":1522,"title":{},"body":{"classes/TokenPoint.html":{}}}],["regexp('^\\\\s",{"_index":1225,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["regexp('^f",{"_index":1358,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["registered",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationmodel",{"_index":255,"title":{"interfaces/RegistrationModel.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["reload",{"_index":1727,"title":{},"body":{"index.html":{}}}],["remove",{"_index":582,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{}}}],["remove(key",{"_index":1059,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["render",{"_index":1235,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["rendered",{"_index":969,"title":{},"body":{"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{}}}],["rendering",{"_index":1242,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["renderopeningspan",{"_index":1247,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["rendertokenatend(pt",{"_index":1250,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["rendertokenatpointstart",{"_index":1256,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["rendertokenatrangestart",{"_index":1268,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["rendertokenatstart",{"_index":1270,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["reopen",{"_index":1281,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["replace",{"_index":511,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["replace=true",{"_index":888,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["replaced",{"_index":409,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["representation",{"_index":765,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TextRange.html":{}}}],["represented",{"_index":357,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["representing",{"_index":382,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/LibraryRouteService.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["represents",{"_index":161,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["reqroleid",{"_index":1023,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["require",{"_index":12,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{}}}],["required",{"_index":711,"title":{},"body":{"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/LibraryRouteService.html":{},"classes/TokenLocation.html":{}}}],["requires",{"_index":1219,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["requiring",{"_index":1206,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["reserved",{"_index":406,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["reset",{"_index":296,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"overview.html":{}}}],["respectively",{"_index":369,"title":{},"body":{"classes/Datation.html":{}}}],["response",{"_index":669,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["result",{"_index":80,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":426,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["results",{"_index":82,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1047,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["retrieve(key",{"_index":1061,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["retry",{"_index":663,"title":{},"body":{"injectables/ErrorService.html":{}}}],["return",{"_index":54,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":429,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["returns",{"_index":322,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{}}}],["rid",{"_index":968,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["right",{"_index":1263,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{}}}],["role",{"_index":134,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["roleid",{"_index":138,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["roleid.indexof",{"_index":1021,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["roleid.lastindexof",{"_index":1016,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["roleid.startswith('fr",{"_index":1020,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["roleid.substring(0",{"_index":1017,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["roleid.substring(i",{"_index":1022,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["roles",{"_index":258,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["roman",{"_index":481,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/RomanNumber.html":{}}}],["roman.touppercase",{"_index":1188,"title":{},"body":{"classes/RomanNumber.html":{}}}],["roman[index",{"_index":1190,"title":{},"body":{"classes/RomanNumber.html":{}}}],["romannumber",{"_index":480,"title":{"classes/RomanNumber.html":{}},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/RomanNumber.html":{},"coverage.html":{}}}],["romannumber.fromroman(m[6].touppercase",{"_index":564,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["romannumber.toroman(math.abs(this.value)).tolowercase",{"_index":600,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["romannumber.toroman(math.abs(this.value)).touppercase",{"_index":601,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["root",{"_index":45,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["route",{"_index":925,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts",{"_index":923,"title":{},"body":{"injectables/LibraryRouteService.html":{},"coverage.html":{}}}],["route.service.ts:119",{"_index":994,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts:150",{"_index":985,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts:186",{"_index":973,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts:213",{"_index":962,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts:25",{"_index":957,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts:37",{"_index":1012,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts:58",{"_index":997,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["route.service.ts:87",{"_index":989,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["routes",{"_index":233,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["run",{"_index":176,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["running",{"_index":1736,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":33,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/ErrorService.html":{},"guards/PendingChangesGuard.html":{},"dependencies.html":{}}}],["s",{"_index":470,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/RomanNumber.html":{},"classes/TokenPoint.html":{},"index.html":{}}}],["s*\\\\{?:([^)]+)\\\\})?\\\\s",{"_index":811,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["s.replace('iv",{"_index":1176,"title":{},"body":{"classes/RomanNumber.html":{}}}],["s.replace('ix",{"_index":1177,"title":{},"body":{"classes/RomanNumber.html":{}}}],["s1",{"_index":799,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["s2",{"_index":801,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["same",{"_index":857,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["samples",{"_index":366,"title":{},"body":{"classes/Datation.html":{}}}],["sanitize",{"_index":403,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sanitized",{"_index":427,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sanitizehint",{"_index":297,"title":{},"body":{"classes/Datation.html":{}}}],["sanitizehint(hint",{"_index":401,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sat",{"_index":496,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":77,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"guards/PendingChangesGuard.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{}}}],["saved",{"_index":72,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["sb",{"_index":854,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["sb.join",{"_index":863,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{}}}],["sb.join('').trim().replace(new",{"_index":624,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.length",{"_index":618,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push",{"_index":617,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["sb.push(`${start.y}.${start.x",{"_index":1408,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(`/${year",{"_index":604,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(`@${start.at",{"_index":1410,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(`@${start.at}x${start.run",{"_index":1413,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(`@1x${end.run",{"_index":1416,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(`x${start.run",{"_index":1412,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(options.adtext",{"_index":616,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(options.daynames[dow",{"_index":611,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(options.monthnames[this.month",{"_index":614,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(this._postalpha[place",{"_index":1172,"title":{},"body":{"classes/RomanNumber.html":{}}}],["sb.push(this._prealpha[place",{"_index":1174,"title":{},"body":{"classes/RomanNumber.html":{}}}],["sb.push(this.a.tostring(format",{"_index":855,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["sb.push(this.b.tostring(format",{"_index":862,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["sb.push(this.day.tostring",{"_index":605,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(this.day.tostring().padstart(2",{"_index":607,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(this.getsortvalue().tostring",{"_index":622,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(this.month.tostring",{"_index":612,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(this.month.tostring().padstart(2",{"_index":613,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(this.value",{"_index":615,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb.push(token",{"_index":599,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/SelectedRange.html":{}}}],["sb.push(token.substr(0",{"_index":1259,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(token.substr(loc.primary.at",{"_index":1269,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(token.substr(pt.at",{"_index":1252,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sb.push(year.tostring",{"_index":603,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sb1",{"_index":824,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["sb1.join",{"_index":830,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["sb1.push",{"_index":827,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["sb1.push(s1.substr(0",{"_index":826,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["sb[sb.length",{"_index":620,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["scaffolding",{"_index":1729,"title":{},"body":{"index.html":{}}}],["schema",{"_index":867,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["schema.service.ts",{"_index":866,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["schema.service.ts:30",{"_index":876,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["schema.service.ts:44",{"_index":880,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["schema.service.ts:61",{"_index":892,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["schema.service.ts:72",{"_index":897,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["secondary",{"_index":1462,"title":{},"body":{"classes/TokenLocation.html":{}}}],["see",{"_index":70,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"injectables/EnvService.html":{},"guards/PendingChangesGuard.html":{},"index.html":{}}}],["sel",{"_index":1422,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sel.getrangeat(0",{"_index":1425,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sel.iscollapsed",{"_index":1424,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selbounds",{"_index":1341,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selbounds[0",{"_index":1345,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selbounds[1",{"_index":1355,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selected",{"_index":1202,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selectedloc",{"_index":1277,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selectedrange",{"_index":1199,"title":{"interfaces/SelectedRange.html":{}},"body":{"interfaces/SelectedRange.html":{},"coverage.html":{}}}],["selection",{"_index":1298,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selend",{"_index":1336,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["selstart",{"_index":1337,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["sep",{"_index":504,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["separate",{"_index":417,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sequence",{"_index":407,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["serializing",{"_index":395,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["serve",{"_index":1723,"title":{},"body":{"index.html":{}}}],["server",{"_index":482,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"index.html":{}}}],["service",{"_index":630,"title":{},"body":{"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"interfaces/ValidationResult.html":{}}}],["services",{"_index":657,"title":{},"body":{"injectables/ErrorService.html":{}}}],["session",{"_index":1049,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.getitem(key",{"_index":1065,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.length",{"_index":1074,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.removeitem(key",{"_index":1071,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.setitem(key",{"_index":1068,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":140,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}}}],["setendpoint",{"_index":735,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["setendpoint(value",{"_index":757,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["setsinglepoint",{"_index":736,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["setsinglepoint(value",{"_index":759,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["setstartpoint",{"_index":737,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["setstartpoint(value",{"_index":761,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["setting",{"_index":306,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["sharable",{"_index":1719,"title":{},"body":{"index.html":{}}}],["show",{"_index":68,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["showing",{"_index":1669,"title":{},"body":{"index.html":{}}}],["shown",{"_index":60,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["side",{"_index":676,"title":{},"body":{"injectables/ErrorService.html":{}}}],["simple",{"_index":422,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/LibraryRouteService.html":{},"classes/TextRange.html":{},"injectables/UtilService.html":{}}}],["single",{"_index":179,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["singleline",{"_index":1403,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["singletoken",{"_index":1404,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["site",{"_index":1679,"title":{},"body":{"index.html":{}}}],["size",{"_index":703,"title":{},"body":{"injectables/GravatarService.html":{}}}],["size.tostring",{"_index":717,"title":{},"body":{"injectables/GravatarService.html":{}}}],["smart",{"_index":466,"title":{},"body":{"classes/Datation.html":{}}}],["something",{"_index":692,"title":{},"body":{"injectables/ErrorService.html":{}}}],["sort",{"_index":350,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["sortkey",{"_index":123,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"modules/CoreModule.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["space",{"_index":412,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["spaces",{"_index":423,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["span",{"_index":354,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/SelectedRange.html":{}}}],["span.nodename",{"_index":1375,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["span.nodetype",{"_index":1377,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["special",{"_index":162,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["specific",{"_index":220,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["specified",{"_index":320,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/ErrorService.html":{},"injectables/GravatarService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"classes/TokenPoint.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{}}}],["start",{"_index":1266,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"index.html":{}}}],["start.at",{"_index":1409,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["start.run",{"_index":1411,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["start.x",{"_index":1405,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["start.y",{"_index":1400,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["start/end",{"_index":425,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/SelectedRange.html":{}}}],["startcontainer",{"_index":1213,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["started",{"_index":1648,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1056,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/SelectedRange.html":{}}}],["startline",{"_index":1389,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["startlineendoffset",{"_index":1393,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["startoffset",{"_index":1214,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["starts",{"_index":998,"title":{},"body":{"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/SelectedRange.html":{}}}],["startxlength",{"_index":1444,"title":{},"body":{"classes/TextRange.html":{}}}],["state",{"_index":24,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["statements",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":285,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/PasswordValidator.html":{},"classes/RomanNumber.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["still",{"_index":1661,"title":{},"body":{"index.html":{}}}],["storage",{"_index":722,"title":{},"body":{"interfaces/HasVersion.html":{},"injectables/LocalStorageService.html":{}}}],["storage.service.ts",{"_index":1044,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:12",{"_index":1062,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:29",{"_index":1064,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:42",{"_index":1060,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:55",{"_index":1053,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:79",{"_index":1050,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":889,"title":{},"body":{"injectables/JsonSchemaService.html":{},"injectables/LocalStorageService.html":{},"interfaces/ValidationResult.html":{}}}],["store(key",{"_index":1063,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stored",{"_index":1054,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["string",{"_index":106,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}}}],["strings",{"_index":1244,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["strip",{"_index":433,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/LibraryRouteService.html":{}}}],["stripformatstringera",{"_index":298,"title":{},"body":{"classes/Datation.html":{}}}],["stripformatstringera(format",{"_index":431,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["stripfragmentroleid",{"_index":955,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["stripfragmentroleid(roleid",{"_index":1011,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["stripping",{"_index":981,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["subscribe(result",{"_index":917,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["such",{"_index":834,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["suffix",{"_index":976,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["sun",{"_index":490,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["supports",{"_index":1689,"title":{},"body":{"index.html":{}}}],["switch",{"_index":597,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/SelectedRange.html":{}}}],["t",{"_index":101,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["table",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["tailregexp",{"_index":810,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["tailregexp.exec(s1",{"_index":813,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["tailregexp.exec(s2",{"_index":821,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["target",{"_index":1243,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["termini",{"_index":376,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["terminus",{"_index":786,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["terms",{"_index":804,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["test",{"_index":1701,"title":{},"body":{"index.html":{}}}],["test(control.value",{"_index":1087,"title":{},"body":{"classes/PasswordValidator.html":{}}}],["testing",{"_index":1209,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["tests",{"_index":1738,"title":{},"body":{"index.html":{}}}],["text",{"_index":151,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}}}],["text.length",{"_index":596,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["text.replace",{"_index":522,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["text.split",{"_index":798,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TokenLocation.html":{}}}],["text.split('\\n",{"_index":1233,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["textcoords",{"_index":174,"title":{"interfaces/TextCoords.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["textlayerpart",{"_index":166,"title":{"interfaces/TextLayerPart.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["textlayerservice",{"_index":1222,"title":{},"body":{"interfaces/SelectedRange.html":{},"coverage.html":{}}}],["textlinetostring(line",{"_index":1379,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["textrange",{"_index":1426,"title":{"classes/TextRange.html":{}},"body":{"classes/TextRange.html":{},"coverage.html":{}}}],["textual",{"_index":764,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TextRange.html":{},"classes/TokenPoint.html":{}}}],["thesauri",{"_index":189,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["thesauriset",{"_index":201,"title":{"interfaces/ThesauriSet.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["thesaurus",{"_index":185,"title":{"interfaces/Thesaurus.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["thesaurusentry",{"_index":186,"title":{"interfaces/ThesaurusEntry.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["thesaurusfilter",{"_index":202,"title":{"interfaces/ThesaurusFilter.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["thesaurusscope",{"_index":146,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["they're",{"_index":1501,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this._ajv",{"_index":908,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this._ajv.addschema(result",{"_index":918,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this._ajv.addschema(schema",{"_index":914,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this._ajv.errorstext",{"_index":920,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this._ajv.getschema(name",{"_index":912,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this._ajv.removeschema(name",{"_index":913,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this._ajv.validate(name",{"_index":919,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this._hash.getmd5(email.trim().tolowercase",{"_index":719,"title":{},"body":{"injectables/GravatarService.html":{}}}],["this._parteditorkeys[typeid",{"_index":1030,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["this._postval[place",{"_index":1171,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this._preval[place",{"_index":1173,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this._romandigits.indexof(digit.touppercase",{"_index":1185,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this._romandigits.indexof(roman[index",{"_index":1189,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this._romansubdigits[i].touppercase",{"_index":1192,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this._romanvalues[i",{"_index":1187,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this._wsregex",{"_index":1224,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this._wsregex.test(c",{"_index":1229,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.a",{"_index":791,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.a.getsortvalue",{"_index":850,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.a.isundefined",{"_index":844,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.a.tostring(datation.stripformatstringera(format",{"_index":861,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.a.value",{"_index":859,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.at",{"_index":1527,"title":{},"body":{"classes/TokenPoint.html":{}}}],["this.b",{"_index":795,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.b.getsortvalue",{"_index":852,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.b.isundefined",{"_index":845,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.b.value",{"_index":860,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.buildgravatarurlfromhash(hash",{"_index":720,"title":{},"body":{"injectables/GravatarService.html":{}}}],["this.copyfrom(datation",{"_index":509,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.day",{"_index":591,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.findfirstdescendantspan(range",{"_index":1376,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.getadjustedselectionbounds(selstart",{"_index":1342,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.getdatetype",{"_index":839,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.geteditorkeyfromparttype(typeid",{"_index":1038,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["this.getendcoordsfromrange",{"_index":1401,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.geterasoptionsforregex(options",{"_index":528,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.getfragmenttypeandrole(roleid",{"_index":1040,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["this.getlines(text",{"_index":1279,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.getparserregex(options",{"_index":545,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.getromandigitvalue(this._romansubdigits[i",{"_index":1198,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this.getspanlocfromid(span.getattribute('id",{"_index":1378,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.getstartcoordsfromrange",{"_index":1398,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.gettokenbounds(line",{"_index":1344,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.getyboundsfromrange(range",{"_index":1387,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.hint",{"_index":593,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.http",{"_index":915,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["this.isapproximate",{"_index":590,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.iscaseequal(roman[index",{"_index":1193,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this.iscentury",{"_index":587,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.isdubious",{"_index":594,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.islower(c1",{"_index":1181,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this.islower(c2",{"_index":1182,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this.islower(digit",{"_index":1186,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this.isspan",{"_index":589,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.isundefined",{"_index":846,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["this.isupper(c1",{"_index":1183,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this.isupper(c2",{"_index":1184,"title":{},"body":{"classes/RomanNumber.html":{}}}],["this.length",{"_index":1454,"title":{},"body":{"classes/TextRange.html":{}}}],["this.month",{"_index":592,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.primary",{"_index":1485,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this.primary.compareto(other.primary",{"_index":1492,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this.primary.integralcompareto(other.primary",{"_index":1503,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this.primary.tostring",{"_index":1489,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this.regexescape(options.adtext",{"_index":526,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.regexescape(options.bctext",{"_index":524,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.renderopeningspan(loc",{"_index":1261,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.rendertokenatend(loc.primary",{"_index":1265,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.rendertokenatend(loc.secondary",{"_index":1291,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.rendertokenatpointstart(loc",{"_index":1272,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.rendertokenatrangestart(loc",{"_index":1273,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.rendertokenatstart(loc",{"_index":1296,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.run",{"_index":1528,"title":{},"body":{"classes/TokenPoint.html":{}}}],["this.secondary",{"_index":1486,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this.secondary.compareto(other.secondary",{"_index":1494,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this.secondary.tostring",{"_index":1490,"title":{},"body":{"classes/TokenLocation.html":{}}}],["this.start",{"_index":1452,"title":{},"body":{"classes/TextRange.html":{}}}],["this.start.tostring",{"_index":1456,"title":{},"body":{"classes/TextRange.html":{}}}],["this.start}×${this.length",{"_index":1457,"title":{},"body":{"classes/TextRange.html":{}}}],["this.stripfragmentroleid(d.roleid",{"_index":1027,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["this.stripfragmentroleid(roleid",{"_index":1024,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["this.textlinetostring(lines[ybounds[0",{"_index":1390,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.textlinetostring(lines[ybounds[1",{"_index":1392,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["this.value",{"_index":586,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["this.x",{"_index":1526,"title":{},"body":{"classes/TokenPoint.html":{}}}],["this.y",{"_index":1525,"title":{},"body":{"classes/TokenPoint.html":{}}}],["this.y}.${this.x",{"_index":1529,"title":{},"body":{"classes/TokenPoint.html":{}}}],["those",{"_index":10,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["throwerror",{"_index":670,"title":{},"body":{"injectables/ErrorService.html":{}}}],["thu",{"_index":494,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["timecreated",{"_index":104,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["timemodified",{"_index":107,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["title",{"_index":120,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["tokbounds",{"_index":1343,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["tokbounds[0",{"_index":1349,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["token",{"_index":171,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["token's",{"_index":1238,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["tokenlocation",{"_index":1217,"title":{"classes/TokenLocation.html":{}},"body":{"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{},"coverage.html":{}}}],["tokenlocation.parse(m[1",{"_index":1361,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["tokenlocation.parse(sb.join",{"_index":1417,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["tokenpoint",{"_index":1216,"title":{"classes/TokenPoint.html":{}},"body":{"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"coverage.html":{}}}],["tokenpoint.parse",{"_index":1476,"title":{},"body":{"classes/TokenLocation.html":{}}}],["tokenpoint.parse(pair[0",{"_index":1483,"title":{},"body":{"classes/TokenLocation.html":{}}}],["tokenpoint.parse(pair[1",{"_index":1484,"title":{},"body":{"classes/TokenLocation.html":{}}}],["tokens",{"_index":170,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["tokenselected",{"_index":1280,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["tokentextlayerline",{"_index":168,"title":{"interfaces/TokenTextLayerLine.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["tolowercase",{"_index":568,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["tools",{"_index":1695,"title":{},"body":{"index.html":{}}}],["top",{"_index":1276,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["toroman",{"_index":1107,"title":{},"body":{"classes/RomanNumber.html":{}}}],["toroman(value",{"_index":1161,"title":{},"body":{"classes/RomanNumber.html":{}}}],["tostring",{"_index":299,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TextRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["tostring(format",{"_index":435,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{}}}],["total",{"_index":100,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["toyear",{"_index":738,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["toyear(useterminusspan",{"_index":766,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["trim",{"_index":518,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["true",{"_index":56,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"classes/TextRange.html":{},"interfaces/ValidationResult.html":{}}}],["try",{"_index":696,"title":{},"body":{"injectables/ErrorService.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["tslib",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":1194,"title":{},"body":{"classes/RomanNumber.html":{}}}],["tue",{"_index":492,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["turn",{"_index":943,"title":{},"body":{"injectables/LibraryRouteService.html":{}}}],["tutorial",{"_index":1672,"title":{},"body":{"index.html":{}}}],["two",{"_index":418,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/SelectedRange.html":{}}}],["type",{"_index":28,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"classes/PasswordValidator.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"injectables/UtilService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeid",{"_index":137,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["typeof",{"_index":1545,"title":{},"body":{"injectables/UtilService.html":{}}}],["types",{"_index":1544,"title":{},"body":{"injectables/UtilService.html":{},"index.html":{}}}],["types/diff",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["types/gravatar",{"_index":715,"title":{},"body":{"injectables/GravatarService.html":{},"dependencies.html":{}}}],["types/rangy",{"_index":1221,"title":{},"body":{"interfaces/SelectedRange.html":{},"dependencies.html":{}}}],["typescript",{"_index":905,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["u+2014",{"_index":413,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["u2014",{"_index":514,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["ui",{"_index":234,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["undefined",{"_index":371,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"classes/TokenLocation.html":{},"injectables/UtilService.html":{},"miscellaneous/enumerations.html":{}}}],["understand",{"_index":1747,"title":{},"body":{"index.html":{}}}],["unicode",{"_index":410,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["unique",{"_index":196,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["unit",{"_index":1737,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":373,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["unless",{"_index":886,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["unsaved",{"_index":38,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["unsuccessful",{"_index":683,"title":{},"body":{"injectables/ErrorService.html":{}}}],["up",{"_index":20,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/LibraryRouteService.html":{},"guards/PendingChangesGuard.html":{}}}],["update",{"_index":1659,"title":{},"body":{"index.html":{}}}],["upgrade",{"_index":1656,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":442,"title":{},"body":{"classes/Datation.html":{}}}],["url",{"_index":706,"title":{},"body":{"injectables/GravatarService.html":{},"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["urlpath",{"_index":891,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["use",{"_index":641,"title":{},"body":{"injectables/EnvService.html":{},"injectables/ErrorService.html":{},"injectables/LocalStorageService.html":{},"classes/RomanNumber.html":{},"index.html":{}}}],["used",{"_index":158,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationResult.html":{}}}],["usefactory",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":1204,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["user",{"_index":37,"title":{"interfaces/User.html":{}},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"injectables/ErrorService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["userfilter",{"_index":263,"title":{"interfaces/UserFilter.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["userid",{"_index":108,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["userinfo",{"_index":243,"title":{"interfaces/UserInfo.html":{}},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["username",{"_index":244,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["uses",{"_index":1421,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["useterminusspan",{"_index":784,"title":{},"body":{"classes/HistoricalDate.html":{}}}],["using",{"_index":664,"title":{},"body":{"injectables/ErrorService.html":{},"interfaces/SelectedRange.html":{},"index.html":{}}}],["usually",{"_index":236,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["utilservice",{"_index":1535,"title":{"injectables/UtilService.html":{}},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["v",{"_index":440,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/RomanNumber.html":{}}}],["valid",{"_index":788,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["validate",{"_index":739,"title":{},"body":{"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["validatedata",{"_index":873,"title":{},"body":{"injectables/JsonSchemaService.html":{}}}],["validatedata(name",{"_index":896,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["validation",{"_index":868,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["validationresult",{"_index":899,"title":{"interfaces/ValidationResult.html":{}},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["validator",{"_index":881,"title":{},"body":{"injectables/JsonSchemaService.html":{},"interfaces/ValidationResult.html":{}}}],["value",{"_index":110,"title":{},"body":{"interfaces/DataPage.html":{},"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"injectables/EnvService.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"injectables/GravatarService.html":{},"interfaces/HasVersion.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"injectables/JsonSchemaService.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LibraryRouteService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"classes/TextRange.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":631,"title":{},"body":{"injectables/EnvService.html":{}}}],["variable",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":642,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/EnvService.html":{},"miscellaneous/variables.html":{}}}],["versioned",{"_index":721,"title":{},"body":{"interfaces/HasVersion.html":{}}}],["via",{"_index":1740,"title":{},"body":{"index.html":{}}}],["video",{"_index":1668,"title":{},"body":{"index.html":{}}}],["view",{"_index":1663,"title":{},"body":{"index.html":{}}}],["views",{"_index":159,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["viii",{"_index":1178,"title":{},"body":{"classes/RomanNumber.html":{}}}],["viiii",{"_index":1170,"title":{},"body":{"classes/RomanNumber.html":{}}}],["visit",{"_index":1751,"title":{},"body":{"index.html":{}}}],["visitnodes(node",{"_index":1362,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["visitor",{"_index":1363,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["visitor(node",{"_index":1365,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["void",{"_index":323,"title":{},"body":{"classes/Datation.html":{},"classes/HistoricalDate.html":{},"injectables/JsonSchemaService.html":{},"injectables/LocalStorageService.html":{},"interfaces/SelectedRange.html":{},"interfaces/ValidationResult.html":{}}}],["w",{"_index":465,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["w/w",{"_index":584,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["want",{"_index":391,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["warning",{"_index":58,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"guards/PendingChangesGuard.html":{}}}],["way",{"_index":241,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["web",{"_index":1706,"title":{},"body":{"index.html":{}}}],["wed",{"_index":493,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"miscellaneous/variables.html":{}}}],["weekday",{"_index":453,"title":{},"body":{"classes/Datation.html":{}}}],["well",{"_index":1699,"title":{},"body":{"index.html":{}}}],["went",{"_index":687,"title":{},"body":{"injectables/ErrorService.html":{}}}],["whereas",{"_index":1488,"title":{},"body":{"classes/TokenLocation.html":{}}}],["whitespace",{"_index":467,"title":{},"body":{"classes/Datation.html":{}}}],["whitespaces",{"_index":420,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["whose",{"_index":163,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["window",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.__env",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window['__env'][key",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":63,"title":{},"body":{"interfaces/ComponentCanDeactivate.html":{},"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"guards/PendingChangesGuard.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["without",{"_index":644,"title":{},"body":{"injectables/EnvService.html":{}}}],["workspace",{"_index":1688,"title":{},"body":{"index.html":{}}}],["workspace@latest",{"_index":1653,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":109,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["wrong",{"_index":688,"title":{},"body":{"injectables/ErrorService.html":{}}}],["x",{"_index":175,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"classes/RomanNumber.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["x${this.run",{"_index":1530,"title":{},"body":{"classes/TokenPoint.html":{}}}],["xc",{"_index":1122,"title":{},"body":{"classes/RomanNumber.html":{}}}],["xl",{"_index":1123,"title":{},"body":{"classes/RomanNumber.html":{}}}],["y",{"_index":169,"title":{},"body":{"interfaces/DataPage.html":{},"interfaces/ErrorWrapper.html":{},"interfaces/ExistResult.html":{},"interfaces/FacetDefinition.html":{},"interfaces/FlagDefinition.html":{},"interfaces/Fragment.html":{},"interfaces/HasVersion.html":{},"interfaces/Item.html":{},"interfaces/ItemFilter.html":{},"interfaces/ItemInfo.html":{},"interfaces/LayerHint.html":{},"interfaces/LayerPartInfo.html":{},"interfaces/LoginCredentials.html":{},"interfaces/LoginResult.html":{},"interfaces/Part.html":{},"interfaces/PartDefinition.html":{},"interfaces/PartEditorKeys.html":{},"interfaces/PartGroup.html":{},"interfaces/PartGroupKey.html":{},"interfaces/PartTypeIds.html":{},"interfaces/PasswordChange.html":{},"interfaces/RegistrationModel.html":{},"interfaces/SelectedRange.html":{},"interfaces/TextCoords.html":{},"interfaces/TextLayerPart.html":{},"interfaces/ThesauriSet.html":{},"interfaces/Thesaurus.html":{},"interfaces/ThesaurusEntry.html":{},"interfaces/ThesaurusFilter.html":{},"classes/TokenPoint.html":{},"interfaces/TokenTextLayerLine.html":{},"interfaces/User.html":{},"interfaces/UserFilter.html":{},"interfaces/UserInfo.html":{}}}],["y.x",{"_index":1407,"title":{},"body":{"interfaces/SelectedRange.html":{},"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["y.x@a",{"_index":1478,"title":{},"body":{"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["y.x@axr",{"_index":1477,"title":{},"body":{"classes/TokenLocation.html":{},"classes/TokenPoint.html":{}}}],["ybounds",{"_index":1386,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["ybounds[0",{"_index":1394,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["ybounds[1",{"_index":1395,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["year",{"_index":330,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{},"classes/HistoricalDate.html":{},"interfaces/HistoricalDateModel.html":{}}}],["year/span",{"_index":534,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["years",{"_index":353,"title":{},"body":{"classes/Datation.html":{}}}],["ymax",{"_index":1324,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["ymin",{"_index":1323,"title":{},"body":{"interfaces/SelectedRange.html":{}}}],["z]{3,})\\\\s",{"_index":533,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["za",{"_index":532,"title":{},"body":{"classes/Datation.html":{},"interfaces/DatationFormatOptions.html":{},"interfaces/DatationModel.html":{}}}],["zone.js",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1761,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ComponentCanDeactivate.html":{"url":"interfaces/ComponentCanDeactivate.html","title":"interface - ComponentCanDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentCanDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/guards/pending-changes.guard.ts\n        \n\n            \n                Description\n            \n            \n                Interface implemented by those components which require a pending changes\nguard. The implementor must keep its canDeactivate property up to date,\nso that it reflects its dirty state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n// https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n\n/**\n * Interface implemented by those components which require a pending changes\n * guard. The implementor must keep its canDeactivate property up to date,\n * so that it reflects its dirty state.\n */\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PendingChangesGuard\n  implements CanDeactivate {\n  canDeactivate(\n    component: ComponentCanDeactivate\n  ): boolean | Observable {\n    // if there are no pending changes, just allow deactivation; else confirm first\n    return !component || component.canDeactivate()\n      ? true\n      : // NOTE: this warning message will only be shown when navigating\n        // elsewhere within your angular app; when navigating away from your\n        // angular app, the browser will show a generic warning message.\n        // see http://stackoverflow.com/a/42207299/7307355\n        confirm(\n          'Warning: your changes have not been saved. ' +\n            'Press Cancel to go back and save, OK to continue.'\n        );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/core/src/lib/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataPage.html":{"url":"interfaces/DataPage.html","title":"interface - DataPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                A page of data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        pageCount\n                                \n                                \n                                        pageNumber\n                                \n                                \n                                        pageSize\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Datation.html":{"url":"classes/Datation.html","title":"class - Datation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Datation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/datation.ts\n        \n\n            \n                Description\n            \n            \n                Single datation point in a historical date.\n\n            \n\n\n            \n                Implements\n            \n            \n                            DatationModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                hint\n                            \n                            \n                                    Public\n                                isApproximate\n                            \n                            \n                                    Public\n                                isCentury\n                            \n                            \n                                    Public\n                                isDubious\n                            \n                            \n                                    Public\n                                isSpan\n                            \n                            \n                                    Public\n                                month\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                copyFrom\n                            \n                            \n                                    Public\n                                getCentury\n                            \n                            \n                                    Static\n                                getErasOptionsForRegex\n                            \n                            \n                                    Private\n                                    Static\n                                getParserRegex\n                            \n                            \n                                    Public\n                                getSortValue\n                            \n                            \n                                    Public\n                                getSpanEnd\n                            \n                            \n                                    Public\n                                isUndefined\n                            \n                            \n                                    Private\n                                matchTokenAt\n                            \n                            \n                                    Static\n                                parse\n                            \n                            \n                                    Private\n                                parseFormatString\n                            \n                            \n                                    Private\n                                    Static\n                                regexEscape\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Static\n                                sanitizeHint\n                            \n                            \n                                    Static\n                                stripFormatStringEra\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datation: DatationModel)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/datation.ts:55\n                            \n                        \n\n                \n                    \n                            Create a new datation, optionally setting its data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        datation\n                                                  \n                                                        \n                                                                        DatationModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The optional data to be copied into the newly created datation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isApproximate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isCentury\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDubious\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSpan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            month\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/datation.ts:48\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            copyFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copyFrom(datation: DatationModel)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:247\n                \n            \n\n\n            \n                \n                    Copy data from the specified source datatation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    datation\n                                    \n                                                DatationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source datation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCentury\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCentury()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:311\n                \n            \n\n\n            \n                \n                    Get the century number corresponding this datation.\nThis function returns 0 if the datation is null, or the century number,\nless than 0 if B.C. The result is based on the century value, if\nthis is a century datation, or on the year, if this is not a century\ndatation (e.g. -5 for 480 B.C., +1 for 31 A.D.).\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getErasOptionsForRegex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErasOptionsForRegex(options: DatationFormatOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:103\n                \n            \n\n\n            \n                \n                    Get BC and AD patterns for matching.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                DatationFormatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DATATION_FORMAT_OPTIONS\n                                    \n\n                                    \n                                        The datation format options.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getParserRegex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParserRegex(options: DatationFormatOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                DatationFormatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RegExp\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSortValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSortValue()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:270\n                \n            \n\n\n            \n                \n                    Get a sort value from this datation.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSpanEnd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpanEnd()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:297\n                \n            \n\n\n            \n                \n                    Get the 2-years span end value from this datation.\nA span year is always represented with its beginning year: e.g. -776/5\nis -776 with span, and 56/7 is 56 with span. This method returns the end year\nfor a span, i.e. in the above samples -775 and 57 respectively. If this datation\nis not a span, the function just returns the unique year value.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isUndefined\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUndefined()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:263\n                \n            \n\n\n            \n                \n                    True if this datation is undefined. A datation is undefined when\nits value is 0. Undefined datations are used as unknown points in a range\nfor termini ante/post.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchTokenAt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchTokenAt(token: string, text: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(text: string, options: DatationFormatOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:144\n                \n            \n\n\n            \n                \n                    Parse the specified text representing a datation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The text to be parsed.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                DatationFormatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DATATION_FORMAT_OPTIONS\n                                    \n\n                                    \n                                        The formatter options.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Datation\n\n                    \n                    \n                        The parsed datation, or undefined if invalid or empty.\nNote that here we return undefined to mean a non-existing point.\nWe do not want a non-existing point to be represented as a null,\nas this would be included as in the JSON code when serializing.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseFormatString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseFormatString(format: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            regexEscape\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    regexEscape(text: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:233\n                \n            \n\n\n            \n                \n                    Reset this datation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sanitizeHint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sanitizeHint(hint: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:79\n                \n            \n\n\n            \n                \n                    Sanitize the hint text representing a Datation's hint so that it does not\ninclude the reserved sequence -- (which gets replaced with Unicode EM\nspace U+2014), nor the braces. This is because the double dashes are used\nto separate two datations, and braces to mark a hint in a datation.\nAlso, the whitespaces are all flattened to simple spaces, and normalized\n(no whitespaces at start/end and no sequence of whitespaces).\nIf the resulting sanitized string is empty, or it was null when received,\nnull is returned.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The hint or null/undefined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The sanitized hint or undefined.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            stripFormatStringEra\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripFormatStringEra(format: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:212\n                \n            \n\n\n            \n                \n                    Strip any era code from the specified datation format string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The format string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString(format: string, options: DatationFormatOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/datation.ts:435\n                \n            \n\n\n            \n                \n                    Convert this datation to a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'G'\n                                    \n\n                                    \n                                        The format string, which can include any of the following:\nv = year or century value, lowercase\nV = year or century value, uppercase\nc = century, lowercase\nC = century, uppercase\na or A = 'about' marker when present\np or P = 'perhaps' marker when present\nd = day number when present\ndd = 2-digits (0-padded at left) day number when present\nddd = weekday name when present\nM = month number when present\nMM = 2-digits (0-padded at left) month number when present\nMMM = month name when present\ne = era\nE = era, all uppercase\nea = era, only if ante Christum natum\nep = era, only if post Christum natum\nEa = era all uppercase, only if ante Christum natum\nEp = era all uppercase, only if post Christum natum\nh or H = hint when present\nw or W = smart whitespace (appended only when left char if any\nis not a whitespace)\ns or S = sort value\ng = generic: equal to awdwMMMwvwewpwh\nG = generic uppercase: equal to AwdwMMMwVwewPwH\nga = generic ante Christum: era expressed only when post Christum\nnatum. Equal to awdwMMMwvwepwpwh\nGa = generic uppercase ante Christum: equal to awdwMMMwvwepwpwh\ngp = generic post Christum: era expressed only when ante Christum\nnatum. Equal to awdwMMMwvweawpwh\nGp = generic uppercase post Christum: equal to awdwMMMwvweawpwh\ni = generic with implicit (=not expressed) era: equal to awdwMMMwvwpwh\nI = generic uppercase with implicit (=not expressed) era: equal to\nAwdwMMMwVwPwH\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                DatationFormatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DATATION_FORMAT_OPTIONS\n                                    \n\n                                    \n                                        The options.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RomanNumber } from './roman-number';\n\n/**\n * Interface implemented by a single datation point in a historical date,\n * as returned from the server.\n */\nexport interface DatationModel {\n  value: number;\n  isCentury: boolean;\n  isSpan: boolean;\n  isApproximate: boolean;\n  isDubious: boolean;\n  day: number;\n  month: number;\n  hint: string;\n}\n\n/**\n * Options for formatting a datation.\n */\nexport interface DatationFormatOptions {\n  aboutText: string;\n  bcText: string;\n  adText: string;\n  dayNames: string[];\n  monthNames: string[];\n}\n\n/**\n * Default options for formatting a datation.\n */\nexport const DATATION_FORMAT_OPTIONS: DatationFormatOptions = {\n  aboutText: 'c.',\n  bcText: 'BC',\n  adText: 'AD',\n  dayNames: [\n    'sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'\n  ],\n  monthNames: [\n    'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'\n  ]\n};\n\n/**\n * Single datation point in a historical date.\n */\nexport class Datation implements DatationModel {\n  public value: number;\n  public isCentury: boolean;\n  public isSpan: boolean;\n  public isApproximate: boolean;\n  public isDubious: boolean;\n  public day: number;\n  public month: number;\n  public hint: string;\n\n  /**\n   * Create a new datation, optionally setting its data.\n   * @param datation The optional data to be copied into the newly created datation.\n   */\n  constructor(datation: DatationModel = null) {\n    if (datation) {\n      this.copyFrom(datation);\n    }\n  }\n\n  /**\n   * Sanitize the hint text representing a Datation's hint so that it does not\n   * include the reserved sequence -- (which gets replaced with Unicode EM\n   * space U+2014), nor the braces. This is because the double dashes are used\n   * to separate two datations, and braces to mark a hint in a datation.\n   * Also, the whitespaces are all flattened to simple spaces, and normalized\n   * (no whitespaces at start/end and no sequence of whitespaces).\n   * If the resulting sanitized string is empty, or it was null when received,\n   * null is returned.\n   * @param hint The hint or null/undefined.\n   * @returns The sanitized hint or undefined.\n   */\n  public static sanitizeHint(hint: string): string {\n    if (!hint || !hint.trim()) {\n      return undefined;\n    }\n\n    // replace reserved characters\n    hint = hint.replace('--', '\\u2014');\n    hint = hint.replace('{', '');\n    hint = hint.replace('}', '');\n\n    // flatten and normalize whitespaces\n    const s = hint.replace(/\\s+/g, ' ').trim();\n    return s ? s : undefined;\n  }\n\n  private static regexEscape(text: string): string {\n    // https://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    return text.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  /**\n   * Get BC and AD patterns for matching.\n   * @param options The datation format options.\n   */\n  public static getErasOptionsForRegex(options: DatationFormatOptions\n    = DATATION_FORMAT_OPTIONS): string[] {\n    return [\n      options.bcText ? this.regexEscape(options.bcText) : 'BC',\n      options.adText ? this.regexEscape(options.adText) : 'AD'\n    ]\n  }\n\n  private static getParserRegex(options: DatationFormatOptions): RegExp {\n    const bcad = this.getErasOptionsForRegex(options);\n\n    return new RegExp(\n      // about (1)\n      '(c\\\\.)?\\\\s*' +\n      // day (2)\n      '(?:([0123]\\\\d?)\\\\s+)?' +\n      // month (3)\n      '(?:([a-zA-Z]{3,})\\\\s+)?' +\n      // year/span (4,5)\n      '(?:' +\n      '(?:(\\\\d+)(?:\\\\s*/\\\\s*(\\\\d+))?)|' +\n      // century (6)\n      '([ivxIVX]+)' +\n      ')\\\\s*' +\n      // era (7)\n      '(' + bcad[0] + '|' + bcad[1] + ')?' +\n      // perhaps (8)\n      '(\\\\s*\\\\?)?' +\n      // hint (9)\n      '(?:\\\\s*\\\\{([^}]+)\\\\})?', 'i');\n  }\n\n  /**\n   * Parse the specified text representing a datation.\n   * @param text The text to be parsed.\n   * @param options The formatter options.\n   * @returns The parsed datation, or undefined if invalid or empty.\n   * Note that here we return undefined to mean a non-existing point.\n   * We do not want a non-existing point to be represented as a null,\n   * as this would be included as in the JSON code when serializing.\n   */\n  public static parse(text: string,\n    options: DatationFormatOptions = DATATION_FORMAT_OPTIONS): Datation {\n    if (!text) {\n      return undefined;\n    }\n    const datation = new Datation();\n    const datationRegex = this.getParserRegex(options);\n    const m = datationRegex.exec(text);\n    if (!m) {\n      return undefined;\n    }\n\n    // about\n    if (m[1]) {\n      datation.isApproximate = true;\n    }\n\n    // day\n    if (m[2]) {\n      datation.day = parseInt(m[2], 10);\n    }\n\n    // month\n    if (m[3]) {\n      const lowerMonth = m[3].toLowerCase();\n      const i = options.monthNames.findIndex(name =>\n        name.toLowerCase() === lowerMonth);\n      if (i > -1) {\n        datation.month = i + 1;\n      }\n    }\n\n    // year, span\n    if (m[4]) {\n      datation.value = parseInt(m[4], 10);\n      if (m[5]) {\n        datation.isSpan = true;\n      }\n    } else {\n      datation.value = RomanNumber.fromRoman(m[6].toUpperCase());\n      datation.isCentury = true;\n    }\n\n    // era\n    if (m[7]) {\n      const era = m[7].replace(' ', '').toLowerCase();\n      if (era === options.bcText.toLowerCase()) {\n        datation.value = -datation.value;\n      }\n    }\n\n    // dubious\n    if (m[8]) {\n      datation.isDubious = true;\n    }\n\n    // hint\n    if (m[9]) {\n      datation.hint = Datation.sanitizeHint(m[9]);\n    }\n\n    return datation;\n  }\n\n  /**\n   * Strip any era code from the specified datation format string.\n   * @param format The format string.\n   */\n  public static stripFormatStringEra(format: string): string {\n    if (!format) {\n      return 'i';\n    }\n\n    // convert ga gp Ga Gp into simple g G\n    format = format.replace(new RegExp('([gG])[ap]', 'gi'), '$1');\n\n    // replace g/G with i/I\n    format = format.replace('g', 'i');\n    format = format.replace('G', 'I');\n\n    // remove ea ep Ea Ep with preceding w/W if any\n    format = format.replace(new RegExp('[wW]?[eE][ap]?', 'gi'), '');\n\n    return format;\n  }\n\n  /**\n   * Reset this datation.\n   */\n  public reset() {\n    this.value = 0;\n    this.isCentury = false;\n    this.isSpan = false;\n    this.isApproximate = false;\n    this.day = 0;\n    this.month = 0;\n    this.hint = undefined;\n  }\n\n  /**\n   * Copy data from the specified source datatation.\n   * @param datation The source datation.\n   */\n  public copyFrom(datation: DatationModel) {\n    this.value = datation.value;\n    this.isCentury = datation.isCentury;\n    this.isSpan = datation.isSpan;\n    this.isApproximate = datation.isApproximate;\n    this.isDubious = datation.isDubious;\n    this.day = datation.day;\n    this.month = datation.month;\n    this.hint = datation.hint? datation.hint : undefined;\n  }\n\n  /**\n   * True if this datation is undefined. A datation is undefined when\n   * its value is 0. Undefined datations are used as unknown points in a range\n   * for termini ante/post.\n   */\n  public isUndefined(): boolean {\n    return !this.value;\n  }\n\n  /**\n   * Get a sort value from this datation.\n   */\n  public getSortValue(): number {\n    let result: number;\n\n    if (this.isCentury) {\n      result = this.value * 100 + (this.value  0 && this.month  0 && this.day  text.length) {\n      return false;\n    }\n\n    for (let i = 0; i  {\n      switch (token) {\n        case 'v':\n        case 'V':\n          // year or century\n          if (this.isCentury) {\n            sb.push(token === 'v' ?\n              RomanNumber.toRoman(Math.abs(this.value)).toLowerCase() :\n              RomanNumber.toRoman(Math.abs(this.value)).toUpperCase());\n          } else {\n            const year = Math.abs(this.value);\n            sb.push(year.toString());\n            if (this.isSpan) {\n              sb.push(`/${year + (this.value  0) {\n            sb.push(this.day.toString());\n          }\n          break;\n        case 'dd':\n          if (this.day > 0) {\n            sb.push(this.day.toString().padStart(2, '0'));\n          }\n          break;\n        case 'ddd':\n          if (this.day > 0) {\n            const date = new Date(this.value, this.month, this.day);\n            const dow = date.getDay();\n            sb.push(options.dayNames[dow]);\n          }\n          break;\n\n        case 'M':\n          if (this.month > 0) {\n            sb.push(this.month.toString());\n          }\n          break;\n        case 'MM':\n          if (this.month > 0) {\n            sb.push(this.month.toString().padStart(2, '0'));\n          }\n          break;\n        case 'MMM':\n          if (this.month > 0) {\n            sb.push(options.monthNames[this.month - 1]);\n          }\n          break;\n\n        case 'e':\n          sb.push(this.value  0) {\n            sb.push(options.adText);\n          }\n          break;\n\n        case 'h':\n        case 'H':\n          if (this.hint) {\n            sb.push(` {${this.hint}}`);\n          }\n          break;\n\n        case 'w':\n        case 'W':\n          if (sb.length > 0) {\n            const last = sb[sb.length - 1];\n            if (!last.endsWith(' ')) {\n              sb.push(' ');\n            }\n          }\n          break;\n\n        case 's':\n        case 'S':\n          sb.push(this.getSortValue().toString());\n          break;\n\n        default:\n          // literal\n          sb.push(token);\n          break;\n      }\n    });\n    return sb.join('').trim().replace(new RegExp('\\\\s+', 'g'), ' ');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatationFormatOptions.html":{"url":"interfaces/DatationFormatOptions.html","title":"interface - DatationFormatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatationFormatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/datation.ts\n        \n\n            \n                Description\n            \n            \n                Options for formatting a datation.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aboutText\n                                \n                                \n                                        adText\n                                \n                                \n                                        bcText\n                                \n                                \n                                        dayNames\n                                \n                                \n                                        monthNames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aboutText\n                                    \n                                \n                                \n                                    \n                                        aboutText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adText\n                                    \n                                \n                                \n                                    \n                                        adText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bcText\n                                    \n                                \n                                \n                                    \n                                        bcText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dayNames\n                                    \n                                \n                                \n                                    \n                                        dayNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monthNames\n                                    \n                                \n                                \n                                    \n                                        monthNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RomanNumber } from './roman-number';\n\n/**\n * Interface implemented by a single datation point in a historical date,\n * as returned from the server.\n */\nexport interface DatationModel {\n  value: number;\n  isCentury: boolean;\n  isSpan: boolean;\n  isApproximate: boolean;\n  isDubious: boolean;\n  day: number;\n  month: number;\n  hint: string;\n}\n\n/**\n * Options for formatting a datation.\n */\nexport interface DatationFormatOptions {\n  aboutText: string;\n  bcText: string;\n  adText: string;\n  dayNames: string[];\n  monthNames: string[];\n}\n\n/**\n * Default options for formatting a datation.\n */\nexport const DATATION_FORMAT_OPTIONS: DatationFormatOptions = {\n  aboutText: 'c.',\n  bcText: 'BC',\n  adText: 'AD',\n  dayNames: [\n    'sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'\n  ],\n  monthNames: [\n    'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'\n  ]\n};\n\n/**\n * Single datation point in a historical date.\n */\nexport class Datation implements DatationModel {\n  public value: number;\n  public isCentury: boolean;\n  public isSpan: boolean;\n  public isApproximate: boolean;\n  public isDubious: boolean;\n  public day: number;\n  public month: number;\n  public hint: string;\n\n  /**\n   * Create a new datation, optionally setting its data.\n   * @param datation The optional data to be copied into the newly created datation.\n   */\n  constructor(datation: DatationModel = null) {\n    if (datation) {\n      this.copyFrom(datation);\n    }\n  }\n\n  /**\n   * Sanitize the hint text representing a Datation's hint so that it does not\n   * include the reserved sequence -- (which gets replaced with Unicode EM\n   * space U+2014), nor the braces. This is because the double dashes are used\n   * to separate two datations, and braces to mark a hint in a datation.\n   * Also, the whitespaces are all flattened to simple spaces, and normalized\n   * (no whitespaces at start/end and no sequence of whitespaces).\n   * If the resulting sanitized string is empty, or it was null when received,\n   * null is returned.\n   * @param hint The hint or null/undefined.\n   * @returns The sanitized hint or undefined.\n   */\n  public static sanitizeHint(hint: string): string {\n    if (!hint || !hint.trim()) {\n      return undefined;\n    }\n\n    // replace reserved characters\n    hint = hint.replace('--', '\\u2014');\n    hint = hint.replace('{', '');\n    hint = hint.replace('}', '');\n\n    // flatten and normalize whitespaces\n    const s = hint.replace(/\\s+/g, ' ').trim();\n    return s ? s : undefined;\n  }\n\n  private static regexEscape(text: string): string {\n    // https://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    return text.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  /**\n   * Get BC and AD patterns for matching.\n   * @param options The datation format options.\n   */\n  public static getErasOptionsForRegex(options: DatationFormatOptions\n    = DATATION_FORMAT_OPTIONS): string[] {\n    return [\n      options.bcText ? this.regexEscape(options.bcText) : 'BC',\n      options.adText ? this.regexEscape(options.adText) : 'AD'\n    ]\n  }\n\n  private static getParserRegex(options: DatationFormatOptions): RegExp {\n    const bcad = this.getErasOptionsForRegex(options);\n\n    return new RegExp(\n      // about (1)\n      '(c\\\\.)?\\\\s*' +\n      // day (2)\n      '(?:([0123]\\\\d?)\\\\s+)?' +\n      // month (3)\n      '(?:([a-zA-Z]{3,})\\\\s+)?' +\n      // year/span (4,5)\n      '(?:' +\n      '(?:(\\\\d+)(?:\\\\s*/\\\\s*(\\\\d+))?)|' +\n      // century (6)\n      '([ivxIVX]+)' +\n      ')\\\\s*' +\n      // era (7)\n      '(' + bcad[0] + '|' + bcad[1] + ')?' +\n      // perhaps (8)\n      '(\\\\s*\\\\?)?' +\n      // hint (9)\n      '(?:\\\\s*\\\\{([^}]+)\\\\})?', 'i');\n  }\n\n  /**\n   * Parse the specified text representing a datation.\n   * @param text The text to be parsed.\n   * @param options The formatter options.\n   * @returns The parsed datation, or undefined if invalid or empty.\n   * Note that here we return undefined to mean a non-existing point.\n   * We do not want a non-existing point to be represented as a null,\n   * as this would be included as in the JSON code when serializing.\n   */\n  public static parse(text: string,\n    options: DatationFormatOptions = DATATION_FORMAT_OPTIONS): Datation {\n    if (!text) {\n      return undefined;\n    }\n    const datation = new Datation();\n    const datationRegex = this.getParserRegex(options);\n    const m = datationRegex.exec(text);\n    if (!m) {\n      return undefined;\n    }\n\n    // about\n    if (m[1]) {\n      datation.isApproximate = true;\n    }\n\n    // day\n    if (m[2]) {\n      datation.day = parseInt(m[2], 10);\n    }\n\n    // month\n    if (m[3]) {\n      const lowerMonth = m[3].toLowerCase();\n      const i = options.monthNames.findIndex(name =>\n        name.toLowerCase() === lowerMonth);\n      if (i > -1) {\n        datation.month = i + 1;\n      }\n    }\n\n    // year, span\n    if (m[4]) {\n      datation.value = parseInt(m[4], 10);\n      if (m[5]) {\n        datation.isSpan = true;\n      }\n    } else {\n      datation.value = RomanNumber.fromRoman(m[6].toUpperCase());\n      datation.isCentury = true;\n    }\n\n    // era\n    if (m[7]) {\n      const era = m[7].replace(' ', '').toLowerCase();\n      if (era === options.bcText.toLowerCase()) {\n        datation.value = -datation.value;\n      }\n    }\n\n    // dubious\n    if (m[8]) {\n      datation.isDubious = true;\n    }\n\n    // hint\n    if (m[9]) {\n      datation.hint = Datation.sanitizeHint(m[9]);\n    }\n\n    return datation;\n  }\n\n  /**\n   * Strip any era code from the specified datation format string.\n   * @param format The format string.\n   */\n  public static stripFormatStringEra(format: string): string {\n    if (!format) {\n      return 'i';\n    }\n\n    // convert ga gp Ga Gp into simple g G\n    format = format.replace(new RegExp('([gG])[ap]', 'gi'), '$1');\n\n    // replace g/G with i/I\n    format = format.replace('g', 'i');\n    format = format.replace('G', 'I');\n\n    // remove ea ep Ea Ep with preceding w/W if any\n    format = format.replace(new RegExp('[wW]?[eE][ap]?', 'gi'), '');\n\n    return format;\n  }\n\n  /**\n   * Reset this datation.\n   */\n  public reset() {\n    this.value = 0;\n    this.isCentury = false;\n    this.isSpan = false;\n    this.isApproximate = false;\n    this.day = 0;\n    this.month = 0;\n    this.hint = undefined;\n  }\n\n  /**\n   * Copy data from the specified source datatation.\n   * @param datation The source datation.\n   */\n  public copyFrom(datation: DatationModel) {\n    this.value = datation.value;\n    this.isCentury = datation.isCentury;\n    this.isSpan = datation.isSpan;\n    this.isApproximate = datation.isApproximate;\n    this.isDubious = datation.isDubious;\n    this.day = datation.day;\n    this.month = datation.month;\n    this.hint = datation.hint? datation.hint : undefined;\n  }\n\n  /**\n   * True if this datation is undefined. A datation is undefined when\n   * its value is 0. Undefined datations are used as unknown points in a range\n   * for termini ante/post.\n   */\n  public isUndefined(): boolean {\n    return !this.value;\n  }\n\n  /**\n   * Get a sort value from this datation.\n   */\n  public getSortValue(): number {\n    let result: number;\n\n    if (this.isCentury) {\n      result = this.value * 100 + (this.value  0 && this.month  0 && this.day  text.length) {\n      return false;\n    }\n\n    for (let i = 0; i  {\n      switch (token) {\n        case 'v':\n        case 'V':\n          // year or century\n          if (this.isCentury) {\n            sb.push(token === 'v' ?\n              RomanNumber.toRoman(Math.abs(this.value)).toLowerCase() :\n              RomanNumber.toRoman(Math.abs(this.value)).toUpperCase());\n          } else {\n            const year = Math.abs(this.value);\n            sb.push(year.toString());\n            if (this.isSpan) {\n              sb.push(`/${year + (this.value  0) {\n            sb.push(this.day.toString());\n          }\n          break;\n        case 'dd':\n          if (this.day > 0) {\n            sb.push(this.day.toString().padStart(2, '0'));\n          }\n          break;\n        case 'ddd':\n          if (this.day > 0) {\n            const date = new Date(this.value, this.month, this.day);\n            const dow = date.getDay();\n            sb.push(options.dayNames[dow]);\n          }\n          break;\n\n        case 'M':\n          if (this.month > 0) {\n            sb.push(this.month.toString());\n          }\n          break;\n        case 'MM':\n          if (this.month > 0) {\n            sb.push(this.month.toString().padStart(2, '0'));\n          }\n          break;\n        case 'MMM':\n          if (this.month > 0) {\n            sb.push(options.monthNames[this.month - 1]);\n          }\n          break;\n\n        case 'e':\n          sb.push(this.value  0) {\n            sb.push(options.adText);\n          }\n          break;\n\n        case 'h':\n        case 'H':\n          if (this.hint) {\n            sb.push(` {${this.hint}}`);\n          }\n          break;\n\n        case 'w':\n        case 'W':\n          if (sb.length > 0) {\n            const last = sb[sb.length - 1];\n            if (!last.endsWith(' ')) {\n              sb.push(' ');\n            }\n          }\n          break;\n\n        case 's':\n        case 'S':\n          sb.push(this.getSortValue().toString());\n          break;\n\n        default:\n          // literal\n          sb.push(token);\n          break;\n      }\n    });\n    return sb.join('').trim().replace(new RegExp('\\\\s+', 'g'), ' ');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatationModel.html":{"url":"interfaces/DatationModel.html","title":"interface - DatationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/datation.ts\n        \n\n            \n                Description\n            \n            \n                Interface implemented by a single datation point in a historical date,\nas returned from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        hint\n                                \n                                \n                                        isApproximate\n                                \n                                \n                                        isCentury\n                                \n                                \n                                        isDubious\n                                \n                                \n                                        isSpan\n                                \n                                \n                                        month\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isApproximate\n                                    \n                                \n                                \n                                    \n                                        isApproximate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCentury\n                                    \n                                \n                                \n                                    \n                                        isCentury:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDubious\n                                    \n                                \n                                \n                                    \n                                        isDubious:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSpan\n                                    \n                                \n                                \n                                    \n                                        isSpan:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RomanNumber } from './roman-number';\n\n/**\n * Interface implemented by a single datation point in a historical date,\n * as returned from the server.\n */\nexport interface DatationModel {\n  value: number;\n  isCentury: boolean;\n  isSpan: boolean;\n  isApproximate: boolean;\n  isDubious: boolean;\n  day: number;\n  month: number;\n  hint: string;\n}\n\n/**\n * Options for formatting a datation.\n */\nexport interface DatationFormatOptions {\n  aboutText: string;\n  bcText: string;\n  adText: string;\n  dayNames: string[];\n  monthNames: string[];\n}\n\n/**\n * Default options for formatting a datation.\n */\nexport const DATATION_FORMAT_OPTIONS: DatationFormatOptions = {\n  aboutText: 'c.',\n  bcText: 'BC',\n  adText: 'AD',\n  dayNames: [\n    'sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'\n  ],\n  monthNames: [\n    'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'\n  ]\n};\n\n/**\n * Single datation point in a historical date.\n */\nexport class Datation implements DatationModel {\n  public value: number;\n  public isCentury: boolean;\n  public isSpan: boolean;\n  public isApproximate: boolean;\n  public isDubious: boolean;\n  public day: number;\n  public month: number;\n  public hint: string;\n\n  /**\n   * Create a new datation, optionally setting its data.\n   * @param datation The optional data to be copied into the newly created datation.\n   */\n  constructor(datation: DatationModel = null) {\n    if (datation) {\n      this.copyFrom(datation);\n    }\n  }\n\n  /**\n   * Sanitize the hint text representing a Datation's hint so that it does not\n   * include the reserved sequence -- (which gets replaced with Unicode EM\n   * space U+2014), nor the braces. This is because the double dashes are used\n   * to separate two datations, and braces to mark a hint in a datation.\n   * Also, the whitespaces are all flattened to simple spaces, and normalized\n   * (no whitespaces at start/end and no sequence of whitespaces).\n   * If the resulting sanitized string is empty, or it was null when received,\n   * null is returned.\n   * @param hint The hint or null/undefined.\n   * @returns The sanitized hint or undefined.\n   */\n  public static sanitizeHint(hint: string): string {\n    if (!hint || !hint.trim()) {\n      return undefined;\n    }\n\n    // replace reserved characters\n    hint = hint.replace('--', '\\u2014');\n    hint = hint.replace('{', '');\n    hint = hint.replace('}', '');\n\n    // flatten and normalize whitespaces\n    const s = hint.replace(/\\s+/g, ' ').trim();\n    return s ? s : undefined;\n  }\n\n  private static regexEscape(text: string): string {\n    // https://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    return text.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  /**\n   * Get BC and AD patterns for matching.\n   * @param options The datation format options.\n   */\n  public static getErasOptionsForRegex(options: DatationFormatOptions\n    = DATATION_FORMAT_OPTIONS): string[] {\n    return [\n      options.bcText ? this.regexEscape(options.bcText) : 'BC',\n      options.adText ? this.regexEscape(options.adText) : 'AD'\n    ]\n  }\n\n  private static getParserRegex(options: DatationFormatOptions): RegExp {\n    const bcad = this.getErasOptionsForRegex(options);\n\n    return new RegExp(\n      // about (1)\n      '(c\\\\.)?\\\\s*' +\n      // day (2)\n      '(?:([0123]\\\\d?)\\\\s+)?' +\n      // month (3)\n      '(?:([a-zA-Z]{3,})\\\\s+)?' +\n      // year/span (4,5)\n      '(?:' +\n      '(?:(\\\\d+)(?:\\\\s*/\\\\s*(\\\\d+))?)|' +\n      // century (6)\n      '([ivxIVX]+)' +\n      ')\\\\s*' +\n      // era (7)\n      '(' + bcad[0] + '|' + bcad[1] + ')?' +\n      // perhaps (8)\n      '(\\\\s*\\\\?)?' +\n      // hint (9)\n      '(?:\\\\s*\\\\{([^}]+)\\\\})?', 'i');\n  }\n\n  /**\n   * Parse the specified text representing a datation.\n   * @param text The text to be parsed.\n   * @param options The formatter options.\n   * @returns The parsed datation, or undefined if invalid or empty.\n   * Note that here we return undefined to mean a non-existing point.\n   * We do not want a non-existing point to be represented as a null,\n   * as this would be included as in the JSON code when serializing.\n   */\n  public static parse(text: string,\n    options: DatationFormatOptions = DATATION_FORMAT_OPTIONS): Datation {\n    if (!text) {\n      return undefined;\n    }\n    const datation = new Datation();\n    const datationRegex = this.getParserRegex(options);\n    const m = datationRegex.exec(text);\n    if (!m) {\n      return undefined;\n    }\n\n    // about\n    if (m[1]) {\n      datation.isApproximate = true;\n    }\n\n    // day\n    if (m[2]) {\n      datation.day = parseInt(m[2], 10);\n    }\n\n    // month\n    if (m[3]) {\n      const lowerMonth = m[3].toLowerCase();\n      const i = options.monthNames.findIndex(name =>\n        name.toLowerCase() === lowerMonth);\n      if (i > -1) {\n        datation.month = i + 1;\n      }\n    }\n\n    // year, span\n    if (m[4]) {\n      datation.value = parseInt(m[4], 10);\n      if (m[5]) {\n        datation.isSpan = true;\n      }\n    } else {\n      datation.value = RomanNumber.fromRoman(m[6].toUpperCase());\n      datation.isCentury = true;\n    }\n\n    // era\n    if (m[7]) {\n      const era = m[7].replace(' ', '').toLowerCase();\n      if (era === options.bcText.toLowerCase()) {\n        datation.value = -datation.value;\n      }\n    }\n\n    // dubious\n    if (m[8]) {\n      datation.isDubious = true;\n    }\n\n    // hint\n    if (m[9]) {\n      datation.hint = Datation.sanitizeHint(m[9]);\n    }\n\n    return datation;\n  }\n\n  /**\n   * Strip any era code from the specified datation format string.\n   * @param format The format string.\n   */\n  public static stripFormatStringEra(format: string): string {\n    if (!format) {\n      return 'i';\n    }\n\n    // convert ga gp Ga Gp into simple g G\n    format = format.replace(new RegExp('([gG])[ap]', 'gi'), '$1');\n\n    // replace g/G with i/I\n    format = format.replace('g', 'i');\n    format = format.replace('G', 'I');\n\n    // remove ea ep Ea Ep with preceding w/W if any\n    format = format.replace(new RegExp('[wW]?[eE][ap]?', 'gi'), '');\n\n    return format;\n  }\n\n  /**\n   * Reset this datation.\n   */\n  public reset() {\n    this.value = 0;\n    this.isCentury = false;\n    this.isSpan = false;\n    this.isApproximate = false;\n    this.day = 0;\n    this.month = 0;\n    this.hint = undefined;\n  }\n\n  /**\n   * Copy data from the specified source datatation.\n   * @param datation The source datation.\n   */\n  public copyFrom(datation: DatationModel) {\n    this.value = datation.value;\n    this.isCentury = datation.isCentury;\n    this.isSpan = datation.isSpan;\n    this.isApproximate = datation.isApproximate;\n    this.isDubious = datation.isDubious;\n    this.day = datation.day;\n    this.month = datation.month;\n    this.hint = datation.hint? datation.hint : undefined;\n  }\n\n  /**\n   * True if this datation is undefined. A datation is undefined when\n   * its value is 0. Undefined datations are used as unknown points in a range\n   * for termini ante/post.\n   */\n  public isUndefined(): boolean {\n    return !this.value;\n  }\n\n  /**\n   * Get a sort value from this datation.\n   */\n  public getSortValue(): number {\n    let result: number;\n\n    if (this.isCentury) {\n      result = this.value * 100 + (this.value  0 && this.month  0 && this.day  text.length) {\n      return false;\n    }\n\n    for (let i = 0; i  {\n      switch (token) {\n        case 'v':\n        case 'V':\n          // year or century\n          if (this.isCentury) {\n            sb.push(token === 'v' ?\n              RomanNumber.toRoman(Math.abs(this.value)).toLowerCase() :\n              RomanNumber.toRoman(Math.abs(this.value)).toUpperCase());\n          } else {\n            const year = Math.abs(this.value);\n            sb.push(year.toString());\n            if (this.isSpan) {\n              sb.push(`/${year + (this.value  0) {\n            sb.push(this.day.toString());\n          }\n          break;\n        case 'dd':\n          if (this.day > 0) {\n            sb.push(this.day.toString().padStart(2, '0'));\n          }\n          break;\n        case 'ddd':\n          if (this.day > 0) {\n            const date = new Date(this.value, this.month, this.day);\n            const dow = date.getDay();\n            sb.push(options.dayNames[dow]);\n          }\n          break;\n\n        case 'M':\n          if (this.month > 0) {\n            sb.push(this.month.toString());\n          }\n          break;\n        case 'MM':\n          if (this.month > 0) {\n            sb.push(this.month.toString().padStart(2, '0'));\n          }\n          break;\n        case 'MMM':\n          if (this.month > 0) {\n            sb.push(options.monthNames[this.month - 1]);\n          }\n          break;\n\n        case 'e':\n          sb.push(this.value  0) {\n            sb.push(options.adText);\n          }\n          break;\n\n        case 'h':\n        case 'H':\n          if (this.hint) {\n            sb.push(` {${this.hint}}`);\n          }\n          break;\n\n        case 'w':\n        case 'W':\n          if (sb.length > 0) {\n            const last = sb[sb.length - 1];\n            if (!last.endsWith(' ')) {\n              sb.push(' ');\n            }\n          }\n          break;\n\n        case 's':\n        case 'S':\n          sb.push(this.getSortValue().toString());\n          break;\n\n        default:\n          // literal\n          sb.push(token);\n          break;\n      }\n    });\n    return sb.join('').trim().replace(new RegExp('\\\\s+', 'g'), ' ');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnvService.html":{"url":"injectables/EnvService.html","title":"injectable - EnvService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EnvService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/env.service.ts\n        \n\n            \n                Description\n            \n            \n                The environment service. Its properties are the default values\nthat can be overridden by env.js, assuming that there is one and\nit can be loaded; otherwise, the application will fall back to\nthese default values.\nSee https://www.jvandemo.com/how-to-use-environment-variables-to-configure-your-angular-application-without-a-rebuild/\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                            \n                                    Public\n                                databaseId\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/services/env.service.ts:16\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:60304/api/'\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/services/env.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            databaseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cadmus'\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/services/env.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/services/env.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The environment service. Its properties are the default values\n * that can be overridden by env.js, assuming that there is one and\n * it can be loaded; otherwise, the application will fall back to\n * these default values.\n * See https://www.jvandemo.com/how-to-use-environment-variables-to-configure-your-angular-application-without-a-rebuild/\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvService {\n  public apiUrl = 'http://localhost:60304/api/';\n  public databaseId = 'cadmus';\n  public name = 'Demo';\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/error.service.ts\n        \n\n            \n                Description\n            \n            \n                Error handler for services. To use this in your service, pipe a catchError\noperator with its argument equal to the handleError method of this service.\nNote: pipe this method after retry, if using it.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/error.service.ts:21\n                \n            \n\n\n            \n                \n                    Handle the specified error response.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error response.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\n// https://angular.io/guide/http\n\n/**\n * Error handler for services. To use this in your service, pipe a catchError\n * operator with its argument equal to the handleError method of this service.\n * Note: pipe this method after retry, if using it.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  /**\n   * Handle the specified error response.\n   * @param error The error response.\n   */\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('A client-side or network error occurred: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorWrapper.html":{"url":"interfaces/ErrorWrapper.html","title":"interface - ErrorWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper for a value or an optional error message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExistResult.html":{"url":"interfaces/ExistResult.html","title":"interface - ExistResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExistResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entry\n                                \n                                \n                                        isExisting\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entry\n                                    \n                                \n                                \n                                    \n                                        entry:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExisting\n                                    \n                                \n                                \n                                    \n                                        isExisting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FacetDefinition.html":{"url":"interfaces/FacetDefinition.html","title":"interface - FacetDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FacetDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Fragment definition in a facet.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colorKey\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        partDefinitions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorKey\n                                    \n                                \n                                \n                                    \n                                        colorKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partDefinitions\n                                    \n                                \n                                \n                                    \n                                        partDefinitions:     PartDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PartDefinition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlagDefinition.html":{"url":"interfaces/FlagDefinition.html","title":"interface - FlagDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FlagDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Flag definition.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colorKey\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorKey\n                                    \n                                \n                                \n                                    \n                                        colorKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fragment.html":{"url":"interfaces/Fragment.html","title":"interface - Fragment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Fragment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Text layer fragment. This is the minimal set of properties present in all the\nfragments. Each fragment then adds its own properties, extending this\ninterface.\nEvery fragment has a location, and can be enriched with the corresponding\nbase text when used in views.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseText\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseText\n                                    \n                                \n                                \n                                    \n                                        baseText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GravatarService.html":{"url":"injectables/GravatarService.html","title":"injectable - GravatarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GravatarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/gravatar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildGravatarUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildGravatarUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildGravatarUrl(email: string, size: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/gravatar.service.ts:17\n                \n            \n\n\n            \n                \n                    Builds the URL to the Gravatar avatar corresponding to the specified email\naddress.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : The email address.\n\n                                    \n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        80\n                                    \n\n                                    \n                                        The required size in pixels (1-512).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as gravatar from 'gravatar';\n\n// npm i gravatar --save\n// npm i @types/gravatar --save\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GravatarService {\n  /**\n   * Builds the URL to the Gravatar avatar corresponding to the specified email\n   * address.\n   * @param email: The email address.\n   * @param size The required size in pixels (1-512).\n   */\n  public buildGravatarUrl(email: string, size = 80): string {\n    if (!email) {\n      return null;\n    }\n    return gravatar.url(email, { s: size.toString() });\n    // const hash = this._hash.getMd5(email.trim().toLowerCase());\n    // return this.buildGravatarUrlFromHash(hash, size);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasVersion.html":{"url":"interfaces/HasVersion.html","title":"interface - HasVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HasVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Interface implemented by versioned storage objects.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        creatorId\n                                \n                                \n                                        timeCreated\n                                \n                                \n                                        timeModified\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creatorId\n                                    \n                                \n                                \n                                    \n                                        creatorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeCreated\n                                    \n                                \n                                \n                                    \n                                        timeCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeModified\n                                    \n                                \n                                \n                                    \n                                        timeModified:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HistoricalDate.html":{"url":"classes/HistoricalDate.html","title":"class - HistoricalDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HistoricalDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/historical-date.ts\n        \n\n            \n                Description\n            \n            \n                A historical date, including 0, 1, or 2 datation points.\n\n            \n\n\n            \n                Implements\n            \n            \n                            HistoricalDateModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                a\n                            \n                            \n                                    Public\n                                b\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                centuryToYear\n                            \n                            \n                                    Public\n                                getDateType\n                            \n                            \n                                    Public\n                                getEndPoint\n                            \n                            \n                                    Public\n                                getSinglePoint\n                            \n                            \n                                    Public\n                                getSortValue\n                            \n                            \n                                    Public\n                                getStartPoint\n                            \n                            \n                                    Public\n                                isAbout\n                            \n                            \n                                    Public\n                                isDubious\n                            \n                            \n                                    Public\n                                isUndefined\n                            \n                            \n                                    Static\n                                parse\n                            \n                            \n                                    Public\n                                setEndPoint\n                            \n                            \n                                    Public\n                                setSinglePoint\n                            \n                            \n                                    Public\n                                setStartPoint\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                toYear\n                            \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date: HistoricalDateModel)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/historical-date.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        HistoricalDateModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            a\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Datation\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/historical-date.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            b\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Datation\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/historical-date.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            centuryToYear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    centuryToYear(century: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:262\n                \n            \n\n\n            \n                \n                    Get the approximate year value from the specified century value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    century\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The century number, negative if B.C.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDateType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDateType()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:164\n                \n            \n\n\n            \n                \n                    Get the type of this date.\n\n\n                    \n                        Returns :         HistoricalDateType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEndPoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEndPoint()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Datation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSinglePoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSinglePoint()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Datation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSortValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSortValue()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:194\n                \n            \n\n\n            \n                \n                    Get the sort value for this date.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartPoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartPoint()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Datation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAbout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAbout()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:325\n                \n            \n\n\n            \n                \n                    True if any value (either in point or in range) has an about flag.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDubious\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDubious()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:349\n                \n            \n\n\n            \n                \n                    True if any value (either in point or in range) has an about flag.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isUndefined\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUndefined()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:155\n                \n            \n\n\n            \n                \n                    True if this date is undefined.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(text: string, options: DatationFormatOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:52\n                \n            \n\n\n            \n                \n                    Parse the specified text representing a historical datation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The text to be parsed.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                DatationFormatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DATATION_FORMAT_OPTIONS\n                                    \n\n                                    \n                                        The datation formatter options.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HistoricalDate\n\n                    \n                    \n                        The datation, or null if invalid.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEndPoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEndPoint(value: Datation)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Datation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSinglePoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSinglePoint(value: Datation)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Datation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setStartPoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStartPoint(value: Datation)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Datation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString(format: string, options: DatationFormatOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:218\n                \n            \n\n\n            \n                \n                    Build a textual representation of this date.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'G'\n                                    \n\n                                    \n                                        The format string.\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                DatationFormatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DATATION_FORMAT_OPTIONS\n                                    \n\n                                    \n                                        The formatter options.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toYear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toYear(useTerminusSpan)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:276\n                \n            \n\n\n            \n                \n                    Convert this date into a single approximate year value.\nFor centuries, the central century year is returned (e.g. -350 for IV B.C.\nand +350 for IV A.D.); when the date is a range with a single boundary only\n(max or min) the corresponding year minus or plus a predefined delta value\n(10) is returned; if it's a range with both boundaries (max and min),\nthe middle year between them is returned.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    useTerminusSpan\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        True to add or remove the predefined span from\na terminus ante or post.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/historical-date.ts:175\n                \n            \n\n\n            \n                \n                    Validate this date.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Error message if invalid, or null if valid.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Datation,\n  DatationFormatOptions,\n  DATATION_FORMAT_OPTIONS,\n  DatationModel\n} from './datation';\n\nconst APPROX_DELTA = 10;\n\n/**\n * Type of historical date.\n */\nexport enum HistoricalDateType {\n  undefined = 0,\n  point,\n  range\n}\n\n/**\n * Interface implemented by a historical date, as returned from the server.\n */\nexport interface HistoricalDateModel {\n  a: DatationModel;\n  b: DatationModel;\n}\n\n/**\n * A historical date, including 0, 1, or 2 datation points.\n */\nexport class HistoricalDate implements HistoricalDateModel {\n  public a: Datation;\n  public b: Datation;\n\n  constructor(date: HistoricalDateModel = null) {\n    if (!date) {\n      this.a = new Datation();\n      // B=undefined for a single point\n    } else {\n      this.a = new Datation(date.a);\n      if (date.b) {\n        this.b = new Datation(date.b);\n      }\n    }\n  }\n\n  /**\n   * Parse the specified text representing a historical datation.\n   * @param text The text to be parsed.\n   * @param options The datation formatter options.\n   * @return The datation, or null if invalid.\n   */\n  public static parse(\n    text: string,\n    options: DatationFormatOptions = DATATION_FORMAT_OPTIONS\n  ): HistoricalDate {\n    if (!text) {\n      return null;\n    }\n    const dates = text.split('--');\n    let s1 = dates[0].trim();\n    const s2 = dates.length > 1 ? dates[1].trim() : null;\n    if (!s1) {\n      return null;\n    }\n\n    const date = new HistoricalDate();\n    if (dates.length > 1) {\n      // if both terms are specified, integrate BC/AD indication in 1st if required\n      if (s1 && s2) {\n        const bcad = Datation.getErasOptionsForRegex(options);\n        const tailRegexp = new RegExp(\n          // era (1)\n          '(' +\n            bcad[0] +\n            '|' +\n            bcad[1] +\n            ')?' +\n            // dubious (2)\n            '(\\\\s*\\\\?)?' +\n            // hint (3)\n            '(?:\\\\s*\\\\{?:([^)]+)\\\\})?\\\\s*$',\n          'gi'\n        );\n        const m1 = tailRegexp.exec(s1);\n\n        // if 1st has no era try integration from 2nd\n        if (m1 && m1[1]) {\n          // get era from 2nd (if 2nd hasn't it too, give up and AD will be assumed)\n          const m2 = tailRegexp.exec(s2);\n          if (m2 && m2[1]) {\n            const era = m2[1] || 'p.C.';\n            const sb1: string[] = [];\n            if (m1.index > 0) {\n              sb1.push(s1.substr(0, m1.index));\n            }\n            sb1.push(' ' + era);\n            if (m1[2]) {\n              sb1.push('?');\n            }\n            if (m1[3]) {\n              sb1.push(` (${m1[3]})`);\n            }\n            s1 = sb1.join('');\n          }\n        }\n      }\n      date.setStartPoint(Datation.parse(s1, options));\n      date.setEndPoint(Datation.parse(s2, options));\n    } else {\n      // here we have a s2, even if empty. When empty, it represents\n      // an unknown point in a terminus ante/post, and as such we\n      // must set B=null. When B=undefined, it's not a range but a point.\n      const d = Datation.parse(s1, options);\n      if (d && !d.isUndefined()) {\n        date.setSinglePoint(d);\n      }\n    }\n\n    return date;\n  }\n\n  public getStartPoint(): Datation {\n    return this.getDateType() === HistoricalDateType.range ? this.a : undefined;\n  }\n\n  public setStartPoint(value: Datation) {\n    this.a = new Datation(value);\n    // it's a range, ensure max is not null\n    if (!this.b) {\n      this.b = new Datation();\n    }\n  }\n\n  public getEndPoint(): Datation {\n    return this.getDateType() === HistoricalDateType.range ? this.b : undefined;\n  }\n\n  public setEndPoint(value: Datation) {\n    this.b = new Datation(value);\n  }\n\n  public getSinglePoint(): Datation {\n    return this.getDateType() === HistoricalDateType.point ? this.a : undefined;\n  }\n\n  public setSinglePoint(value: Datation) {\n    this.a = new Datation(value);\n    // it's a point, ensure max is undefined\n    this.b = undefined;\n  }\n\n  /**\n   * True if this date is undefined.\n   */\n  public isUndefined(): boolean {\n    return (\n      !this.a || (this.a.isUndefined() && (!this.b || this.b.isUndefined()))\n    );\n  }\n\n  /**\n   * Get the type of this date.\n   */\n  public getDateType(): HistoricalDateType {\n    if (this.isUndefined()) {\n      return HistoricalDateType.undefined;\n    }\n    return this.b ? HistoricalDateType.range : HistoricalDateType.point;\n  }\n\n  /**\n   * Validate this date.\n   * @returns Error message if invalid, or null if valid.\n   */\n  public validate(): string {\n    if (!this.a) {\n      return 'Missing point A';\n    }\n\n    if (this.getDateType() === HistoricalDateType.range) {\n      const av = this.a.getSortValue();\n      const bv = this.b.getSortValue();\n      if (av && bv && av >= bv) {\n        return 'Point A is past point B';\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Get the sort value for this date.\n   */\n  public getSortValue(): number {\n    switch (this.getDateType()) {\n      case HistoricalDateType.point:\n        return this.a.getSortValue();\n\n      case HistoricalDateType.range:\n        if (this.a.isUndefined()) {\n          return this.b.getSortValue() - APPROX_DELTA;\n        }\n        if (this.b.isUndefined()) {\n          return this.a.getSortValue() + APPROX_DELTA;\n        }\n        return (this.a.getSortValue() + this.b.getSortValue()) / 2;\n\n      default:\n        return 0;\n    }\n  }\n\n  /**\n   * Build a textual representation of this date.\n   * @param format The format string.\n   * @param options The formatter options.\n   */\n  public toString(\n    format = 'G',\n    options: DatationFormatOptions = DATATION_FORMAT_OPTIONS\n  ) {\n    const sb: string[] = [];\n\n    switch (this.getDateType()) {\n      case HistoricalDateType.point:\n        sb.push(this.a.toString(format, options));\n        break;\n\n      case HistoricalDateType.range:\n        // if both terms are present and belong to same era, omit it in 1st\n        if (\n          !this.a.isUndefined() &&\n          this.b &&\n          !this.b.isUndefined() &&\n          this.a.value * this.b.value > 0\n        ) {\n          sb.push(\n            this.a.toString(Datation.stripFormatStringEra(format), options)\n          );\n          sb.push(' -- ');\n          sb.push(this.b.toString(format, options));\n          break;\n        }\n\n        if (!this.a.isUndefined()) {\n          sb.push(this.a.toString(format, options) + ' ');\n        }\n        sb.push('--');\n        if (this.b && !this.b.isUndefined()) {\n          sb.push(this.b.toString(format, options));\n        }\n        break;\n    }\n\n    return sb.join('');\n  }\n\n  /**\n   * Get the approximate year value from the specified century value.\n   * @param century The century number, negative if B.C.\n   */\n  private centuryToYear(century: number): number {\n    return century * 100 + (century \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoricalDateModel.html":{"url":"interfaces/HistoricalDateModel.html","title":"interface - HistoricalDateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoricalDateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/historical-date.ts\n        \n\n            \n                Description\n            \n            \n                Interface implemented by a historical date, as returned from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        a\n                                \n                                \n                                        b\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        a\n                                    \n                                \n                                \n                                    \n                                        a:         DatationModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatationModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                    \n                                \n                                \n                                    \n                                        b:         DatationModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatationModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Datation,\n  DatationFormatOptions,\n  DATATION_FORMAT_OPTIONS,\n  DatationModel\n} from './datation';\n\nconst APPROX_DELTA = 10;\n\n/**\n * Type of historical date.\n */\nexport enum HistoricalDateType {\n  undefined = 0,\n  point,\n  range\n}\n\n/**\n * Interface implemented by a historical date, as returned from the server.\n */\nexport interface HistoricalDateModel {\n  a: DatationModel;\n  b: DatationModel;\n}\n\n/**\n * A historical date, including 0, 1, or 2 datation points.\n */\nexport class HistoricalDate implements HistoricalDateModel {\n  public a: Datation;\n  public b: Datation;\n\n  constructor(date: HistoricalDateModel = null) {\n    if (!date) {\n      this.a = new Datation();\n      // B=undefined for a single point\n    } else {\n      this.a = new Datation(date.a);\n      if (date.b) {\n        this.b = new Datation(date.b);\n      }\n    }\n  }\n\n  /**\n   * Parse the specified text representing a historical datation.\n   * @param text The text to be parsed.\n   * @param options The datation formatter options.\n   * @return The datation, or null if invalid.\n   */\n  public static parse(\n    text: string,\n    options: DatationFormatOptions = DATATION_FORMAT_OPTIONS\n  ): HistoricalDate {\n    if (!text) {\n      return null;\n    }\n    const dates = text.split('--');\n    let s1 = dates[0].trim();\n    const s2 = dates.length > 1 ? dates[1].trim() : null;\n    if (!s1) {\n      return null;\n    }\n\n    const date = new HistoricalDate();\n    if (dates.length > 1) {\n      // if both terms are specified, integrate BC/AD indication in 1st if required\n      if (s1 && s2) {\n        const bcad = Datation.getErasOptionsForRegex(options);\n        const tailRegexp = new RegExp(\n          // era (1)\n          '(' +\n            bcad[0] +\n            '|' +\n            bcad[1] +\n            ')?' +\n            // dubious (2)\n            '(\\\\s*\\\\?)?' +\n            // hint (3)\n            '(?:\\\\s*\\\\{?:([^)]+)\\\\})?\\\\s*$',\n          'gi'\n        );\n        const m1 = tailRegexp.exec(s1);\n\n        // if 1st has no era try integration from 2nd\n        if (m1 && m1[1]) {\n          // get era from 2nd (if 2nd hasn't it too, give up and AD will be assumed)\n          const m2 = tailRegexp.exec(s2);\n          if (m2 && m2[1]) {\n            const era = m2[1] || 'p.C.';\n            const sb1: string[] = [];\n            if (m1.index > 0) {\n              sb1.push(s1.substr(0, m1.index));\n            }\n            sb1.push(' ' + era);\n            if (m1[2]) {\n              sb1.push('?');\n            }\n            if (m1[3]) {\n              sb1.push(` (${m1[3]})`);\n            }\n            s1 = sb1.join('');\n          }\n        }\n      }\n      date.setStartPoint(Datation.parse(s1, options));\n      date.setEndPoint(Datation.parse(s2, options));\n    } else {\n      // here we have a s2, even if empty. When empty, it represents\n      // an unknown point in a terminus ante/post, and as such we\n      // must set B=null. When B=undefined, it's not a range but a point.\n      const d = Datation.parse(s1, options);\n      if (d && !d.isUndefined()) {\n        date.setSinglePoint(d);\n      }\n    }\n\n    return date;\n  }\n\n  public getStartPoint(): Datation {\n    return this.getDateType() === HistoricalDateType.range ? this.a : undefined;\n  }\n\n  public setStartPoint(value: Datation) {\n    this.a = new Datation(value);\n    // it's a range, ensure max is not null\n    if (!this.b) {\n      this.b = new Datation();\n    }\n  }\n\n  public getEndPoint(): Datation {\n    return this.getDateType() === HistoricalDateType.range ? this.b : undefined;\n  }\n\n  public setEndPoint(value: Datation) {\n    this.b = new Datation(value);\n  }\n\n  public getSinglePoint(): Datation {\n    return this.getDateType() === HistoricalDateType.point ? this.a : undefined;\n  }\n\n  public setSinglePoint(value: Datation) {\n    this.a = new Datation(value);\n    // it's a point, ensure max is undefined\n    this.b = undefined;\n  }\n\n  /**\n   * True if this date is undefined.\n   */\n  public isUndefined(): boolean {\n    return (\n      !this.a || (this.a.isUndefined() && (!this.b || this.b.isUndefined()))\n    );\n  }\n\n  /**\n   * Get the type of this date.\n   */\n  public getDateType(): HistoricalDateType {\n    if (this.isUndefined()) {\n      return HistoricalDateType.undefined;\n    }\n    return this.b ? HistoricalDateType.range : HistoricalDateType.point;\n  }\n\n  /**\n   * Validate this date.\n   * @returns Error message if invalid, or null if valid.\n   */\n  public validate(): string {\n    if (!this.a) {\n      return 'Missing point A';\n    }\n\n    if (this.getDateType() === HistoricalDateType.range) {\n      const av = this.a.getSortValue();\n      const bv = this.b.getSortValue();\n      if (av && bv && av >= bv) {\n        return 'Point A is past point B';\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Get the sort value for this date.\n   */\n  public getSortValue(): number {\n    switch (this.getDateType()) {\n      case HistoricalDateType.point:\n        return this.a.getSortValue();\n\n      case HistoricalDateType.range:\n        if (this.a.isUndefined()) {\n          return this.b.getSortValue() - APPROX_DELTA;\n        }\n        if (this.b.isUndefined()) {\n          return this.a.getSortValue() + APPROX_DELTA;\n        }\n        return (this.a.getSortValue() + this.b.getSortValue()) / 2;\n\n      default:\n        return 0;\n    }\n  }\n\n  /**\n   * Build a textual representation of this date.\n   * @param format The format string.\n   * @param options The formatter options.\n   */\n  public toString(\n    format = 'G',\n    options: DatationFormatOptions = DATATION_FORMAT_OPTIONS\n  ) {\n    const sb: string[] = [];\n\n    switch (this.getDateType()) {\n      case HistoricalDateType.point:\n        sb.push(this.a.toString(format, options));\n        break;\n\n      case HistoricalDateType.range:\n        // if both terms are present and belong to same era, omit it in 1st\n        if (\n          !this.a.isUndefined() &&\n          this.b &&\n          !this.b.isUndefined() &&\n          this.a.value * this.b.value > 0\n        ) {\n          sb.push(\n            this.a.toString(Datation.stripFormatStringEra(format), options)\n          );\n          sb.push(' -- ');\n          sb.push(this.b.toString(format, options));\n          break;\n        }\n\n        if (!this.a.isUndefined()) {\n          sb.push(this.a.toString(format, options) + ' ');\n        }\n        sb.push('--');\n        if (this.b && !this.b.isUndefined()) {\n          sb.push(this.b.toString(format, options));\n        }\n        break;\n    }\n\n    return sb.join('');\n  }\n\n  /**\n   * Get the approximate year value from the specified century value.\n   * @param century The century number, negative if B.C.\n   */\n  private centuryToYear(century: number): number {\n    return century * 100 + (century \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Item.html":{"url":"interfaces/Item.html","title":"interface - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Item\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Item's properties, excluding its parts.\n\n            \n\n            \n                Extends\n            \n            \n                        HasVersion\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        facetId\n                                \n                                \n                                        flags\n                                \n                                \n                                        groupId\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        parts\n                                \n                                \n                                        sortKey\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        facetId\n                                    \n                                \n                                \n                                    \n                                        facetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flags\n                                    \n                                \n                                \n                                    \n                                        flags:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                    \n                                \n                                \n                                    \n                                        groupId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                    \n                                \n                                \n                                    \n                                        parts:         Part[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Part[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortKey\n                                    \n                                \n                                \n                                    \n                                        sortKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemFilter.html":{"url":"interfaces/ItemFilter.html","title":"interface - ItemFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Filter for items.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        facetId\n                                \n                                \n                                            Optional\n                                        flags\n                                \n                                \n                                            Optional\n                                        groupId\n                                \n                                \n                                            Optional\n                                        maxModified\n                                \n                                \n                                            Optional\n                                        minModified\n                                \n                                \n                                        pageNumber\n                                \n                                \n                                        pageSize\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        facetId\n                                    \n                                \n                                \n                                    \n                                        facetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flags\n                                    \n                                \n                                \n                                    \n                                        flags:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                    \n                                \n                                \n                                    \n                                        groupId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxModified\n                                    \n                                \n                                \n                                    \n                                        maxModified:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minModified\n                                    \n                                \n                                \n                                    \n                                        minModified:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemInfo.html":{"url":"interfaces/ItemInfo.html","title":"interface - ItemInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Essential information about an item.\n\n            \n\n            \n                Extends\n            \n            \n                        HasVersion\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        facetId\n                                \n                                \n                                        flags\n                                \n                                \n                                        groupId\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        sortKey\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        facetId\n                                    \n                                \n                                \n                                    \n                                        facetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flags\n                                    \n                                \n                                \n                                    \n                                        flags:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                    \n                                \n                                \n                                    \n                                        groupId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortKey\n                                    \n                                \n                                \n                                    \n                                        sortKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonSchemaService.html":{"url":"injectables/JsonSchemaService.html","title":"injectable - JsonSchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonSchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/json-schema.service.ts\n        \n\n            \n                Description\n            \n            \n                JSON schema validation service.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _ajv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addSchema\n                            \n                            \n                                    Public\n                                loadSchema\n                            \n                            \n                                    Public\n                                validateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/services/json-schema.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSchema(name: string, schema: object, replace)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/json-schema.service.ts:44\n                \n            \n\n\n            \n                \n                    Add the specified schema to the validator schema set. If a schema with\nthe same name already exists, nothing happens unless you pass replace=true.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The name of the schema; this will be used as the key to store it.\n\n                                    \n                                \n                                \n                                    schema\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    replace\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        True to replace an existing schema with the same name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSchema(name: string, urlPath: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/json-schema.service.ts:61\n                \n            \n\n\n            \n                \n                    Fetch the schema and add it to the validator schema set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the schema; this will be used as the key to store it.\n\n                                    \n                                \n                                \n                                    urlPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The URL path of the schema to load.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            validateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateData(name: string, data: T)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/json-schema.service.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Validate data against a schema.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the schema to validate.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data to validate.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _ajv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Ajv.Ajv\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/services/json-schema.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, InjectionToken, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as Ajv from 'ajv';\n\n// npm i ajv --save\n// https://tane.dev/2019/09/validating-data-with-json-schema-angular-and-typescript/\n\n/**\n * The response of a validation result.\n */\nexport interface ValidationResult {\n  /**\n   * If the result is valid or not\n   */\n  valid: boolean;\n\n  /**\n   * Error text from the validator\n   */\n  errorsText: string;\n}\n\n/**\n * JSON schema validation service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonSchemaService {\n  private readonly _ajv: Ajv.Ajv;\n\n  constructor(private readonly http: HttpClient) {\n    this._ajv = new Ajv({ allErrors: true });\n  }\n\n  /**\n   * Add the specified schema to the validator schema set. If a schema with\n   * the same name already exists, nothing happens unless you pass replace=true.\n   *\n   * @param name The name of the schema; this will be used as the key to store it.\n   * @param json The schema to be added.\n   * @param replace True to replace an existing schema with the same name.\n   */\n  public addSchema(name: string, schema: object, replace = false): void {\n    const old = this._ajv.getSchema(name);\n    if (old) {\n      if (replace) {\n        this._ajv.removeSchema(name);\n      } else {\n        return;\n      }\n    }\n    this._ajv.addSchema(schema, name);\n  }\n\n  /**\n   * Fetch the schema and add it to the validator schema set.\n   * @param name The name of the schema; this will be used as the key to store it.\n   * @param urlPath The URL path of the schema to load.\n   */\n  public loadSchema(name: string, urlPath: string): void {\n    this.http\n      .get(urlPath)\n      .subscribe(result => this._ajv.addSchema(result, name));\n  }\n\n  /**\n   * Validate data against a schema.\n   * @param name The name of the schema to validate.\n   * @param data The data to validate.\n   */\n  public validateData(name: string, data: T): ValidationResult {\n    const valid = this._ajv.validate(name, data) as boolean;\n    return {\n      valid: valid,\n      errorsText: this._ajv.errorsText()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerHint.html":{"url":"interfaces/LayerHint.html","title":"interface - LayerHint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayerHint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Layer reconciliation hint for a single fragment.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        editOperation\n                                \n                                \n                                        impactLevel\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        patchOperation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editOperation\n                                    \n                                \n                                \n                                    \n                                        editOperation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        impactLevel\n                                    \n                                \n                                \n                                    \n                                        impactLevel:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patchOperation\n                                    \n                                \n                                \n                                    \n                                        patchOperation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerPartInfo.html":{"url":"interfaces/LayerPartInfo.html","title":"interface - LayerPartInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayerPartInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Essential information about a layer part.\n\n            \n\n            \n                Extends\n            \n            \n                        HasVersion\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fragmentCount\n                                \n                                \n                                        id\n                                \n                                \n                                        isAbsent\n                                \n                                \n                                        itemId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fragmentCount\n                                    \n                                \n                                \n                                    \n                                        fragmentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAbsent\n                                    \n                                \n                                \n                                    \n                                        isAbsent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryRouteService.html":{"url":"injectables/LibraryRouteService.html","title":"injectable - LibraryRouteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LibraryRouteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/library-route.service.ts\n        \n\n            \n                Description\n            \n            \n                Library route service.\nThis service is used to build routes to part and fragment editors,\nwhich are hosted in an open list of library modules in the Cadmus\napplication.\nThis architecture allows lazy-loading part- and fragment-editors\nonly when they are required.\nEach part type with its dumb UI editor component is located in a\nlibrary, named after the name of the group the part belongs to. For\ninstance, the model and dumb UI editor component for a part belonging\nto the \"general\" group are located in the \"parts/general/general-ui\"\nlibrary.\nIn turn, the feature UI editor component for the same part is located\nin the \"parts/general/general-feature\" library. This library has\na route for each part editor. For instance, the NotePart editor\ncomponent route is \"items/:iid/general/net.fusisoft.note/:pid\", where\n\":iid\" is the item ID and \":pid\" the part ID.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildFragmentEditorRoute\n                            \n                            \n                                    Public\n                                buildPartEditorRoute\n                            \n                            \n                                    Public\n                                decomposeEditorKey\n                            \n                            \n                                    Private\n                                findPartDefinition\n                            \n                            \n                                    Public\n                                getEditorKeyFromPartType\n                            \n                            \n                                    Public\n                                getFragmentTypeAndRole\n                            \n                            \n                                    Public\n                                stripFragmentRoleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_partEditorKeys: PartEditorKeys)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/services/library-route.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _partEditorKeys\n                                                  \n                                                        \n                                                                        PartEditorKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildFragmentEditorRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildFragmentEditorRoute(partDefs: PartDefinition[], itemId: string, partId: string, typeId: string, roleId: string, loc: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/library-route.service.ts:213\n                \n            \n\n\n            \n                \n                    Build the route to the fragment editor corresponding to the specified\nlayers part and location.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    partDefs\n                                    \n                                            PartDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parts definitions.\n\n                                    \n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the item the parts belongs to.\n\n                                    \n                                \n                                \n                                    partId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The part's ID.\n\n                                    \n                                \n                                \n                                    typeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The part's type ID.\n\n                                    \n                                \n                                \n                                    roleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The part's role ID.\n\n                                    \n                                \n                                \n                                    loc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The fragment's location.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        Object with a route property and an optional rid property\nrepresenting the role ID, which will be rendered as a query parameter.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildPartEditorRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildPartEditorRoute(partDefs: PartDefinition[], itemId: string, partId: string, typeId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/library-route.service.ts:186\n                \n            \n\n\n            \n                \n                    Build the route to the part editor corresponding to the specified\npart.\nA part editing route is like\n\"/items////?rid=\",\nwhere the role ID is optional, and may include the fragment role ID\nas a suffix preceded by a colon.\nA fragment editing route is like\n\"/items///fragment///?rid=\",\nwhere the role ID is as above, and the fragment's type ID is derived\nfrom the part's role ID, stripping the eventual fragment's role ID out.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    partDefs\n                                    \n                                            PartDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parts definitions.\n\n                                    \n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the item the parts belongs to.\n\n                                    \n                                \n                                \n                                    partId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The part's ID.\n\n                                    \n                                \n                                \n                                    typeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The part's type ID.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Object with a route property and an optional rid property\nrepresenting the role ID, which will be rendered as a query parameter.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            decomposeEditorKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decomposeEditorKey(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/library-route.service.ts:150\n                \n            \n\n\n            \n                \n                    Decompose the specified editor key into part and fragment.\nA simple editor key will just provide the same value for both.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The editor key to decompose.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findPartDefinition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPartDefinition(partDefs: PartDefinition[], typeId: string, roleId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/library-route.service.ts:87\n                \n            \n\n\n            \n                \n                    Find among the specified parts definitions the one matching the specified\ntype ID, and eventually role ID when specified.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    partDefs\n                                    \n                                            PartDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The parts definitions.\n\n                                    \n                                \n                                \n                                    typeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The type ID.\n\n                                    \n                                \n                                \n                                    roleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        The role ID or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PartDefinition | null\n\n                    \n                    \n                        Part definition or null if not found.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditorKeyFromPartType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditorKeyFromPartType(typeId: string, roleId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/library-route.service.ts:119\n                \n            \n\n\n            \n                \n                    Get the library editor key from the specified part type, looking up\nthe specified parts definitions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    typeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The part's type ID.\n\n                                    \n                                \n                                \n                                    roleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        The part's role ID.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFragmentTypeAndRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFragmentTypeAndRole(roleId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/library-route.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the fragment type and role from the part's role ID. This starts\nwith \"fr.\", and might be followed by the role proper, introduced\nby the first dot if any. For instance, \"fr.net.fusisoft.comment\" would just\nreturn \"fr.net.fusisoft.comment\", while \"fr.net.fusisoft.comment:scholarly\"\nwould return \"fr.net.fusisoft.comment\". This is required to navigate to\nthe correct fragment editor, which is the same for each fragment type,\nindependently from its role.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        An object where frTypeId=fragment type ID and frRoleId=fragment role\nID, or null.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stripFragmentRoleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripFragmentRoleId(roleId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/library-route.service.ts:37\n                \n            \n\n\n            \n                \n                    Strip the eventual fragment-role ID from the specified part's role ID.\nFor instance, a part's role ID like \"fr.net.fusisoft.comment:scholarly\"\nbecomes \"fr.net.fusisoft.comment\".\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    roleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The part's role ID.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { PartDefinition, PartEditorKeys } from '../models';\n\n/**\n * Library route service.\n * This service is used to build routes to part and fragment editors,\n * which are hosted in an open list of library modules in the Cadmus\n * application.\n * This architecture allows lazy-loading part- and fragment-editors\n * only when they are required.\n * Each part type with its dumb UI editor component is located in a\n * library, named after the name of the group the part belongs to. For\n * instance, the model and dumb UI editor component for a part belonging\n * to the \"general\" group are located in the \"parts/general/general-ui\"\n * library.\n * In turn, the feature UI editor component for the same part is located\n * in the \"parts/general/general-feature\" library. This library has\n * a route for each part editor. For instance, the NotePart editor\n * component route is \"items/:iid/general/net.fusisoft.note/:pid\", where\n * \":iid\" is the item ID and \":pid\" the part ID.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryRouteService {\n  constructor(\n    @Inject('partEditorKeys') private _partEditorKeys: PartEditorKeys\n  ) {}\n\n  /**\n   * Strip the eventual fragment-role ID from the specified part's role ID.\n   * For instance, a part's role ID like \"fr.net.fusisoft.comment:scholarly\"\n   * becomes \"fr.net.fusisoft.comment\".\n   *\n   * @param roleId The part's role ID.\n   */\n  public stripFragmentRoleId(roleId: string): string {\n    // remove the optional :fr-role from roleId\n    const i = roleId.lastIndexOf(':');\n    if (i > -1) {\n      roleId = roleId.substring(0, i);\n    }\n    return roleId;\n  }\n\n  /**\n   * Get the fragment type and role from the part's role ID. This starts\n   * with \"fr.\", and might be followed by the role proper, introduced\n   * by the first dot if any. For instance, \"fr.net.fusisoft.comment\" would just\n   * return \"fr.net.fusisoft.comment\", while \"fr.net.fusisoft.comment:scholarly\"\n   * would return \"fr.net.fusisoft.comment\". This is required to navigate to\n   * the correct fragment editor, which is the same for each fragment type,\n   * independently from its role.\n   * @param role The part role ID.\n   * @returns An object where frTypeId=fragment type ID and frRoleId=fragment role\n   * ID, or null.\n   */\n  public getFragmentTypeAndRole(\n    roleId: string\n  ): { frTypeId: string; frRoleId: string | null } {\n    if (!roleId || !roleId.startsWith('fr.')) {\n      return null;\n    }\n    const i = roleId.indexOf(':');\n    if (i > -1) {\n      return {\n        frTypeId: roleId.substring(0, i),\n        frRoleId: roleId.substring(i + 1)\n      };\n    } else {\n      return {\n        frTypeId: roleId,\n        frRoleId: null\n      };\n    }\n  }\n\n  /**\n   * Find among the specified parts definitions the one matching the specified\n   * type ID, and eventually role ID when specified.\n   *\n   * @param partDefs The parts definitions.\n   * @param typeId The type ID.\n   * @param roleId The role ID or null.\n   * @returns Part definition or null if not found.\n   */\n  private findPartDefinition(\n    partDefs: PartDefinition[],\n    typeId: string,\n    roleId: string = null\n  ): PartDefinition | null {\n    if (!partDefs) {\n      return null;\n    }\n\n    // if role ID is specified, find both type and role\n    if (roleId) {\n      const reqRoleId = this.stripFragmentRoleId(roleId);\n      return partDefs.find(d => {\n        return (\n          d.typeId === typeId &&\n          this.stripFragmentRoleId(d.roleId) === reqRoleId\n        );\n      });\n    }\n    // else just find type ID\n    return partDefs.find(d => {\n      return d.typeId === typeId;\n    });\n  }\n\n  /**\n   * Get the library editor key from the specified part type, looking up\n   * the specified parts definitions.\n   *\n   * @param typeId The part's type ID.\n   * @param roleId The part's role ID.\n   */\n  public getEditorKeyFromPartType(\n    typeId: string,\n    roleId: string = null\n  ): { partKey: string; frKey?: string } {\n    // find the part type ID\n    const partGroupKey = this._partEditorKeys[typeId];\n    if (!partGroupKey) {\n      return {\n        partKey: 'default'\n      };\n    }\n\n    // additionally find the role ID if specified\n    if (roleId) {\n      const reqRoleId = this.stripFragmentRoleId(roleId);\n      return {\n        partKey: partGroupKey.part,\n        frKey: partGroupKey.fragments[reqRoleId]\n      };\n    }\n    return {\n      partKey: partGroupKey.part\n    };\n  }\n\n  /**\n   * Decompose the specified editor key into part and fragment.\n   * A simple editor key will just provide the same value for both.\n   *\n   * @param key The editor key to decompose.\n   */\n  public decomposeEditorKey(key: string): { partKey: string; frKey: string } {\n    const i = key.indexOf(' ');\n    if (i > -1) {\n      return {\n        partKey: key.substr(0, i),\n        frKey: key.substr(i + 1)\n      };\n    } else {\n      return {\n        partKey: key,\n        frKey: key\n      };\n    }\n  }\n\n  /**\n   * Build the route to the part editor corresponding to the specified\n   * part.\n   *\n   * A part editing route is like\n   * \"/items////?rid=\",\n   * where the role ID is optional, and may include the fragment role ID\n   * as a suffix preceded by a colon.\n   *\n   * A fragment editing route is like\n   * \"/items///fragment///?rid=\",\n   * where the role ID is as above, and the fragment's type ID is derived\n   * from the part's role ID, stripping the eventual fragment's role ID out.\n   *\n   * @param partDefs The parts definitions.\n   * @param itemId The ID of the item the parts belongs to.\n   * @param partId The part's ID.\n   * @param typeId The part's type ID.\n   * @returns Object with a route property and an optional rid property\n   * representing the role ID, which will be rendered as a query parameter.\n   */\n  public buildPartEditorRoute(\n    partDefs: PartDefinition[],\n    itemId: string,\n    partId: string,\n    typeId: string\n  ): string {\n    let route: string;\n    const editorKey = this.getEditorKeyFromPartType(typeId);\n\n    // /items////?rid=\n    route = `/items/${itemId}/${editorKey.partKey}/${typeId}/${partId}`;\n    return route;\n  }\n\n  /**\n   * Build the route to the fragment editor corresponding to the specified\n   * layers part and location.\n   *\n   * @param partDefs The parts definitions.\n   * @param itemId The ID of the item the parts belongs to.\n   * @param partId The part's ID.\n   * @param typeId The part's type ID.\n   * @param roleId The part's role ID.\n   * @param loc The fragment's location.\n   * @returns Object with a route property and an optional rid property\n   * representing the role ID, which will be rendered as a query parameter.\n   */\n  public buildFragmentEditorRoute(\n    partDefs: PartDefinition[],\n    itemId: string,\n    partId: string,\n    typeId: string,\n    roleId: string,\n    loc: string\n  ): { route: string; rid: string | null } {\n    let route: string;\n    const editorKey = this.getEditorKeyFromPartType(typeId, roleId);\n    const { frTypeId, frRoleId } = this.getFragmentTypeAndRole(roleId);\n\n    route = `/items/${itemId}/${editorKey.frKey}/fragment/${partId}/${frTypeId}/${loc}`;\n    return {\n      route: route,\n      rid: frRoleId\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/local-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getKeys\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(prefix: string, session)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/local-storage.service.ts:79\n                \n            \n\n\n            \n                \n                    Remove all the entries whose key starts with the specified prefix.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        key prefix.\n\n                                    \n                                \n                                \n                                    session\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getKeys\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getKeys(prefix: string, session)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/local-storage.service.ts:55\n                \n            \n\n\n            \n                \n                    Get all the stored entities keys starting with the specified prefix.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    prefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        key prefix.\n\n                                    \n                                \n                                \n                                    session\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        true to use session instead of local storage.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string, session: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/local-storage.service.ts:42\n                \n            \n\n\n            \n                \n                    Remove the object with the specified key from the specified storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        key.\n\n                                    \n                                \n                                \n                                    session\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        true to use session instead of local storage.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(key: string, session: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/local-storage.service.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Retrieve the object with the specified key from the specified storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        key.\n\n                                    \n                                \n                                \n                                    session\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        true to use session instead of local storage.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(key: string, value: any, session: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/local-storage.service.ts:29\n                \n            \n\n\n            \n                \n                    Store the specified object with the specified key in the specified storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        key.\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        object.\n\n                                    \n                                \n                                \n                                    session\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        true to use session instead of local storage.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  /**\n   * Retrieve the object with the specified key from the specified storage.\n   * @param key key.\n   * @param session true to use session instead of local storage.\n   */\n  public retrieve(key: string, session: boolean = false): T {\n    const json = session\n      ? sessionStorage.getItem(key)\n      : localStorage.getItem(key);\n\n    if (!json) {\n      return null;\n    }\n    return JSON.parse(json);\n  }\n\n  /**\n   * Store the specified object with the specified key in the specified storage.\n   * @param key key.\n   * @param value object.\n   * @param session true to use session instead of local storage.\n   */\n  public store(key: string, value: any, session: boolean = false) {\n    if (session) {\n      sessionStorage.setItem(key, JSON.stringify(value));\n    } else {\n      localStorage.setItem(key, JSON.stringify(value));\n    }\n  }\n\n  /**\n   * Remove the object with the specified key from the specified storage.\n   * @param key key.\n   * @param session true to use session instead of local storage.\n   */\n  public remove(key: string, session: boolean = false) {\n    if (session) {\n      sessionStorage.removeItem(key);\n    } else {\n      localStorage.removeItem(key);\n    }\n  }\n\n  /**\n   * Get all the stored entities keys starting with the specified prefix.\n   * @param prefix key prefix.\n   * @param session true to use session instead of local storage.\n   */\n  public getKeys(prefix: string, session = false): string[] {\n    const keys: string[] = [];\n    if (session) {\n      for (let i = 0, len = sessionStorage.length; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginCredentials.html":{"url":"interfaces/LoginCredentials.html","title":"interface - LoginCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Login credentials.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResult.html":{"url":"interfaces/LoginResult.html","title":"interface - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Login result.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiration\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiration\n                                    \n                                \n                                \n                                    \n                                        expiration:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Part.html":{"url":"interfaces/Part.html","title":"interface - Part","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Part\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Part. This is the minimal set of properties present in all the\nparts. Each part then adds its own properties, extending this interface.\n\n            \n\n            \n                Extends\n            \n            \n                        HasVersion\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        itemId\n                                \n                                \n                                            Optional\n                                        thesaurusScope\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thesaurusScope\n                                    \n                                \n                                \n                                    \n                                        thesaurusScope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartDefinition.html":{"url":"interfaces/PartDefinition.html","title":"interface - PartDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Part definition in a facet.\n\n            \n\n            \n                Extends\n            \n            \n                        PartTypeIds\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colorKey\n                                \n                                \n                                        description\n                                \n                                \n                                        groupKey\n                                \n                                \n                                        isRequired\n                                \n                                \n                                        name\n                                \n                                \n                                        sortKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorKey\n                                    \n                                \n                                \n                                    \n                                        colorKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupKey\n                                    \n                                \n                                \n                                    \n                                        groupKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRequired\n                                    \n                                \n                                \n                                    \n                                        isRequired:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortKey\n                                    \n                                \n                                \n                                    \n                                        sortKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartEditorKeys.html":{"url":"interfaces/PartEditorKeys.html","title":"interface - PartEditorKeys","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartEditorKeys\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Part type IDs to editor keys mappings. This contains a set of component\ntype IDs (parts and parts + fragments) mapped to editor keys, which are\nused to build their routes in the UI.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        PartGroupKey\n\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/models.ts:242\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartGroup.html":{"url":"interfaces/PartGroup.html","title":"interface - PartGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                A group of parts. Usually the item's parts are grouped according\nto their metadata, and presented in this way.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        label\n                                \n                                \n                                        parts\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                    \n                                \n                                \n                                    \n                                        parts:         Part[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Part[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartGroupKey.html":{"url":"interfaces/PartGroupKey.html","title":"interface - PartGroupKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartGroupKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                The group key for a part type. This is used in EditorKeys objects\nto map a specific part ID with all its fragment IDs into group key(s).\nThe part ID is used alone with normal parts; for layer parts, it is\nused in conjunction with 1 or more fragment type IDs, each mapped to\na corresponding editor key.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fragments\n                                \n                                \n                                        part\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fragments\n                                    \n                                \n                                \n                                    \n                                        fragments:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        part\n                                    \n                                \n                                \n                                    \n                                        part:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartTypeIds.html":{"url":"interfaces/PartTypeIds.html","title":"interface - PartTypeIds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartTypeIds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Part type and role IDs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        roleId\n                                \n                                \n                                        typeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeId\n                                    \n                                \n                                \n                                    \n                                        typeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordChange.html":{"url":"interfaces/PasswordChange.html","title":"interface - PasswordChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Password change data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        confirmPassword\n                                \n                                \n                                        email\n                                \n                                \n                                        newPassword\n                                \n                                \n                                        oldPassword\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldPassword\n                                    \n                                \n                                \n                                    \n                                        oldPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidator.html":{"url":"classes/PasswordValidator.html","title":"class - PasswordValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/validators/password.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isValidPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isValidPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/validators/password.validator.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class PasswordValidator {\n  static isValidPassword(control: AbstractControl): { [key: string]: boolean } {\n    if (!control.value) {\n      return null;\n    }\n\n    if (control.value.length /?|\\\\].*/.test(control.value)) {\n      return {\n        noSymbolInPassword: true\n      };\n    }\n\n    return null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PendingChangesGuard.html":{"url":"guards/PendingChangesGuard.html","title":"guard - PendingChangesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    PendingChangesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/core/src/lib/guards/pending-changes.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canDeactivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: ComponentCanDeactivate)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/guards/pending-changes.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                ComponentCanDeactivate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n// https://stackoverflow.com/questions/35922071/warn-user-of-unsaved-changes-before-leaving-page\n\n/**\n * Interface implemented by those components which require a pending changes\n * guard. The implementor must keep its canDeactivate property up to date,\n * so that it reflects its dirty state.\n */\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PendingChangesGuard\n  implements CanDeactivate {\n  canDeactivate(\n    component: ComponentCanDeactivate\n  ): boolean | Observable {\n    // if there are no pending changes, just allow deactivation; else confirm first\n    return !component || component.canDeactivate()\n      ? true\n      : // NOTE: this warning message will only be shown when navigating\n        // elsewhere within your angular app; when navigating away from your\n        // angular app, the browser will show a generic warning message.\n        // see http://stackoverflow.com/a/42207299/7307355\n        confirm(\n          'Warning: your changes have not been saved. ' +\n            'Press Cancel to go back and save, OK to continue.'\n        );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationModel.html":{"url":"interfaces/RegistrationModel.html","title":"interface - RegistrationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegistrationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RomanNumber.html":{"url":"classes/RomanNumber.html","title":"class - RomanNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RomanNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/roman-number.ts\n        \n\n            \n                Description\n            \n            \n                Roman number converter.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _postAlpha\n                            \n                            \n                                    Private\n                                    Static\n                                _postVal\n                            \n                            \n                                    Private\n                                    Static\n                                _preAlpha\n                            \n                            \n                                    Private\n                                    Static\n                                _preVal\n                            \n                            \n                                    Private\n                                    Static\n                                _romanDigits\n                            \n                            \n                                    Private\n                                    Static\n                                _romanSubdigits\n                            \n                            \n                                    Private\n                                    Static\n                                _romanValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromRoman\n                            \n                            \n                                    Private\n                                    Static\n                                getRomanDigitValue\n                            \n                            \n                                    Private\n                                    Static\n                                isCaseEqual\n                            \n                            \n                                    Private\n                                    Static\n                                isLower\n                            \n                            \n                                    Private\n                                    Static\n                                isUpper\n                            \n                            \n                                    Static\n                                toRoman\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _postAlpha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'm',\n    'd',\n    'c',\n    'l',\n    'x',\n    'v',\n    'M',\n    'D',\n    'C',\n    'L',\n    'X',\n    'V',\n    'I',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/roman-number.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _postVal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    1000000,\n    500000,\n    100000,\n    50000,\n    10000,\n    5000,\n    1000,\n    500,\n    100,\n    50,\n    10,\n    5,\n    1,\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/roman-number.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _preAlpha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'cm',\n    'cd',\n    'xc',\n    'xl',\n    'ix',\n    'iv',\n    'CM',\n    'CD',\n    'XC',\n    'XL',\n    'IX',\n    'IV',\n    'I',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/roman-number.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _preVal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    900000,\n    400000,\n    90000,\n    40000,\n    9000,\n    4000,\n    900,\n    400,\n    90,\n    40,\n    9,\n    4,\n    1,\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/roman-number.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _romanDigits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IVXLCDM'\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/roman-number.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _romanSubdigits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' IIXXCC'\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/roman-number.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _romanValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [1, 5, 10, 50, 100, 500, 1000]\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/roman-number.ts:67\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromRoman\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromRoman(roman: string, allowBar)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/roman-number.ts:146\n                \n            \n\n\n            \n                \n                    Convert the specified Roman number to a numeric value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    roman\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : The Roman number.\n\n                                    \n                                \n                                \n                                    allowBar\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        : True to allow bar-on-letter notation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRomanDigitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRomanDigitValue(digit: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/roman-number.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    digit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isCaseEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isCaseEqual(c1: string, c2: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/roman-number.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isLower\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLower(c: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/roman-number.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isUpper\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUpper(c: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/roman-number.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toRoman\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toRoman(value: number, allowBar, allowPrefix, ancient)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/roman-number.ts:79\n                \n            \n\n\n            \n                \n                    Convert the specified numeric value to a Roman number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The value.\n\n                                    \n                                \n                                \n                                    allowBar\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        True to allow bar on letters. A bar on a letter\nmultiplies its value by 1000.\n\n                                    \n                                \n                                \n                                    allowPrefix\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        True to allow prefix notation.\n\n                                    \n                                \n                                \n                                    ancient\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        True to use the ancient preferred notation, i.e.\nthe preferred epigraphical notation (IIII instead of IV, VIIII instead of IX).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class RomanNumber {\n  private static _postVal = [\n    1000000,\n    500000,\n    100000,\n    50000,\n    10000,\n    5000,\n    1000,\n    500,\n    100,\n    50,\n    10,\n    5,\n    1,\n  ];\n  private static _postAlpha = [\n    'm',\n    'd',\n    'c',\n    'l',\n    'x',\n    'v',\n    'M',\n    'D',\n    'C',\n    'L',\n    'X',\n    'V',\n    'I',\n  ];\n  private static _preVal = [\n    900000,\n    400000,\n    90000,\n    40000,\n    9000,\n    4000,\n    900,\n    400,\n    90,\n    40,\n    9,\n    4,\n    1,\n  ];\n  private static _preAlpha = [\n    'cm',\n    'cd',\n    'xc',\n    'xl',\n    'ix',\n    'iv',\n    'CM',\n    'CD',\n    'XC',\n    'XL',\n    'IX',\n    'IV',\n    'I',\n  ];\n  private static _romanDigits = 'IVXLCDM';\n  private static _romanSubdigits = ' IIXXCC';\n  private static _romanValues = [1, 5, 10, 50, 100, 500, 1000];\n\n  /**\n   * Convert the specified numeric value to a Roman number.\n   *\n   * @param value The value.\n   * @param allowBar True to allow bar on letters. A bar on a letter\n   * multiplies its value by 1000.\n   * @param allowPrefix True to allow prefix notation.\n   * @param ancient True to use the ancient preferred notation, i.e.\n   * the preferred epigraphical notation (IIII instead of IV, VIIII instead of IX).\n   */\n  public static toRoman(\n    value: number,\n    allowBar = true,\n    allowPrefix = true,\n    ancient = false\n  ): string {\n    if (value  0) {\n      while (value >= this._postVal[place]) {\n        sb.push(this._postAlpha[place]);\n        value -= this._postVal[place];\n      }\n\n      if (allowPrefix) {\n        if (value >= this._preVal[place]) {\n          sb.push(this._preAlpha[place]);\n          value -= this._preVal[place];\n        }\n      }\n      place++;\n    }\n\n    if (ancient) {\n      let s = sb.join('');\n      s = s.replace('IV', 'IIII');\n      return s.replace('IX', 'VIII');\n    }\n\n    return sb.join('');\n  }\n\n  private static isLower(c: string): boolean {\n    return c.toLowerCase() === c;\n  }\n\n  private static isUpper(c: string): boolean {\n    return c.toUpperCase() === c;\n  }\n\n  private static isCaseEqual(c1: string, c2: string): boolean {\n    return (\n      (this.isLower(c1) && this.isLower(c2)) ||\n      (this.isUpper(c1) && this.isUpper(c2))\n    );\n  }\n\n  private static getRomanDigitValue(digit: string): number {\n    const i = this._romanDigits.indexOf(digit.toUpperCase());\n    if (i === -1) {\n      return 0;\n    }\n    return this.isLower(digit)\n      ? this._romanValues[i] * 1000\n      : this._romanValues[i];\n  }\n\n  /**\n   * Convert the specified Roman number to a numeric value.\n   *\n   * @param roman: The Roman number.\n   * @param allowBar: True to allow bar-on-letter notation.\n   */\n  public static fromRoman(roman: string, allowBar = true): number {\n    if (!roman) {\n      return 0;\n    }\n    let result = 0;\n    if (!allowBar) {\n      roman = roman.toUpperCase();\n    }\n    for (let index = 0; index  0) {\n        const i = this._romanDigits.indexOf(roman[index]);\n        if (\n          roman[index - 1].toUpperCase() ===\n            this._romanSubdigits[i].toUpperCase() &&\n          this.isCaseEqual(roman[index - 1], roman[index])\n        ) {\n          // tslint:disable-next-line:no-bitwise\n          result -= this.getRomanDigitValue(this._romanSubdigits[i]) \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedRange.html":{"url":"interfaces/SelectedRange.html","title":"interface - SelectedRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/text-layer.service.ts\n        \n\n            \n                Description\n            \n            \n                The selected range of text. This reflects rangy's Range useful properties;\nin fact, you can just pass a Range to any method requiring this parameter type,\nbut this adds a level of indirection useful in testing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonAncestorContainer\n                                \n                                \n                                        endContainer\n                                \n                                \n                                        endOffset\n                                \n                                \n                                        startContainer\n                                \n                                \n                                        startOffset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonAncestorContainer\n                                    \n                                \n                                \n                                    \n                                        commonAncestorContainer:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endContainer\n                                    \n                                \n                                \n                                    \n                                        endContainer:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endOffset\n                                    \n                                \n                                \n                                    \n                                        endOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startContainer\n                                    \n                                \n                                \n                                    \n                                        startContainer:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startOffset\n                                    \n                                \n                                \n                                    \n                                        startOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TokenPoint } from '../token-point';\nimport { TokenLocation } from '../token-location';\nimport { TokenTextLayerLine, TextCoords } from '../models';\nimport * as rangy from 'rangy';\n\n// requires rangy:\n// npm install --save rangy\n// npm install --save @types/rangy\n\n/**\n * The selected range of text. This reflects rangy's Range useful properties;\n * in fact, you can just pass a Range to any method requiring this parameter type,\n * but this adds a level of indirection useful in testing.\n */\nexport interface SelectedRange {\n  commonAncestorContainer: Node;\n  startContainer: Node;\n  startOffset: number;\n  endContainer: Node;\n  endOffset: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TextLayerService {\n  private readonly _wsRegex : RegExp;\n\n  constructor() {\n    this._wsRegex = new RegExp('^\\\\s$', 'g');\n  }\n\n  private isWhitespace(c: string): boolean {\n    if (!c) {\n      return false;\n    }\n    if (c.length !== 1) {\n      c = c.charAt(0);\n    }\n    return this._wsRegex.test(c);\n  }\n\n  /**\n   * Extract the lines with their tokens from the specified text.\n   * @param text the source text.\n   * @returns lines.\n   */\n  public getLines(text: string): TokenTextLayerLine[] {\n    const results: TokenTextLayerLine[] = [];\n    if (!text) {\n      return results;\n    }\n    const lines = text.split('\\n');\n\n    for (let y = 0; y \n   *  this is line 1.\n   *  here's a fragment.\n   * \n   */\n\n  /**\n   * Render the opening span for a layer fragment.\n   * @param loc location.\n   * @param locPortion the index of the token's portion (0-N). This is used\n   * to build a unique ID for each HTML span rendering a layer fragment.\n   * @param sb the target strings array.\n   * @param isSelected true if selected.\n   */\n  private renderOpeningSpan(\n    loc: TokenLocation,\n    locPortion: number,\n    sb: string[],\n    isSelected: boolean\n  ) {\n    sb.push(\n      ``\n    );\n  }\n\n  /**\n   * Render the specified token intersecting the specified end-fragment location.\n   * @param pt The point.\n   * @param token The token.\n   * @param sb The target array.\n   */\n  private renderTokenAtEnd(pt: TokenPoint, token: string, sb: string[]): void {\n    if (pt.at > 0) {\n      // ...to]\n      sb.push(token.substr(pt.at - 1, pt.run));\n      sb.push('');\n      // ...ken\n      if (pt.at - 1 + pt.run ');\n    }\n  }\n\n  /**\n   * Render the specified token intersecting the specified single-point location.\n   * The received token starts and ends a single-token range.\n   * @param loc location.\n   * @param token token.\n   * @param sb target strings array.\n   * @param isSelected True if the token is selected.\n   */\n  private renderTokenAtPointStart(\n    loc: TokenLocation,\n    token: string,\n    sb: string[],\n    isSelected: boolean\n  ) {\n    // 1.token's left-part\n    if (loc.primary.at > 0) {\n      // to...\n      sb.push(token.substr(0, loc.primary.at - 1));\n    }\n\n    // 2.span: [\n    this.renderOpeningSpan(loc, 0, sb, isSelected);\n\n    // 3.token's right-part (...ken]/...ke]n or ...token])\n    this.renderTokenAtEnd(loc.primary, token, sb);\n  }\n\n  /**\n   * Render the specified token intersecting the specified range start location.\n   * The received token starts a multi-tokens range.\n   * @param loc location.\n   * @param locPortion the index of the token's portion (0-N). This is used\n   * to build a unique ID for each HTML span rendering a layer fragment.\n   * @param token token.\n   * @param sb target strings array.\n   * @param isSelected True if the token is selected.\n   */\n  private renderTokenAtRangeStart(\n    loc: TokenLocation,\n    token: string,\n    sb: string[],\n    isSelected: boolean\n  ) {\n    // 1.token's left-part\n    if (loc.primary.at > 0) {\n      // to...\n      sb.push(token.substr(0, loc.primary.at));\n    }\n\n    // 2.span: [\n    this.renderOpeningSpan(loc, 0, sb, isSelected);\n\n    // 3.token's right-part (...ken or ...token)\n    if (loc.primary.at > 0) {\n      // ...ken\n      sb.push(token.substr(loc.primary.at - 1));\n    } else {\n      // ...token\n      sb.push(token);\n    }\n  }\n\n  private renderTokenAtStart(\n    loc: TokenLocation,\n    token: string,\n    sb: string[],\n    isSelected: boolean\n  ): boolean {\n    if (!loc.secondary) {\n      // single\n      this.renderTokenAtPointStart(loc, token, sb, isSelected);\n      return false;\n    } else {\n      // range\n      this.renderTokenAtRangeStart(loc, token, sb, isSelected);\n      return true;\n    }\n  }\n\n  /**\n   * Render to HTML the base text decorated with its layer fragments.\n   * @param text The base text.\n   * @param locations The locations of all the fragments\n   * of the same type to be rendered on top of the base text.\n   * @param selectedLoc The optional location of the selected\n   * fragment if any. The selected fragment gets decorated with an additional\n   * class value.\n   */\n  public render(\n    text: string,\n    locations: TokenLocation[],\n    selectedLoc: TokenLocation = null\n  ): string {\n    if (!text) {\n      return '';\n    }\n\n    // get lines from text\n    const sb: string[] = [];\n    const lines = this.getLines(text);\n    let loc: TokenLocation = null;\n    let tokenSelected = false;\n\n    if (!locations) {\n      locations = [];\n    }\n\n    // for each line in text\n    sb.push('');\n    for (let y = 0; y `);\n\n      // reopen a span if continuing a fragment from prev line\n      if (loc) {\n        this.renderOpeningSpan(loc, y + 1 - loc.primary.y, sb, tokenSelected);\n      }\n\n      // for each token in line\n      const line = lines[y];\n      for (let x = 0; x  0) {\n          sb.push(' ');\n        }\n\n        const token = line.tokens[x];\n\n        // if inside a fragment, check if this token is the last\n        if (loc && loc.secondary) {\n          if (loc.secondary.y === y + 1 && loc.secondary.x === x + 1) {\n            this.renderTokenAtEnd(loc.secondary, token, sb);\n            loc = null;\n          } else {\n            sb.push(token);\n          }\n        } else {\n          // else, check if this token starts a fragment\n          loc = locations.find(l => {\n            return l.primary.y === y + 1 && l.primary.x === x + 1;\n          });\n          if (loc) {\n            tokenSelected = selectedLoc ? loc.overlaps(selectedLoc) : false;\n            if (!this.renderTokenAtStart(loc, token, sb, tokenSelected)) {\n              loc = null;\n            }\n          } else {\n            sb.push(token);\n          }\n        }\n      }\n\n      // close a span if pending at p end\n      if (loc) {\n        sb.push('');\n      }\n      sb.push('');\n    }\n    sb.push('');\n    return sb.join('');\n  }\n\n  /*\n    Location: starting from user selection on a rendered text, get the corresponding\n    layer fragment location. This differs according to the purpose of the location\n    to be got: if getting a location for an existing fragment, at least 1 decorated\n    text (span) should be included in the selection, which does not require to be\n    exact; if getting a location for a new fragment, no decorated text (span) can be\n    included in the selection (two fragments in the same layer can never overlap),\n    which must be exact.\n  */\n\n  /**\n   * Get the Y bounds from the specified selection.\n   * @param range The selection range.\n   * @param forNew True if getting bounds for a new fragment.\n   * @returns Array where [0]=min and [1]=max.\n   */\n  private getYBoundsFromRange(range: SelectedRange, forNew: boolean): number[] {\n    let p: Element = null;\n\n    switch (range.commonAncestorContainer.nodeType) {\n      case Node.TEXT_NODE:\n        // single-p selection, parent=p\n        p = range.commonAncestorContainer.parentElement;\n        if (forNew && (p.nodeName !== 'P' || !p.hasAttribute('id'))) {\n          return null;\n        }\n        if (p.nodeName === 'SPAN') {\n          p = p.parentElement;\n        }\n        const y = parseInt(p.getAttribute('id').substr(1), 10);\n        return [y, y];\n\n      case Node.ELEMENT_NODE:\n        // div only is allowed; in this case, it's a multi-p range\n        if (range.commonAncestorContainer.nodeName !== 'DIV') {\n          return null;\n        }\n        let yMin = 0,\n          yMax = 0;\n        let inside = false;\n        for (\n          let i = 0;\n          i child).firstElementChild) {\n            return null;\n          }\n          // collect y if inside\n          if (inside) {\n            const iy = parseInt(\n              (child).getAttribute('id').substr(1),\n              10\n            );\n            if (!yMin || iy  yMax) {\n              yMax = iy;\n            }\n            // check if we have exited the last p\n            if (child.contains(range.endContainer)) {\n              break;\n            }\n          }\n        }\n        return [yMin, yMax];\n    }\n  }\n\n  private locatePrevSpace(line: string, index: number): number {\n    while (index > -1 && line.charAt(index) !== ' ') {\n      index--;\n    }\n    return index;\n  }\n\n  private locateNextSpace(line: string, index: number): number {\n    while (index  0 && line.charAt(selEnd - 1) === ' ') {\n      selEnd--;\n    }\n    return [selStart, selEnd];\n  }\n\n  /**\n   * Get the start coordinates for the selected range and line.\n   * @param range The selected range.\n   * @param line The reference text line.\n   */\n  private getStartCoordsFromRange(\n    selStart: number,\n    selEnd: number,\n    line: string\n  ): TextCoords {\n    // get adjusted selection bounds\n    const selBounds = this.getAdjustedSelectionBounds(selStart, selEnd, line);\n    // get the bounds of the first selected token\n    const tokBounds = this.getTokenBounds(line, selBounds[0]);\n\n    // calculate x by counting the tokens before the target token\n    let x = 1;\n    let j = tokBounds[0] - 1;\n    while (j > -1) {\n      if (line.charAt(j) === ' ') {\n        x++;\n      }\n      j--;\n    }\n\n    // calculate at,run only when either of these is true:\n    // (a) selection starts past the 1st char of the token (al[pha);\n    // (b) selection ends before the last char of the token (al]pha);\n    // run is calculated only if (b) is true.\n    let at = 0,\n      run = 0;\n    if (selBounds[0] > tokBounds[0] || selBounds[1]  -1) {\n      if (line.charAt(j) === ' ') {\n        x++;\n      }\n      j--;\n    }\n\n    // calculate at,run only when selection ends before the 1st char of the token\n    // (al]pha); run is calculated only if at is calculated.\n    let at = 0, run = 0;\n    if (selBounds[1]  tokBounds[0] ? 1 + selBounds[0] - tokBounds[0] : 1;\n      run = selBounds[1] - tokBounds[0];\n    }\n\n    return {\n      y: 0,\n      x: x,\n      at: at,\n      run: run\n    };\n  }\n\n  private getSpanLocFromId(id: string): TokenLocation {\n    if (!id) {\n      return null;\n    }\n    const r = new RegExp('^f([-\\\\d+.@x]+)', 'g');\n    const m = r.exec(id);\n    if (!m) {\n      return null;\n    }\n    return TokenLocation.parse(m[1]);\n  }\n\n  private visitNodes(node: Node, visitor: (current: Node) => boolean) {\n    if (!visitor(node)) {\n      return;\n    }\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      for (let i = 0; i  {\n      if (current === range.startContainer) {\n        inside = true;\n      }\n      if (\n        current.nodeType === Node.ELEMENT_NODE &&\n        current.nodeName === 'SPAN'\n      ) {\n        span = current;\n        return false;\n      }\n      if (current === range.endContainer) {\n        inside = false;\n      }\n      return true;\n    });\n\n    return span;\n  }\n\n  /**\n   * Get the location corresponding to the user selection,\n   * for editing the first fragment included in it.\n   * @param range The selected range. You can get it from the\n   * current selection using getSelectedRange().\n   * @returns The token location or null.\n   */\n  public getSelectedLocationForEdit(range: SelectedRange): TokenLocation {\n    if (!range) {\n      return null;\n    }\n    // just find the first descendant span in selection\n    let span: Element = null;\n    switch (range.commonAncestorContainer.nodeType) {\n      case Node.ELEMENT_NODE:\n        span = range.commonAncestorContainer;\n        if (span.nodeName !== 'SPAN') {\n          span = this.findFirstDescendantSpan(range);\n        }\n        break;\n      case Node.TEXT_NODE:\n        span = range.commonAncestorContainer.parentElement;\n        if (\n          span &&\n          (span.nodeType !== Node.ELEMENT_NODE || span.nodeName !== 'SPAN')\n        ) {\n          span = null;\n        }\n        break;\n    }\n\n    return span ? this.getSpanLocFromId(span.getAttribute('id')) : null;\n  }\n\n  private textLineToString(line: TokenTextLayerLine) {\n    if (!line || !line.tokens) {\n      return '';\n    }\n    return line.tokens.join(' ');\n  }\n\n  /**\n   * Get the location corresponding to the user selection,\n   * for adding a new fragment with the same extension.\n   * @param range The selected range. You can get it from the\n   * current selection using getSelectedRange().\n   * @param text The full base text.\n   * @returns TokenLocation The token location or null.\n   */\n  public getSelectedLocationForNew(\n    range: SelectedRange,\n    text: string\n  ): TokenLocation {\n    if (!range) {\n      return null;\n    }\n    // get y bounds (min, max; equal if single-line)\n    const yBounds = this.getYBoundsFromRange(range, true);\n    if (!yBounds) {\n      return null;\n    }\n\n    // get lines and calculate start/end coords\n    const lines = this.getLines(text);\n    const startLine = this.textLineToString(lines[yBounds[0] - 1]);\n    const endLine = this.textLineToString(lines[yBounds[1] - 1]);\n    const startLineEndOffset =\n      yBounds[0] !== yBounds[1] ? endLine.length : range.endOffset;\n    const start = this.getStartCoordsFromRange(\n      range.startOffset,\n      startLineEndOffset,\n      startLine\n    );\n    start.y = yBounds[0];\n\n    const end = this.getEndCoordsFromRange(\n      range.startOffset,\n      range.endOffset,\n      endLine\n    );\n    end.y = yBounds[1];\n    const singleLine = start.y === end.y;\n    const singleToken = singleLine && start.x === end.x;\n\n    const sb = [];\n    // start: y.x\n    sb.push(`${start.y}.${start.x}`);\n\n    if (singleToken) {\n      // single token: check for at,run\n      if (start.at) {\n        sb.push(`@${start.at}`);\n        if (start.run > 1) {\n          sb.push(`x${start.run}`);\n        }\n      }\n    } else {\n      // not a single token\n      // first token\n      if (start.at) {\n        sb.push(`@${start.at}x${start.run}`);\n      }\n      // last token\n      sb.push(`-${end.y}.${end.x}`);\n      if (end.at) {\n        sb.push(`@1x${end.run}`);\n      }\n    }\n    return TokenLocation.parse(sb.join(''));\n  }\n\n  /**\n   * Get the currently selected range in the browser's document.\n   * This uses the rangy library.\n   */\n  public getSelectedRange(): Range {\n    const sel = rangy.getSelection();\n    if (sel.isCollapsed) {\n      return null;\n    }\n    return sel.getRangeAt(0);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextCoords.html":{"url":"interfaces/TextCoords.html","title":"interface - TextCoords","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TextCoords\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Token-based text coordinates.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        at\n                                \n                                \n                                            Optional\n                                        run\n                                \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        at\n                                    \n                                \n                                \n                                    \n                                        at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        run\n                                    \n                                \n                                \n                                    \n                                        run:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextLayerPart.html":{"url":"interfaces/TextLayerPart.html","title":"interface - TextLayerPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TextLayerPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Text layer part. This represents a special type of part,\nwhose only content is a collection of fragments.\n\n            \n\n            \n                Extends\n            \n            \n                        Part\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fragments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fragments\n                                    \n                                \n                                \n                                    \n                                        fragments:         Fragment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Fragment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextRange.html":{"url":"classes/TextRange.html","title":"class - TextRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/text-range.ts\n        \n\n            \n                Description\n            \n            \n                A simple text range, expressed as start character index and characters\nlength. This is used for misspellings operations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                length\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                end\n                            \n                            \n                                    Public\n                                isEqual\n                            \n                            \n                                    Static\n                                parse\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(start: number, length: number)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/text-range.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        length\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            length\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/text-range.ts:14\n                            \n                        \n\n                \n                    \n                        The length in characters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/text-range.ts:9\n                            \n                        \n\n                \n                    \n                        The start character index.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            end\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    end()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/text-range.ts:47\n                \n            \n\n\n            \n                \n                    Get the inclusive end of the range.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(other: TextRange)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/text-range.ts:56\n                \n            \n\n\n            \n                \n                    True if this range value is equal to the other range value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                TextRange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other range.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(text: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/text-range.ts:22\n                \n            \n\n\n            \n                \n                    Parse the specified text representing a range, in the form \"startxlength\"\nor just \"start\" when length is 1.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TextRange\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/text-range.ts:67\n                \n            \n\n\n            \n                \n                    Get a parsable textual representation of this range.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Text.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TextRange {\n  /**\n   * The start character index.\n   */\n  public start: number;\n\n  /**\n   * The length in characters.\n   */\n  public length: number;\n\n  /**\n   * Parse the specified text representing a range, in the form \"startxlength\"\n   * or just \"start\" when length is 1.\n   *\n   * @param text The text.\n   */\n  public static parse(text: string): TextRange {\n    if (!text) {\n      return null;\n    }\n    // [1]=start, ([2]=length)\n    const m = new RegExp('(\\\\d+)(?:[×x](\\\\d+))?', 'gm').exec(text);\n    if (!m) {\n      return null;\n    }\n    return new TextRange(\n      parseInt(m[1], 10),\n      m[2]? parseInt(m[2], 10) : 1);\n  }\n\n  constructor(start: number, length: number) {\n    if (start  0? n - 1 : 0;\n  }\n\n  /**\n   * True if this range value is equal to the other range value.\n   * @param other The other range.\n   */\n  public isEqual(other: TextRange): boolean {\n    if (!other) {\n      return false;\n    }\n    return this.start === other.start && this.length === other.length;\n  }\n\n  /**\n   * Get a parsable textual representation of this range.\n   * @returns Text.\n   */\n  public toString(): string {\n    return this.length === 1\n      ? this.start.toString()\n      : `${this.start}×${this.length}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThesauriSet.html":{"url":"interfaces/ThesauriSet.html","title":"interface - ThesauriSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ThesauriSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                A set of thesauri which get passed to an editor component.\nIn the set, each thesaurus is identified by an arbitrarily\ndefined key, which is unique only within the context of the editor\nconsuming the set, and refers to frontend only.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        Thesaurus\n\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/models.ts:174\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thesaurus.html":{"url":"interfaces/Thesaurus.html","title":"interface - Thesaurus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Thesaurus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                A set of thesaurus entries.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entries\n                                \n                                \n                                        id\n                                \n                                \n                                        language\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                    \n                                \n                                \n                                    \n                                        entries:     ThesaurusEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThesaurusEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThesaurusEntry.html":{"url":"interfaces/ThesaurusEntry.html","title":"interface - ThesaurusEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ThesaurusEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                A single entry in a thesaurus.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThesaurusFilter.html":{"url":"interfaces/ThesaurusFilter.html","title":"interface - ThesaurusFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ThesaurusFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Filter for thesauri.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        isAlias\n                                \n                                \n                                            Optional\n                                        language\n                                \n                                \n                                        pageNumber\n                                \n                                \n                                        pageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAlias\n                                    \n                                \n                                \n                                    \n                                        isAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenLocation.html":{"url":"classes/TokenLocation.html","title":"class - TokenLocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenLocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/token-location.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                    Optional\n                                secondary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                compareTo\n                            \n                            \n                                    Public\n                                isRange\n                            \n                            \n                                    Public\n                                overlaps\n                            \n                            \n                                    Static\n                                parse\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(primary: TokenPoint, secondary: TokenPoint)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/token-location.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primary\n                                                  \n                                                        \n                                                                        TokenPoint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        secondary\n                                                  \n                                                        \n                                                                        TokenPoint\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            primary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenPoint\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/token-location.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            secondary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenPoint\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/token-location.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            compareTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareTo(other: TokenLocation)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-location.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                TokenLocation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isRange()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-location.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            overlaps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    overlaps(other: TokenLocation)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-location.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                TokenLocation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(text: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-location.ts:14\n                \n            \n\n\n            \n                \n                    Parse the text representing a token-based location,\nwhich has the form \"primary-secondary\", or just \"primary\",\nwhere each of these points has the format required by\nTokenPoint.parse (e.g. Y.X or Y.X@AxR or Y.X@A, where R=1).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to parse.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TokenLocation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-location.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TokenPoint } from './token-point';\n\nexport class TokenLocation {\n  public primary: TokenPoint;\n  public secondary?: TokenPoint;\n\n  /**\n   * Parse the text representing a token-based location,\n   * which has the form \"primary-secondary\", or just \"primary\",\n   * where each of these points has the format required by\n   * TokenPoint.parse (e.g. Y.X or Y.X@AxR or Y.X@A, where R=1).\n   * @param text The text to parse.\n   */\n  public static parse(text: string): TokenLocation {\n    if (!text) {\n      return null;\n    }\n    const pair = text.split('-', 2);\n    if (pair.length === 0) {\n      return null;\n    }\n\n    return new TokenLocation(\n      TokenPoint.parse(pair[0]),\n      pair.length > 1 ? TokenPoint.parse(pair[1]) : null\n    );\n  }\n\n  constructor(primary: TokenPoint, secondary: TokenPoint = null) {\n    this.primary = primary;\n    this.secondary = secondary;\n  }\n\n  public isRange(): boolean {\n    // note that != checks for both null and undefined, whereas !== does not\n    return this.secondary != null;\n  }\n\n  public toString(): string {\n    return this.secondary\n      ? `${this.primary.toString()}-${this.secondary.toString()}`\n      : this.primary.toString();\n  }\n\n  public compareTo(other: TokenLocation): number {\n    const n1 = this.primary.compareTo(other.primary);\n    if (n1 !== 0) {\n      return n1;\n    }\n    if (this.secondary && other.secondary) {\n      return this.secondary.compareTo(other.secondary);\n    }\n    if (!this.secondary && !other.secondary) {\n      return 0;\n    }\n    return this.secondary ? 1 : -1;\n  }\n\n  public overlaps(other: TokenLocation): boolean {\n    // empty coords never overlaps\n    if (!other.primary) {\n      return false;\n    }\n\n    // (in the following comments A=this and B=other)\n    // 1) if B is a point, cases are:\n    //  1.1. A is a point: A overlaps with B (both points) if they're equal.\n    //  1.2. A is a range: A (range) overlaps with B (point)\n    //       when A-left is = B-right.\n    if (other.secondary == null) {\n      return !this.secondary\n        ? this.primary.integralCompareTo(other.primary) === 0\n        : this.primary.compareTo(other.primary) = 0;\n    }\n\n    // 2) if B is a range, cases are:\n    // 2.1. A is a point: A (point) overlaps with B (range) when B-left = A\n    // 2.2. A is a range: A (range) overlaps with B (range)\n    //  when B-right >= A-left and B-left = 0\n      : other.secondary.compareTo(this.primary) >= 0 &&\n          other.primary.compareTo(this.secondary) \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenPoint.html":{"url":"classes/TokenPoint.html","title":"class - TokenPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/token-point.ts\n        \n\n            \n                Description\n            \n            \n                A single point in a token-based textual location.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                at\n                            \n                            \n                                    Optional\n                                run\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                compareTo\n                            \n                            \n                                    Public\n                                integralCompareTo\n                            \n                            \n                                    Static\n                                parse\n                            \n                            \n                                    Public\n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(y: number, x: number, at: number, run: number)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/token-point.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        at\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        run\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/token-point.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            run\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/token-point.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            x\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/token-point.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/lib/token-point.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            compareTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareTo(other: TokenPoint)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-point.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                TokenPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            integralCompareTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    integralCompareTo(other: TokenPoint)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-point.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                TokenPoint\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(text: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-point.ts:15\n                \n            \n\n\n            \n                \n                    Parse the specified text representing a token-based point location.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to parse, in the forms Y.X or Y.X\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TokenPoint\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/token-point.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TokenPoint {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n\n  /**\n   * Parse the specified text representing a token-based point location.\n   * @param text The text to parse, in the forms Y.X or Y.X@AxR or\n   * Y.X@A, where R=1.\n   */\n  public static parse(text: string): TokenPoint {\n    const r = new RegExp('^(\\\\d+)\\\\.(\\\\d+)(?:@(\\\\d+)(?:x(\\\\d+))?)?$', 'g');\n    const m = r.exec(text);\n    if (!m) {\n      return null;\n    }\n    const pt = new TokenPoint(\n      parseInt(m[1], 10),\n      parseInt(m[2], 10),\n      m[3] ? parseInt(m[3], 10) : 0\n    );\n\n    if (m[3]) {\n      if (m[4]) {\n        pt.run = m[4] ? parseInt(m[4], 10) : 1;\n      } else {\n        pt.run = 1;\n      }\n    }\n    return pt;\n  }\n\n  constructor(y: number, x: number, at = 0, run = 0) {\n    this.y = y;\n    this.x = x;\n    this.at = at;\n    this.run = run;\n  }\n\n  public toString(): string {\n    let s = `${this.y}.${this.x}`;\n\n    if (this.at > 0 && this.run > 0) {\n      s += `@${this.at}`;\n      if (this.run !== 1) {\n        s += `x${this.run}`;\n      }\n    }\n    return s;\n  }\n\n  public compareTo(other: TokenPoint): number {\n    if (this.y !== other.y) {\n      return this.y - other.y;\n    }\n    if (this.x !== other.x) {\n      return this.x - other.x;\n    }\n\n    if (this.at !== other.at) {\n      return this.at - other.at;\n    }\n    return this.run - other.run;\n  }\n\n  public integralCompareTo(other: TokenPoint): number {\n    if (this.y !== other.y) {\n      return this.y - other.y;\n    }\n    if (this.x !== other.x) {\n      return this.x - other.x;\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenTextLayerLine.html":{"url":"interfaces/TokenTextLayerLine.html","title":"interface - TokenTextLayerLine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenTextLayerLine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                A text line in a base text part.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tokens\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tokens\n                                    \n                                \n                                \n                                    \n                                        tokens:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Authenticated user data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        emailConfirmed\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                            Optional\n                                        lockoutEnabled\n                                \n                                \n                                            Optional\n                                        lockoutEnd\n                                \n                                \n                                        roles\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailConfirmed\n                                    \n                                \n                                \n                                    \n                                        emailConfirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lockoutEnabled\n                                    \n                                \n                                \n                                    \n                                        lockoutEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lockoutEnd\n                                    \n                                \n                                \n                                    \n                                        lockoutEnd:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserFilter.html":{"url":"interfaces/UserFilter.html","title":"interface - UserFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                User filter parameters.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                        pageNumber\n                                \n                                \n                                        pageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/models.ts\n        \n\n            \n                Description\n            \n            \n                Essential information about a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HasVersion {\n  timeCreated: Date;\n  creatorId: string;\n  timeModified: Date;\n  userId: string;\n}\n\n/**\n * A page of data.\n */\nexport interface DataPage {\n  pageNumber: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n  items: T[];\n}\n\n/**\n * A wrapper for a value or an optional error message.\n */\nexport interface ErrorWrapper {\n  value?: T;\n  error?: string;\n}\n\n/**\n * Item's properties, excluding its parts.\n */\nexport interface Item extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  parts?: Part[];\n}\n\n/**\n * Filter for items.\n */\nexport interface ItemFilter {\n  pageNumber: number;\n  pageSize: number;\n  title?: string;\n  description?: string;\n  facetId?: string;\n  groupId?: string;\n  flags?: number;\n  minModified?: Date;\n  maxModified?: Date;\n  userId?: string;\n}\n\n/**\n * Essential information about an item.\n */\nexport interface ItemInfo extends HasVersion {\n  id: string;\n  title: string;\n  description: string;\n  facetId: string;\n  groupId: string;\n  sortKey: string;\n  flags: number;\n  payload?: any;\n}\n\n/**\n * Part type and role IDs.\n */\nexport interface PartTypeIds {\n  typeId: string;\n  roleId: string;\n}\n\n/**\n * Part. This is the minimal set of properties present in all the\n * parts. Each part then adds its own properties, extending this interface.\n */\nexport interface Part extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  thesaurusScope?: string;\n}\n\n/**\n * Essential information about a layer part.\n */\nexport interface LayerPartInfo extends HasVersion, PartTypeIds {\n  id: string;\n  itemId: string;\n  fragmentCount: number;\n  isAbsent: boolean;\n}\n\n/**\n * Text layer fragment. This is the minimal set of properties present in all the\n * fragments. Each fragment then adds its own properties, extending this\n * interface.\n * Every fragment has a location, and can be enriched with the corresponding\n * base text when used in views.\n */\nexport interface Fragment {\n  location: string;\n  baseText?: string;\n}\n\n/**\n * Text layer part. This represents a special type of part,\n * whose only content is a collection of fragments.\n */\nexport interface TextLayerPart extends Part {\n  fragments: Fragment[];\n}\n\n/**\n * A text line in a base text part.\n */\nexport interface TokenTextLayerLine {\n  y: number;\n  tokens: string[];\n}\n\n/**\n * Token-based text coordinates.\n */\nexport interface TextCoords {\n  y: number;\n  x: number;\n  at?: number;\n  run?: number;\n}\n\n/**\n * Layer reconciliation hint for a single fragment.\n */\nexport interface LayerHint {\n  location: string;\n  editOperation: string;\n  patchOperation?: string;\n  impactLevel: number;\n  description?: string;\n}\n\n/**\n * A single entry in a thesaurus.\n */\nexport interface ThesaurusEntry {\n  id: string;\n  value: string;\n}\n\n/**\n * A set of thesaurus entries.\n */\nexport interface Thesaurus {\n  id: string;\n  language: string;\n  entries: ThesaurusEntry[];\n}\n\n/**\n * A set of thesauri which get passed to an editor component.\n * In the set, each thesaurus is identified by an arbitrarily\n * defined key, which is unique only within the context of the editor\n * consuming the set, and refers to frontend only.\n */\nexport interface ThesauriSet {\n  [key: string]: Thesaurus;\n}\n\n/**\n * Filter for thesauri.\n */\nexport interface ThesaurusFilter {\n  pageNumber: number;\n  pageSize: number;\n  id?: string;\n  isAlias?: boolean;\n  language?: string;\n}\n\n/**\n * Part definition in a facet.\n */\nexport interface PartDefinition extends PartTypeIds {\n  name: string;\n  description: string;\n  isRequired: boolean;\n  colorKey: string;\n  groupKey: string;\n  sortKey: string;\n}\n\n/**\n * Fragment definition in a facet.\n */\n/**\n * Facet definition.\n */\nexport interface FacetDefinition {\n  id: string;\n  label: string;\n  colorKey: string;\n  description: string;\n  partDefinitions: PartDefinition[];\n}\n\n/**\n * Flag definition.\n */\nexport interface FlagDefinition {\n  id: number;\n  label: string;\n  description: string;\n  colorKey: string;\n}\n\n/**\n * The group key for a part type. This is used in EditorKeys objects\n * to map a specific part ID with all its fragment IDs into group key(s).\n * The part ID is used alone with normal parts; for layer parts, it is\n * used in conjunction with 1 or more fragment type IDs, each mapped to\n * a corresponding editor key.\n */\nexport interface PartGroupKey {\n  part: string;\n  fragments?: { [key: string]: string };\n}\n\n/**\n * Part type IDs to editor keys mappings. This contains a set of component\n * type IDs (parts and parts + fragments) mapped to editor keys, which are\n * used to build their routes in the UI.\n */\nexport interface PartEditorKeys {\n  [key: string]: PartGroupKey;\n}\n\n/**\n * A group of parts. Usually the item's parts are grouped according\n * to their metadata, and presented in this way.\n */\nexport interface PartGroup {\n  key: string;\n  label: string;\n  parts: Part[];\n}\n\n/**\n * Essential information about a user.\n */\nexport interface UserInfo {\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\n/**\n * Login credentials.\n */\nexport interface LoginCredentials {\n  name: string;\n  password: string;\n}\n\n/**\n * Login result.\n */\nexport interface LoginResult {\n  token: string;\n  expiration: Date;\n}\n\nexport interface ExistResult {\n  entry: string;\n  isExisting: boolean;\n}\n\nexport interface RegistrationModel {\n  email: string;\n  name: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\n/**\n * Authenticated user data.\n */\nexport interface User {\n  userName: string;\n  email: string;\n  roles: string[];\n  emailConfirmed?: boolean;\n  firstName: string;\n  lastName: string;\n  lockoutEnabled?: boolean;\n  lockoutEnd?: Date;\n}\n\n/**\n * User filter parameters.\n */\nexport interface UserFilter {\n  pageNumber: number;\n  pageSize: number;\n  name?: string;\n}\n\n/**\n * Password change data.\n */\nexport interface PasswordChange {\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/util.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deepCopy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/lib/services/util.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deepCopy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deepCopy(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/lib/services/util.service.ts:13\n                \n            \n\n\n            \n                \n                    Make a deep copy of the specified object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to be copied.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n  constructor() {}\n\n  /**\n   * Make a deep copy of the specified object.\n   * @param obj The object to be copied.\n   */\n  public deepCopy(obj: any): any {\n    let copy: any;\n\n    // handle the 3 simple types, and null or undefined\n    if (null == obj || 'object' !== typeof obj) return obj;\n\n    // handle date\n    if (obj instanceof Date) {\n      copy = new Date();\n      copy.setTime(obj.getTime());\n      return copy;\n    }\n\n    // handle array\n    if (obj instanceof Array) {\n      copy = [];\n      for (let i = 0, len = obj.length; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationResult.html":{"url":"interfaces/ValidationResult.html","title":"interface - ValidationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/services/json-schema.service.ts\n        \n\n            \n                Description\n            \n            \n                The response of a validation result.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errorsText\n                                \n                                \n                                        valid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorsText\n                                    \n                                \n                                \n                                    \n                                        errorsText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error text from the validator\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valid\n                                    \n                                \n                                \n                                    \n                                        valid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the result is valid or not\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, InjectionToken, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as Ajv from 'ajv';\n\n// npm i ajv --save\n// https://tane.dev/2019/09/validating-data-with-json-schema-angular-and-typescript/\n\n/**\n * The response of a validation result.\n */\nexport interface ValidationResult {\n  /**\n   * If the result is valid or not\n   */\n  valid: boolean;\n\n  /**\n   * Error text from the validator\n   */\n  errorsText: string;\n}\n\n/**\n * JSON schema validation service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonSchemaService {\n  private readonly _ajv: Ajv.Ajv;\n\n  constructor(private readonly http: HttpClient) {\n    this._ajv = new Ajv({ allErrors: true });\n  }\n\n  /**\n   * Add the specified schema to the validator schema set. If a schema with\n   * the same name already exists, nothing happens unless you pass replace=true.\n   *\n   * @param name The name of the schema; this will be used as the key to store it.\n   * @param json The schema to be added.\n   * @param replace True to replace an existing schema with the same name.\n   */\n  public addSchema(name: string, schema: object, replace = false): void {\n    const old = this._ajv.getSchema(name);\n    if (old) {\n      if (replace) {\n        this._ajv.removeSchema(name);\n      } else {\n        return;\n      }\n    }\n    this._ajv.addSchema(schema, name);\n  }\n\n  /**\n   * Fetch the schema and add it to the validator schema set.\n   * @param name The name of the schema; this will be used as the key to store it.\n   * @param urlPath The URL path of the schema to load.\n   */\n  public loadSchema(name: string, urlPath: string): void {\n    this.http\n      .get(urlPath)\n      .subscribe(result => this._ajv.addSchema(result, name));\n  }\n\n  /**\n   * Validate data against a schema.\n   * @param name The name of the schema to validate.\n   * @param data The data to validate.\n   */\n  public validateData(name: string, data: T): ValidationResult {\n    const valid = this._ajv.validate(name, data) as boolean;\n    return {\n      valid: valid,\n      errorsText: this._ajv.errorsText()\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/core/src/lib/datation.ts\n            \n            class\n            Datation\n            \n                52 %\n                (13/25)\n            \n        \n        \n            \n                \n                libs/core/src/lib/datation.ts\n            \n            interface\n            DatationFormatOptions\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/datation.ts\n            \n            interface\n            DatationModel\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                libs/core/src/lib/datation.ts\n            \n            variable\n            DATATION_FORMAT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/core/src/lib/guards/pending-changes.guard.ts\n            \n            interface\n            ComponentCanDeactivate\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/core/src/lib/guards/pending-changes.guard.ts\n            \n            guard\n            PendingChangesGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/core/src/lib/historical-date.ts\n            \n            class\n            HistoricalDate\n            \n                55 %\n                (11/20)\n            \n        \n        \n            \n                \n                libs/core/src/lib/historical-date.ts\n            \n            interface\n            HistoricalDateModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/historical-date.ts\n            \n            variable\n            APPROX_DELTA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            DataPage\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            ErrorWrapper\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            ExistResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            FacetDefinition\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            FlagDefinition\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            Fragment\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            HasVersion\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            Item\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            ItemFilter\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            ItemInfo\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            LayerHint\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            LayerPartInfo\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            LoginCredentials\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            LoginResult\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            Part\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            PartDefinition\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            PartEditorKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            PartGroup\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            PartGroupKey\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            PartTypeIds\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            PasswordChange\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            RegistrationModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            TextCoords\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            TextLayerPart\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            ThesauriSet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            Thesaurus\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            ThesaurusEntry\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            ThesaurusFilter\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            TokenTextLayerLine\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            User\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            UserFilter\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                libs/core/src/lib/models.ts\n            \n            interface\n            UserInfo\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                libs/core/src/lib/roman-number.ts\n            \n            class\n            RomanNumber\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/env.service.provider.ts\n            \n            variable\n            EnvServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/env.service.provider.ts\n            \n            variable\n            EnvServiceProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/env.service.ts\n            \n            injectable\n            EnvService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/gravatar.service.ts\n            \n            injectable\n            GravatarService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/json-schema.service.ts\n            \n            injectable\n            JsonSchemaService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/json-schema.service.ts\n            \n            interface\n            ValidationResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/library-route.service.ts\n            \n            injectable\n            LibraryRouteService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/text-layer.service.ts\n            \n            injectable\n            TextLayerService\n            \n                48 %\n                (12/25)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/text-layer.service.ts\n            \n            interface\n            SelectedRange\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/core/src/lib/services/util.service.ts\n            \n            injectable\n            UtilService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/core/src/lib/text-range.ts\n            \n            class\n            TextRange\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                libs/core/src/lib/token-location.ts\n            \n            class\n            TokenLocation\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                libs/core/src/lib/token-point.ts\n            \n            class\n            TokenPoint\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                libs/core/src/lib/validators/password.validator.ts\n            \n            class\n            PasswordValidator\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.9\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.9\n        \n            @angular/compiler : ^9.1.9\n        \n            @angular/core : ^9.1.9\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/forms : ^9.1.9\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.9\n        \n            @angular/platform-browser-dynamic : ^9.1.9\n        \n            @angular/router : ^9.1.9\n        \n            @auth0/angular-jwt : ^3.0.1\n        \n            @datorama/akita : ^4.16.0\n        \n            @datorama/akita-ngdevtools : ^3.0.2\n        \n            @nrwl/angular : 9.3.0\n        \n            @types/diff-match-patch : ^1.0.32\n        \n            @types/gravatar : ^1.8.0\n        \n            @types/rangy : 0.0.33\n        \n            ajv : ^6.10.2\n        \n            core-js : ^2.5.4\n        \n            diff-match-patch : ^1.0.4\n        \n            gravatar : ^1.8.0\n        \n            moment : ^2.24.0\n        \n            ngx-markdown : ^8.2.1\n        \n            ngx-moment : ^3.5.0\n        \n            ngx-monaco-editor : ^8.1.1\n        \n            rangy : ^1.3.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HistoricalDateType   (libs/.../historical-date.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/core/src/lib/historical-date.ts\n    \n        \n            \n                \n                    \n                        \n                        HistoricalDateType\n                    \n                \n                    \n                        \n                            Type of historical date.\n\n                        \n                    \n                        \n                            \n                                 undefined\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 point\n                            \n                        \n                        \n                            \n                                 range\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCadmus\nThis project was generated using Nx.\n\nnpx create-nx-workspace@latest cadmus.\nnx migrate @nrwl/workspace to eventually upgrade nrwl.\nng update if some packages are still outdated.\n\nView dependencies: nx dep-graph.\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nManually build Docker image: e.g. docker build . -t naftis/fusi:cadmusweb.\nDocumentation with Compodoc\n\nmain site\nadditional docs and monorepos\n\nEnsure that you have installed compodoc globally: npm install -g @compodoc/compodoc.\nGenerate the documentation for each project like this: compodoc -p apps/demo/src/tsconfig.app.json -s.\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are some plugins which you can add to your workspace:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are sharable across libraries and applications. They can be imported from @cadmus/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    38 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APPROX_DELTA   (libs/.../historical-date.ts)\n                        \n                        \n                            DATATION_FORMAT_OPTIONS   (libs/.../datation.ts)\n                        \n                        \n                            EnvServiceFactory   (libs/.../env.service.provider.ts)\n                        \n                        \n                            EnvServiceProvider   (libs/.../env.service.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/core/src/lib/historical-date.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APPROX_DELTA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n\n    libs/core/src/lib/datation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATATION_FORMAT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatationFormatOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  aboutText: 'c.',\n  bcText: 'BC',\n  adText: 'AD',\n  dayNames: [\n    'sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'\n  ],\n  monthNames: [\n    'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'\n  ]\n}\n                        \n                    \n\n                \n                    \n                        Default options for formatting a datation.\n\n                    \n                \n\n            \n        \n\n    libs/core/src/lib/services/env.service.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EnvServiceFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n  // Create env\n  const env = new EnvService();\n\n  // Read environment variables from browser window\n  const browserWindow = window || {};\n  const browserWindowEnv = browserWindow['__env'] || {};\n\n  // Assign environment variables from browser window to env\n  // In the current implementation, properties from env.js\n  // overwrite defaults from the EnvService.\n  // If needed, a deep merge can be performed here to merge\n  // properties instead of overwriting them.\n  for (const key in browserWindowEnv) {\n    if (browserWindowEnv.hasOwnProperty(key)) {\n      env[key] = window['__env'][key];\n    }\n  }\n\n  return env;\n}\n                        \n                    \n\n                \n                    \n                        This function creates an instance of EnvService and copies\nall the properties from window.__env object into it.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EnvServiceProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: EnvService,\n  useFactory: EnvServiceFactory,\n  deps: []\n}\n                        \n                    \n\n                \n                    \n                        A provider recipe for the EnvService.\nThis must be registered in the applications providers array.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
